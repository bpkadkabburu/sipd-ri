"use strict";
(self.webpackChunkdemo1 = self.webpackChunkdemo1 || []).push([
    [8270],
    {
        32609: (Ya, La, D) => {
            D.d(La, { ce: () => X });
            class X {
                constructor() {
                    (this.konfigurasiSession = JSON.parse(localStorage.getItem("sipd-konfigurasi"))),
                        (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))),
                        (this.consistentData = { tahun: this.konfigurasiSession.tahun, id_daerah: this.userSession.daerah_id }),
                        (this.paramDataSsh = { kelompok: "1", tipe: "SSH" }),
                        (this.paramDataHspk = { kelompok: "2", tipe: "HSPK" }),
                        (this.paramDataAsb = { kelompok: "3", tipe: "ASB" }),
                        (this.paramDataSbu = { kelompok: "4", tipe: "SBU" });
                }
            }
        },
        32928: (Ya, La, D) => {
            D.d(La, { f: () => xa });
            var j = D(92340),
                p = D(5e3),
                wa = D(40520);
            let xa = (() => {
                class O {
                    constructor(S) {
                        (this.http = S), (this.API_URL = `${j.N.apiUrlMaster}`);
                    }
                    list(S) {
                        return this.http.post(`${this.API_URL}/akun/listNew`, S);
                    }
                    find(S) {
                        return this.http.post(`${this.API_URL}/akun/find`, S);
                    }
                    findByIdAkunList(S) {
                        return this.http.post(`${this.API_URL}/akun/find_by_id_akun_list`, S);
                    }
                    findAkunForKomponen(S) {
                        return this.http.post(`${this.API_URL}/akun/find_akun_for_komponen`, S);
                    }
                    findAkunForPendapatan(S) {
                        return this.http.post(`${this.API_URL}/akun/find_akun_for_pendapatan_pembiayaan`, S);
                    }
                    findAkunForPendapatanPembiayaan(S) {
                        return this.http.post(`${this.API_URL}/akun/find_akun_for_pendapatan_pembiayaan`, S);
                    }
                    add(S) {
                        return this.http.post(`${this.API_URL}/akun/add`, S);
                    }
                    view(S) {
                        return this.http.post(`${this.API_URL}/akun/view`, S);
                    }
                    getById(S) {
                        return this.http.post(`${this.API_URL}/akun/get_by_id`, S);
                    }
                    update(S) {
                        return this.http.post(`${this.API_URL}/akun/update`, S);
                    }
                    delete(S) {
                        return this.http.post(`${this.API_URL}/akun/delete`, S);
                    }
                    cekAkses(S) {
                        return this.http.post(`${this.API_URL}/ref_group_menu/check_access`, S);
                    }
                }
                return (
                    (O.ɵfac = function (S) {
                        return new (S || O)(p.LFG(wa.eN));
                    }),
                    (O.ɵprov = p.Yz7({ token: O, factory: O.ɵfac, providedIn: "root" })),
                    O
                );
            })();
        },
        59219: (Ya, La, D) => {
            D.d(La, { b: () => xa });
            var j = D(92340),
                p = D(5e3),
                wa = D(40520);
            let xa = (() => {
                class O {
                    constructor(S) {
                        (this.http = S), (this.API_URL = `${j.N.apiUrlMaster}`);
                    }
                    list(S) {
                        return this.http.post(`${this.API_URL}/bidang_urusan/list`, S);
                    }
                    listAll(S) {
                        return this.http.post(`${this.API_URL}/bidang_urusan/listAll`, S);
                    }
                    listAllData(S) {
                        return this.http.post(`${this.API_URL}/bidang_urusan/listAllData`, S);
                    }
                    listByTahun(S) {
                        return this.http.post(`${this.API_URL}/bidang_urusan/list_by_tahun`, S);
                    }
                    search(S) {
                        return this.http.post(`${this.API_URL}/bidang_urusan/search`, S);
                    }
                    find(S) {
                        return this.http.post(`${this.API_URL}/bidang_urusan/find`, S);
                    }
                    findByIdSkpd(S) {
                        return this.http.post(`${this.API_URL}/bidang_urusan/find_by_id_skpd`, S);
                    }
                    findByIdSkpdList(S) {
                        return this.http.post(`${this.API_URL}/bidang_urusan/find_by_id_skpd_list`, S);
                    }
                    findByIdBidangUrusanList(S) {
                        return this.http.post(`${this.API_URL}/bidang_urusan/find_by_id_bidang_urusan_list`, S);
                    }
                    add(S) {
                        return this.http.post(this.API_URL + "/bidang_urusan/add", S);
                    }
                    view(S, L) {
                        return this.http.get(`${this.API_URL}/bidang_urusan/view/${S}/${L}`);
                    }
                    update(S) {
                        return this.http.post(this.API_URL + "/bidang_urusan/update", S);
                    }
                    delete(S) {
                        return this.http.post(this.API_URL + "/bidang_urusan/delete", S);
                    }
                    cekAkses(S) {
                        return this.http.post(`${this.API_URL}/ref_group_menu/check_access`, S);
                    }
                }
                return (
                    (O.ɵfac = function (S) {
                        return new (S || O)(p.LFG(wa.eN));
                    }),
                    (O.ɵprov = p.Yz7({ token: O, factory: O.ɵfac, providedIn: "root" })),
                    O
                );
            })();
        },
        51518: (Ya, La, D) => {
            D.d(La, { X: () => xa });
            var j = D(92340),
                p = D(5e3),
                wa = D(40520);
            let xa = (() => {
                class O {
                    constructor(S) {
                        (this.http = S), (this.API_URL = `${j.N.apiUrlMaster}`);
                    }
                    list(S) {
                        return this.http.post(`${this.API_URL}/giat/list`, S);
                    }
                    find(S) {
                        return this.http.post(`${this.API_URL}/giat/find`, S);
                    }
                    listByTahun(S) {
                        return this.http.post(`${this.API_URL}/giat/list_by_tahun`, S);
                    }
                    findByDaerahAndTahun(S) {
                        return this.http.post(`${this.API_URL}/giat/find_by_daerah_and_tahun`, S);
                    }
                    findByIdGiatList(S) {
                        return this.http.post(`${this.API_URL}/giat/find_by_id_giat_list`, S);
                    }
                    findByIdBidangUrusan(S) {
                        return this.http.post(this.API_URL + "/giat/find_by_id_bidang_urusan", S);
                    }
                    add(S) {
                        return this.http.post(this.API_URL + "/giat/add", S);
                    }
                    delete(S) {
                        return this.http.post(`${this.API_URL}/giat/delete`, S);
                    }
                    view(S, L) {
                        return this.http.get(`${this.API_URL}/giat/view/${S}/${L}`);
                    }
                    viewByIdWithKode(S) {
                        return this.http.post(`${this.API_URL}/giat/viewByIdWithKode`, S);
                    }
                    update(S) {
                        return this.http.post(this.API_URL + "/giat/update", S);
                    }
                    cekAkses(S) {
                        return this.http.post(`${this.API_URL}/ref_group_menu/check_access`, S);
                    }
                    search(S) {
                        return this.http.post(`${this.API_URL}/giat/search`, S);
                    }
                    searchbyProgram(S) {
                        return this.http.post(`${this.API_URL}/giat/search_by_program`, S);
                    }
                }
                return (
                    (O.ɵfac = function (S) {
                        return new (S || O)(p.LFG(wa.eN));
                    }),
                    (O.ɵprov = p.Yz7({ token: O, factory: O.ɵfac, providedIn: "root" })),
                    O
                );
            })();
        },
        76209: (Ya, La, D) => {
            D.d(La, { Z: () => xa });
            var j = D(92340),
                p = D(5e3),
                wa = D(40520);
            let xa = (() => {
                class O {
                    constructor(S) {
                        (this.http = S), (this.API_URL = `${j.N.apiUrlMaster}`);
                    }
                    find(S) {
                        return this.http.post(`${this.API_URL}/program/find`, S);
                    }
                    search(S) {
                        return this.http.post(`${this.API_URL}/program/search`, S);
                    }
                    list(S) {
                        return this.http.post(`${this.API_URL}/program/list`, S);
                    }
                    listAll(S) {
                        return this.http.post(this.API_URL + "/program/listAll", S);
                    }
                    listByTahun(S) {
                        return this.http.post(this.API_URL + "/program/list_by_tahun", S);
                    }
                    findByDaerahAndTahun(S) {
                        return this.http.post(this.API_URL + "/program/find_by_daerah_and_tahun", S);
                    }
                    findByIdProgramList(S) {
                        return this.http.post(this.API_URL + "/program/find_by_id_program_list", S);
                    }
                    findByIdProgramListAll(S) {
                        return this.http.post(this.API_URL + "/program/find_by_id_program_list_all", S);
                    }
                    findByIdBidangUrusan(S) {
                        return this.http.post(this.API_URL + "/program/find_by_id_bidang_urusan", S);
                    }
                    findByKodeSasaranRpjmd(S) {
                        return this.http.post(this.API_URL + "/program/find_by_kode_sasaran_rpjmd", S);
                    }
                    findforKamusUsulan(S) {
                        return this.http.post(`${this.API_URL}/program/find_kamus_usulan`, S);
                    }
                    add(S) {
                        return this.http.post(this.API_URL + "/program/add", S);
                    }
                    delete(S) {
                        return this.http.post(`${this.API_URL}/program/delete`, S);
                    }
                    view(S, L) {
                        return this.http.get(`${this.API_URL}/program/view/${S}/${L}`);
                    }
                    viewByIdWithKode(S) {
                        return this.http.post(`${this.API_URL}/program/viewByIdWithKode`, S);
                    }
                    update(S) {
                        return this.http.post(this.API_URL + "/program/update", S);
                    }
                    roleAccess(S) {
                        return this.http.post(`${j.N.apiUrlMaster}/ref_group_menu/check_access`, S);
                    }
                }
                return (
                    (O.ɵfac = function (S) {
                        return new (S || O)(p.LFG(wa.eN));
                    }),
                    (O.ɵprov = p.Yz7({ token: O, factory: O.ɵfac, providedIn: "root" })),
                    O
                );
            })();
        },
        65671: (Ya, La, D) => {
            D.d(La, { y: () => xa });
            var j = D(92340),
                p = D(5e3),
                wa = D(40520);
            let xa = (() => {
                class O {
                    constructor(S) {
                        (this.http = S), (this.API_URL = `${j.N.apiUrlMaster}`);
                    }
                    list(S) {
                        return this.http.post(`${this.API_URL}/satuan/list`, S);
                    }
                    listAll(S) {
                        return this.http.post(`${this.API_URL}/satuan/listAll`, S);
                    }
                    add(S) {
                        return this.http.post(this.API_URL + "/satuan/add", S);
                    }
                    view(S) {
                        return this.http.get(`${this.API_URL}/satuan/view/${S}`);
                    }
                    viewData(S, L) {
                        return this.http.get(`${this.API_URL}/satuan/viewData/${S}/${L}`);
                    }
                    viewDataPost(S) {
                        return this.http.post(`${this.API_URL}/satuan/viewDataPost`, S);
                    }
                    update(S) {
                        return this.http.post(this.API_URL + "/satuan/update", S);
                    }
                    delete(S) {
                        return this.http.post(this.API_URL + "/satuan/delete", S);
                    }
                    roleAccess(S) {
                        return this.http.post(`${j.N.apiUrlMaster}/ref_group_menu/check_access`, S);
                    }
                }
                return (
                    (O.ɵfac = function (S) {
                        return new (S || O)(p.LFG(wa.eN));
                    }),
                    (O.ɵprov = p.Yz7({ token: O, factory: O.ɵfac, providedIn: "root" })),
                    O
                );
            })();
        },
        18255: (Ya, La, D) => {
            D.d(La, { u: () => xa });
            var j = D(92340),
                p = D(5e3),
                wa = D(40520);
            let xa = (() => {
                class O {
                    constructor(S) {
                        (this.http = S), (this.API_URL = `${j.N.apiUrlMaster}`);
                    }
                    list(S) {
                        return this.http.post(`${this.API_URL}/sub_rkpd/list`, S);
                    }
                    listAll() {
                        return this.http.get(`${this.API_URL}/sub_rkpd/listall`);
                    }
                    add(S) {
                        return this.http.post(this.API_URL + "/sub_rkpd/add", S);
                    }
                    view(S) {
                        return this.http.get(`${this.API_URL}/sub_rkpd/view/${S}`);
                    }
                    update(S) {
                        return this.http.post(this.API_URL + "/sub_rkpd/update", S);
                    }
                    delete(S) {
                        return this.http.post(this.API_URL + "/sub_rkpd/delete", S);
                    }
                }
                return (
                    (O.ɵfac = function (S) {
                        return new (S || O)(p.LFG(wa.eN));
                    }),
                    (O.ɵprov = p.Yz7({ token: O, factory: O.ɵfac, providedIn: "root" })),
                    O
                );
            })();
        },
        88812: (Ya, La, D) => {
            D.d(La, { S: () => xa });
            var j = D(92340),
                p = D(5e3),
                wa = D(40520);
            let xa = (() => {
                class O {
                    constructor(S) {
                        (this.http = S), (this.API_URL = `${j.N.apiUrlMaster}`);
                    }
                    list(S) {
                        return this.http.post(`${this.API_URL}/urusan/list`, S);
                    }
                    listAll(S) {
                        return this.http.post(`${this.API_URL}/urusan/listAll`, S);
                    }
                    listAllData(S) {
                        return this.http.post(`${this.API_URL}/urusan/listAllData`, S);
                    }
                    find(S) {
                        return this.http.post(`${this.API_URL}/urusan/find`, S);
                    }
                    listByTahun(S) {
                        return this.http.post(`${this.API_URL}/urusan/list_by_tahun`, S);
                    }
                    add(S) {
                        return this.http.post(this.API_URL + "/urusan/add", S);
                    }
                    view(S, L) {
                        return this.http.get(`${this.API_URL}/urusan/view/${S}/${L}`);
                    }
                    delete(S) {
                        return this.http.post(`${this.API_URL}/urusan/delete`, S);
                    }
                    update(S) {
                        return this.http.post(this.API_URL + "/urusan/update", S);
                    }
                    findByIdUrusanList(S) {
                        return this.http.post(`${this.API_URL}/urusan/find_by_id_urusan_list`, S);
                    }
                }
                return (
                    (O.ɵfac = function (S) {
                        return new (S || O)(p.LFG(wa.eN));
                    }),
                    (O.ɵprov = p.Yz7({ token: O, factory: O.ɵfac, providedIn: "root" })),
                    O
                );
            })();
        },
        38270: (Ya, La, D) => {
            D.r(La), D.d(La, { RenjaCascadingModule: () => G_ });
            var j = D(69808),
                p = D(93075),
                wa = D(77446),
                xa = D(67322),
                O = D(77531),
                X = D(79062),
                S = D(84847),
                L = D(32075),
                Aa = D(4521),
                aa = D(39483),
                Ma = D(44619),
                ot = D(91470),
                _e = D(44466),
                Ue = D(57020),
                a = D(5e3);
            let Ze = (() => {
                class i {}
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)();
                    }),
                    (i.ɵmod = a.oAB({ type: i })),
                    (i.ɵinj = a.cJS({ imports: [[j.ez, p.u5, p.UX, Ma.vi, O.c, xa.lN, L.p0, S.JX, X.TU, aa.IJ, _e.m]] })),
                    i
                );
            })();
            var Pa = D(40520),
                Ja = D(53583),
                Qa = (D(12983), D(70846)),
                z = D(77579),
                ha = D(78372),
                ga = D(39300),
                ma = D(56451),
                ba = D(71884),
                va = D(63900),
                ka = D(54004),
                fa = D(18505),
                Sa = D(70262),
                ja = D(39646),
                Ka = D(92340);
            let lt = (() => {
                class i {
                    constructor(t) {
                        (this.http = t), (this.API_URL = `${Ka.N.apiUrlRenja}`);
                    }
                    list(t) {
                        return this.http.post(this.API_URL + "/ket_sub_bl/list", t);
                    }
                    find_by_id_list(t) {
                        return this.http.post(this.API_URL + "/ket_sub_bl/find_by_id_list", t);
                    }
                    add(t) {
                        return this.http.post(this.API_URL + "/ket_sub_bl/add", t);
                    }
                    view(t, e) {
                        return this.http.post(this.API_URL + `/ket_sub_bl/view/${t}`, e);
                    }
                    update(t) {
                        return this.http.post(this.API_URL + "/ket_sub_bl/update", t);
                    }
                    getByIdSubBl(t) {
                        return this.http.post(this.API_URL + "/ket_sub_bl/get_by_id_sub_bl", t);
                    }
                    find(t) {
                        return this.http.post(this.API_URL + "/ket_sub_bl/find", t);
                    }
                    findByIdSubBl(t) {
                        return this.http.post(this.API_URL + "/ket_sub_bl/find_by_id_sub_bl", t);
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.LFG(Pa.eN));
                    }),
                    (i.ɵprov = a.Yz7({ token: i, factory: i.ɵfac, providedIn: "root" })),
                    i
                );
            })();
            function Pe(i, d) {
                1 & i && (a.ynx(0), a._uU(1, "Simpan"), a.BQk());
            }
            function Ne(i, d) {
                1 & i && (a.ynx(0), a.TgZ(1, "span", 16), a._uU(2), a._UZ(3, "span", 17), a.qZA(), a.BQk()), 2 & i && (a.xp6(1), a.Udp("display", "block"), a.xp6(1), a.hij(" Menyimpan...", " ", " "));
            }
            function Me(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "form", 6),
                        a.NdJ("submit", function () {
                            return a.CHM(t), a.oxw().onSubmit();
                        }),
                        a.TgZ(1, "div", 7)(2, "div", 8)(3, "label", 9),
                        a._uU(4, "Keterangan "),
                        a.qZA(),
                        a.TgZ(5, "div", 10),
                        a._UZ(6, "input", 11),
                        a.qZA()()(),
                        a.TgZ(7, "div", 12)(8, "span", 13),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().activeModal.close("Close click");
                        }),
                        a._uU(9, " Tutup "),
                        a.qZA(),
                        a.TgZ(10, "button", 14),
                        a.YNc(11, Pe, 2, 0, "ng-container", 15),
                        a.YNc(12, Ne, 4, 3, "ng-container", 15),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw();
                    a.Q6J("formGroup", t.rincianKeteranganForm), a.xp6(10), a.Q6J("disabled", t.rincianKeteranganForm.invalid || t.isSaving), a.xp6(1), a.Q6J("ngIf", !t.isSaving), a.xp6(1), a.Q6J("ngIf", t.isSaving);
                }
            }
            let mt = (() => {
                class i {
                    constructor(t, e) {
                        (this.activeModal = t),
                            (this.keteranganBelanjaService = e),
                            (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))),
                            (this.pageTitle = "Tambah Keterangan Belanja"),
                            (this.mode = "create"),
                            (this.isSaving = !1);
                    }
                    ngOnInit() {
                        this.buildForm(), this.loadKeteranganBelanja();
                    }
                    onSubmit() {
                        var t, e, n, s, o, l, _, r, u, k, m, v, g, C, h, f, y, B, F, c;
                        let b;
                        const I = new FormData();
                        I.append("ket_bl_teks", this.rincianKeteranganForm.value.ket_bl_teks),
                            I.append("id_bl", String((null === (t = this.subBelanja) || void 0 === t ? void 0 : t.id_bl) || 0)),
                            I.append("id_sub_bl", String((null === (e = this.subBelanja) || void 0 === e ? void 0 : e.id_sub_bl) || 0)),
                            I.append("tahun", String((null === (n = this.subBelanja) || void 0 === n ? void 0 : n.tahun) || 0)),
                            I.append("id_daerah", String((null === (s = this.subBelanja) || void 0 === s ? void 0 : s.id_daerah) || 0)),
                            I.append("id_unit", String((null === (o = this.subBelanja) || void 0 === o ? void 0 : o.id_unit) || 0)),
                            I.append("id_skpd", String((null === (l = this.subBelanja) || void 0 === l ? void 0 : l.id_skpd) || 0)),
                            I.append("id_sub_skpd", String((null === (_ = this.subBelanja) || void 0 === _ ? void 0 : _.id_sub_skpd) || 0)),
                            I.append("id_program", String((null === (r = this.subBelanja) || void 0 === r ? void 0 : r.id_program) || 0)),
                            I.append("id_giat", String((null === (u = this.subBelanja) || void 0 === u ? void 0 : u.id_giat) || 0)),
                            I.append("id_sub_giat", String((null === (k = this.subBelanja) || void 0 === k ? void 0 : k.id_sub_giat) || 0)),
                            I.append("nama_daerah", (null === (m = this.subBelanja) || void 0 === m ? void 0 : m.nama_daerah) || ""),
                            I.append("nama_unit", (null === (v = this.subBelanja) || void 0 === v ? void 0 : v.nama_unit) || ""),
                            I.append("nama_skpd", (null === (g = this.subBelanja) || void 0 === g ? void 0 : g.nama_skpd) || ""),
                            I.append("nama_sub_skpd", (null === (C = this.subBelanja) || void 0 === C ? void 0 : C.nama_sub_skpd) || ""),
                            I.append("nama_program", (null === (h = this.subBelanja) || void 0 === h ? void 0 : h.nama_program) || ""),
                            I.append("nama_giat", (null === (f = this.subBelanja) || void 0 === f ? void 0 : f.nama_giat) || ""),
                            I.append("nama_sub_giat", (null === (y = this.subBelanja) || void 0 === y ? void 0 : y.nama_sub_giat) || ""),
                            I.append("id_daerah_log", null === (B = this.userSession) || void 0 === B ? void 0 : B.daerah_id),
                            I.append("id_user_log", null === (F = this.userSession) || void 0 === F ? void 0 : F.user_id),
                            "create" === this.mode
                                ? (b = this.keteranganBelanjaService.add(I))
                                : "update" === this.mode && (I.append("id_ket_sub_bl", String((null === (c = this.keteranganBelanja) || void 0 === c ? void 0 : c.id_ket_sub_bl) || 0)), (b = this.keteranganBelanjaService.update(I))),
                            (this.isSaving = !0),
                            null == b ||
                                b.subscribe({
                                    next: () => {
                                        (this.isSaving = !1), this.activeModal.close();
                                    },
                                    error: () => {
                                        this.isSaving = !1;
                                    },
                                });
                    }
                    buildForm() {
                        this.rincianKeteranganForm = new p.cw({ ket_bl_teks: new p.NI("", [p.kI.required, p.kI.maxLength(255)]) });
                    }
                    loadKeteranganBelanja() {
                        var t;
                        "update" === this.mode && this.rincianKeteranganForm.patchValue({ ket_bl_teks: null === (t = this.keteranganBelanja) || void 0 === t ? void 0 : t.ket_bl_teks });
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(aa.Kz), a.Y36(lt));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-keterangan-form"]],
                        decls: 7,
                        vars: 1,
                        consts: [
                            [1, "modal-header"],
                            [1, "fw-bolder", "m-0"],
                            ["type", "button", "aria-label", "Close", 1, "btn-close", 3, "click"],
                            [1, "card", "mb-3"],
                            [1, "collapse", "show"],
                            ["novalidate", "", "class", "form", 3, "formGroup", "submit", 4, "ngIf"],
                            ["novalidate", "", 1, "form", 3, "formGroup", "submit"],
                            [1, "card-body", "border-top", "p-9"],
                            [1, "row", "mb-6"],
                            ["for", "ket_bl_teks", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [1, "col-lg-8", "fv-row"],
                            ["formControlName", "ket_bl_teks", "id", "ket_bl_teks", "placeholder", "Keterangan", "maxlength", "255", 1, "form-control"],
                            [1, "card-footer", "d-flex", "justify-content-between", "py-5", "px-9"],
                            [1, "btn", "btn-outline-danger", 3, "click"],
                            ["type", "submit", 1, "btn", "btn-success", 3, "disabled"],
                            [4, "ngIf"],
                            ["clas", "indicator-progress"],
                            [1, "spinner-border", "spinner-border-sm", "align-middle", "ms-2"],
                        ],
                        template: function (t, e) {
                            1 & t &&
                                (a.TgZ(0, "div", 0)(1, "h3", 1),
                                a._uU(2, "Tambah Keterangan"),
                                a.qZA(),
                                a.TgZ(3, "button", 2),
                                a.NdJ("click", function () {
                                    return e.activeModal.dismiss("Cross click");
                                }),
                                a.qZA()(),
                                a.TgZ(4, "div", 3)(5, "div", 4),
                                a.YNc(6, Me, 13, 4, "form", 5),
                                a.qZA()()),
                                2 & t && (a.xp6(6), a.Q6J("ngIf", e.rincianKeteranganForm));
                        },
                        directives: [j.O5, p._Y, p.JL, p.sg, p.Fj, p.JJ, p.u, p.nD],
                        styles: [""],
                    })),
                    i
                );
            })();
            var Na = D(22290),
                Ra = D(64942),
                Wa = D(11363);
            let rt = (() => {
                class i {
                    constructor(t) {
                        (this.http = t), (this.API_URL = `${Ka.N.apiUrlRenja}`);
                    }
                    list(t) {
                        return this.http.post(this.API_URL + "/subs_sub_bl/list", t);
                    }
                    find_by_id_list(t) {
                        return this.http.post(this.API_URL + "/subs_sub_bl/find_by_id_list", t);
                    }
                    add(t) {
                        return this.http.post(this.API_URL + "/subs_sub_bl/add", t);
                    }
                    view(t, e) {
                        return this.http.post(this.API_URL + `/subs_sub_bl/view/${t}`, e);
                    }
                    update(t) {
                        return this.http.post(this.API_URL + "/subs_sub_bl/update", t);
                    }
                    find(t) {
                        return this.http.post(`${this.API_URL}/subs_sub_bl/find`, t);
                    }
                    findByIdSubBl(t) {
                        return this.http.post(this.API_URL + "/subs_sub_bl/find_by_id_sub_bl", t);
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.LFG(Pa.eN));
                    }),
                    (i.ɵprov = a.Yz7({ token: i, factory: i.ɵfac, providedIn: "root" })),
                    i
                );
            })();
            function Ke(i, d) {
                1 & i && (a.TgZ(0, "div", 6), a._UZ(1, "div", 7), a.qZA());
            }
            function Je(i, d) {
                1 & i && (a.ynx(0), a._uU(1, "Simpan"), a.BQk());
            }
            function qe(i, d) {
                1 & i && (a.ynx(0), a.TgZ(1, "span", 24), a._uU(2), a._UZ(3, "span", 25), a.qZA(), a.BQk()), 2 & i && (a.xp6(1), a.Udp("display", "block"), a.xp6(1), a.hij(" Menyimpan...", " ", " "));
            }
            function Ye(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "form", 10),
                        a.NdJ("submit", function () {
                            return a.CHM(t), a.oxw(2).onSubmit();
                        }),
                        a.TgZ(1, "div", 11)(2, "div", 12)(3, "label", 13),
                        a._uU(4, "Pemaketan Kerja/Pengelompokan Belanja"),
                        a.qZA(),
                        a.TgZ(5, "div", 14)(6, "select", 15)(7, "option", 16),
                        a._uU(8, "Pilih Paket/Kelompok..."),
                        a.qZA(),
                        a.TgZ(9, "option", 17),
                        a._uU(10, " Pemaketan Kerja "),
                        a.qZA(),
                        a.TgZ(11, "option", 18),
                        a._uU(12, " Pengelompokan Belanja "),
                        a.qZA()()()(),
                        a.TgZ(13, "div", 12)(14, "label", 13),
                        a._uU(15, "Uraian Pemaketan Kerja/Pengelompokan Belanja"),
                        a.qZA(),
                        a.TgZ(16, "div", 14),
                        a._UZ(17, "input", 19),
                        a.qZA()()(),
                        a.TgZ(18, "div", 20)(19, "span", 21),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).activeModal.close("Close click");
                        }),
                        a._uU(20, " Tutup "),
                        a.qZA(),
                        a.TgZ(21, "button", 22),
                        a.YNc(22, Je, 2, 0, "ng-container", 23),
                        a.YNc(23, qe, 4, 3, "ng-container", 23),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw(2);
                    a.Q6J("formGroup", t.paketBelanjaForm),
                        a.xp6(9),
                        a.Q6J("selected", 1 == (null == t.paketBelanja ? null : t.paketBelanja.is_paket)),
                        a.xp6(2),
                        a.Q6J("selected", 2 == (null == t.paketBelanja ? null : t.paketBelanja.is_paket)),
                        a.xp6(10),
                        a.Q6J("disabled", t.paketBelanjaForm.invalid || t.isSaving),
                        a.xp6(1),
                        a.Q6J("ngIf", !t.isSaving),
                        a.xp6(1),
                        a.Q6J("ngIf", t.isSaving);
                }
            }
            function We(i, d) {
                if ((1 & i && (a.TgZ(0, "div", 8), a.YNc(1, Ye, 24, 6, "form", 9), a.qZA()), 2 & i)) {
                    const t = a.oxw();
                    a.xp6(1), a.Q6J("ngIf", t.paketBelanjaForm);
                }
            }
            let Ge = (() => {
                    class i {
                        constructor(t, e, n, s, o) {
                            (this.activeModal = t),
                                (this.toastr = e),
                                (this.konfigurasiService = n),
                                (this.subBelanjaService = s),
                                (this.paketBelanjaService = o),
                                (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))),
                                (this.pageTitle = "Tambah Paket Belanja"),
                                (this.mode = "edit"),
                                (this.paketBelanjaIsLoading = !1),
                                (this.isSaving = !1);
                        }
                        ngOnInit() {
                            const t = new FormData();
                            t.append("tahun", this.konfigurasiService.getTahun()),
                                t.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                (this.subBelanjaIsLoading = !0),
                                this.subBelanjaService.view(String(this.id_sub_bl), t).subscribe({
                                    next: (e) => {
                                        (this.subBelanjaIsLoading = !1), (this.subBelanja = e.data[0]), this.buildForm(), this.loadRincianBelanjaPaket();
                                    },
                                    error: (e) => {
                                        this.subBelanjaIsLoading = !1;
                                    },
                                });
                        }
                        ngOnDestroy() {
                            var t;
                            null === (t = this.rincianBelanjaPaketSub) || void 0 === t || t.unsubscribe();
                        }
                        onSubmit() {
                            var t, e, n, s, o, l, _, r, u, k, m, v, g, C, h, f, y, B, F, c, b, I, x, q, T, P, Z, J, w, R, A, N, U, W, Y, Q, $, ea, ta, sa, la, E, ua, ra, oa, da, pa, na, V, H, ia, Ta, M, Ia, Ba, Da, Fa, Ua, Za, Ca, ya, _a;
                            if (null === (t = this.paketBelanjaForm) || void 0 === t ? void 0 : t.invalid) return void alert("Mohon semua kolom form diisi");
                            (this.isSaving = !0), null === (e = this.paketBelanjaForm) || void 0 === e || e.disable();
                            const G = new FormData();
                            G.append("subs_bl_teks", (null === (n = this.paketBelanjaForm) || void 0 === n ? void 0 : n.value.subs_bl_teks) || ""),
                                G.append("is_paket", String((null === (s = this.paketBelanjaForm) || void 0 === s ? void 0 : s.value.is_paket) || 0)),
                                G.append("id_jenis_barjas", String((null === (o = this.paketBelanja) || void 0 === o ? void 0 : o.id_jenis_barjas) || 0)),
                                G.append("id_metode_barjas", String((null === (l = this.paketBelanja) || void 0 === l ? void 0 : l.id_metode_barjas) || 0)),
                                G.append("id_skpd", String((null === (_ = this.paketBelanja) || void 0 === _ ? void 0 : _.id_skpd) || 0)),
                                G.append("id_sub_skpd", String((null === (r = this.paketBelanja) || void 0 === r ? void 0 : r.id_sub_skpd) || 0)),
                                G.append("id_program", String((null === (u = this.paketBelanja) || void 0 === u ? void 0 : u.id_program) || 0)),
                                G.append("id_giat", String((null === (k = this.paketBelanja) || void 0 === k ? void 0 : k.id_giat) || 0)),
                                G.append("id_sub_giat", String((null === (m = this.paketBelanja) || void 0 === m ? void 0 : m.id_sub_giat) || 0)),
                                G.append("nama_daerah", (null === (v = this.paketBelanja) || void 0 === v ? void 0 : v.nama_daerah) || ""),
                                G.append("nama_unit", (null === (g = this.paketBelanja) || void 0 === g ? void 0 : g.nama_unit) || ""),
                                G.append("nama_jenis_barjas", (null === (C = this.paketBelanja) || void 0 === C ? void 0 : C.nama_jenis_barjas) || ""),
                                G.append("nama_metode_barjas", (null === (h = this.paketBelanja) || void 0 === h ? void 0 : h.nama_metode_barjas) || ""),
                                G.append("nama_skpd", (null === (f = this.paketBelanja) || void 0 === f ? void 0 : f.nama_skpd) || ""),
                                G.append("nama_sub_skpd", (null === (y = this.paketBelanja) || void 0 === y ? void 0 : y.nama_sub_skpd) || ""),
                                G.append("nama_program", (null === (B = this.paketBelanja) || void 0 === B ? void 0 : B.nama_program) || ""),
                                G.append("nama_giat", (null === (F = this.paketBelanja) || void 0 === F ? void 0 : F.nama_giat) || ""),
                                G.append("nama_sub_giat", (null === (c = this.paketBelanja) || void 0 === c ? void 0 : c.nama_sub_giat) || ""),
                                G.append("id_daerah_log", null === (b = this.userSession) || void 0 === b ? void 0 : b.daerah_id),
                                G.append("id_user_log", null === (I = this.userSession) || void 0 === I ? void 0 : I.user_id),
                                "add" === this.mode
                                    ? (G.append("id_bl", String((null === (x = this.subBelanja) || void 0 === x ? void 0 : x.id_bl) || 0)),
                                      G.append("id_sub_bl", String((null === (q = this.subBelanja) || void 0 === q ? void 0 : q.id_sub_bl) || 0)),
                                      G.append("tahun", String((null === (T = this.subBelanja) || void 0 === T ? void 0 : T.tahun) || 0)),
                                      G.append("id_daerah", String((null === (P = this.subBelanja) || void 0 === P ? void 0 : P.id_daerah) || 0)),
                                      G.append("id_unit", String((null === (Z = this.subBelanja) || void 0 === Z ? void 0 : Z.id_unit) || 0)),
                                      G.set("id_skpd", String((null === (J = this.subBelanja) || void 0 === J ? void 0 : J.id_skpd) || 0)),
                                      G.set("id_sub_skpd", String((null === (w = this.subBelanja) || void 0 === w ? void 0 : w.id_sub_skpd) || 0)),
                                      G.set("id_program", String((null === (R = this.subBelanja) || void 0 === R ? void 0 : R.id_program) || 0)),
                                      G.set("id_giat", String((null === (A = this.subBelanja) || void 0 === A ? void 0 : A.id_giat) || 0)),
                                      G.set("id_sub_giat", String((null === (N = this.subBelanja) || void 0 === N ? void 0 : N.id_sub_giat) || 0)),
                                      G.append("nama_daerah", (null === (U = this.subBelanja) || void 0 === U ? void 0 : U.nama_daerah) || ""),
                                      G.append("nama_unit", (null === (W = this.subBelanja) || void 0 === W ? void 0 : W.nama_unit) || ""),
                                      G.append("nama_jenis_barjas", ""),
                                      G.append("nama_metode_barjas", ""),
                                      G.append("nama_skpd", (null === (Y = this.subBelanja) || void 0 === Y ? void 0 : Y.nama_skpd) || ""),
                                      G.append("nama_sub_skpd", (null === (Q = this.subBelanja) || void 0 === Q ? void 0 : Q.nama_sub_skpd) || ""),
                                      G.append("nama_program", (null === ($ = this.subBelanja) || void 0 === $ ? void 0 : $.nama_program) || ""),
                                      G.append("nama_giat", (null === (ea = this.subBelanja) || void 0 === ea ? void 0 : ea.nama_giat) || ""),
                                      G.append("nama_sub_giat", (null === (ta = this.subBelanja) || void 0 === ta ? void 0 : ta.nama_sub_giat) || ""),
                                      (this.rincianBelanjaPaketSub = this.paketBelanjaService.add(G).subscribe({
                                          next: (qa) => {
                                              (this.isSaving = !1), this.activeModal.close(qa), this.toastr.success("Data berhasil disimpan", "Sukses");
                                          },
                                          error: (qa) => {
                                              var ca;
                                              (this.isSaving = !1), null === (ca = this.paketBelanjaForm) || void 0 === ca || ca.enable(), this.toastr.error("Data gagal disimpan", "Error");
                                          },
                                      })))
                                    : (G.append("id_subs_sub_bl", String((null === (sa = this.paketBelanja) || void 0 === sa ? void 0 : sa.id_subs_sub_bl) || 0)),
                                      G.append("id_bl", String((null === (la = this.paketBelanja) || void 0 === la ? void 0 : la.id_bl) || 0)),
                                      G.append("id_sub_bl", String((null === (E = this.paketBelanja) || void 0 === E ? void 0 : E.id_sub_bl) || 0)),
                                      G.append("id_unik", String((null === (ua = this.paketBelanja) || void 0 === ua ? void 0 : ua.id_unik) || 0)),
                                      G.append("tahun", String((null === (ra = this.paketBelanja) || void 0 === ra ? void 0 : ra.tahun) || 0)),
                                      G.append("id_daerah", String((null === (oa = this.paketBelanja) || void 0 === oa ? void 0 : oa.id_daerah) || 0)),
                                      G.append("id_unit", String((null === (da = this.paketBelanja) || void 0 === da ? void 0 : da.id_unit) || 0)),
                                      G.append("id_jenis_barjas", String((null === (pa = this.paketBelanja) || void 0 === pa ? void 0 : pa.id_jenis_barjas) || 0)),
                                      G.append("id_metode_barjas", String((null === (na = this.paketBelanja) || void 0 === na ? void 0 : na.id_metode_barjas) || 0)),
                                      G.append("id_skpd", String((null === (V = this.paketBelanja) || void 0 === V ? void 0 : V.id_skpd) || 0)),
                                      G.append("id_sub_skpd", String((null === (H = this.paketBelanja) || void 0 === H ? void 0 : H.id_sub_skpd) || 0)),
                                      G.append("id_program", String((null === (ia = this.paketBelanja) || void 0 === ia ? void 0 : ia.id_program) || 0)),
                                      G.append("id_giat", String((null === (Ta = this.paketBelanja) || void 0 === Ta ? void 0 : Ta.id_giat) || 0)),
                                      G.append("id_sub_giat", String((null === (M = this.paketBelanja) || void 0 === M ? void 0 : M.id_sub_giat) || 0)),
                                      G.append("nama_daerah", (null === (Ia = this.paketBelanja) || void 0 === Ia ? void 0 : Ia.nama_daerah) || ""),
                                      G.append("nama_unit", (null === (Ba = this.paketBelanja) || void 0 === Ba ? void 0 : Ba.nama_unit) || ""),
                                      G.append("nama_jenis_barjas", (null === (Da = this.paketBelanja) || void 0 === Da ? void 0 : Da.nama_jenis_barjas) || ""),
                                      G.append("nama_metode_barjas", (null === (Fa = this.paketBelanja) || void 0 === Fa ? void 0 : Fa.nama_metode_barjas) || ""),
                                      G.append("nama_skpd", (null === (Ua = this.paketBelanja) || void 0 === Ua ? void 0 : Ua.nama_skpd) || ""),
                                      G.append("nama_sub_skpd", (null === (Za = this.paketBelanja) || void 0 === Za ? void 0 : Za.nama_sub_skpd) || ""),
                                      G.append("nama_program", (null === (Ca = this.paketBelanja) || void 0 === Ca ? void 0 : Ca.nama_program) || ""),
                                      G.append("nama_giat", (null === (ya = this.paketBelanja) || void 0 === ya ? void 0 : ya.nama_giat) || ""),
                                      G.append("nama_sub_giat", (null === (_a = this.paketBelanja) || void 0 === _a ? void 0 : _a.nama_sub_giat) || ""),
                                      (this.rincianBelanjaPaketSub = this.paketBelanjaService.update(G).subscribe({
                                          next: (qa) => {
                                              (this.isSaving = !1), this.activeModal.close(qa), this.toastr.success("Data berhasil disimpan", "Sukses");
                                          },
                                          error: (qa) => {
                                              var ca;
                                              (this.isSaving = !1), null === (ca = this.paketBelanjaForm) || void 0 === ca || ca.enable(), this.toastr.error("Data gagal disimpan", "Error");
                                          },
                                      })));
                        }
                        buildForm() {
                            this.paketBelanjaForm = new p.cw({ is_paket: new p.NI("", [p.kI.required]), subs_bl_teks: new p.NI("", [p.kI.required, p.kI.maxLength(255)]) });
                        }
                        loadRincianBelanjaPaket() {
                            if ("edit" === this.mode) {
                                this.pageTitle = "Ubah Paket Belanja";
                                const t = new FormData();
                                t.append("tahun", this.konfigurasiService.getTahun()),
                                    t.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                    (this.paketBelanjaIsLoading = !0),
                                    this.paketBelanjaService.view(String(this.id_subs_sub_bl || 0), t).subscribe({
                                        next: (e) => {
                                            var n;
                                            (this.paketBelanjaIsLoading = !1), (this.paketBelanja = e.data[0]), this.paketBelanja && (null === (n = this.paketBelanjaForm) || void 0 === n || n.patchValue(this.paketBelanja));
                                        },
                                        error: (e) => {
                                            this.paketBelanjaIsLoading = !1;
                                        },
                                    });
                            }
                        }
                    }
                    return (
                        (i.ɵfac = function (t) {
                            return new (t || i)(a.Y36(aa.Kz), a.Y36(Na._W), a.Y36(Ra.W), a.Y36(Wa.x), a.Y36(rt));
                        }),
                        (i.ɵcmp = a.Xpm({
                            type: i,
                            selectors: [["app-renja-paket-form"]],
                            decls: 7,
                            vars: 3,
                            consts: [
                                [1, "modal-header"],
                                [1, "fw-bolder", "m-0"],
                                ["type", "button", "aria-label", "Close", 1, "btn-close", 3, "click"],
                                [1, "card", "mb-3"],
                                ["class", "d-flex justify-content-center mt-20 mb-20", 4, "ngIf"],
                                ["class", "collapse show", 4, "ngIf"],
                                [1, "d-flex", "justify-content-center", "mt-20", "mb-20"],
                                [1, "spinner-border"],
                                [1, "collapse", "show"],
                                ["novalidate", "", "class", "form", 3, "formGroup", "submit", 4, "ngIf"],
                                ["novalidate", "", 1, "form", 3, "formGroup", "submit"],
                                [1, "card-body", "border-top", "p-9"],
                                [1, "row", "mb-6"],
                                ["for", "typeahead-sub-unit", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                                [1, "col-lg-8", "fv-row"],
                                ["formControlName", "is_paket", "name", "jenis_subtitle", 1, "form-select"],
                                ["value", ""],
                                ["value", "1", 3, "selected"],
                                ["value", "2", 3, "selected"],
                                ["formControlName", "subs_bl_teks", "placeholder", "Uraian Pemaketan Kerja/Pengelompokan Belanja", "maxlength", "255", 1, "form-control"],
                                [1, "card-footer", "d-flex", "justify-content-between", "py-5", "px-9"],
                                [1, "btn", "btn-outline-danger", 3, "click"],
                                ["type", "submit", 1, "btn", "btn-success", 3, "disabled"],
                                [4, "ngIf"],
                                ["clas", "indicator-progress"],
                                [1, "spinner-border", "spinner-border-sm", "align-middle", "ms-2"],
                            ],
                            template: function (t, e) {
                                1 & t &&
                                    (a.TgZ(0, "div", 0)(1, "h3", 1),
                                    a._uU(2),
                                    a.qZA(),
                                    a.TgZ(3, "button", 2),
                                    a.NdJ("click", function () {
                                        return e.activeModal.dismiss("Cross click");
                                    }),
                                    a.qZA()(),
                                    a.TgZ(4, "div", 3),
                                    a.YNc(5, Ke, 2, 0, "div", 4),
                                    a.YNc(6, We, 2, 1, "div", 5),
                                    a.qZA()),
                                    2 & t && (a.xp6(2), a.Oqu(e.pageTitle), a.xp6(3), a.Q6J("ngIf", "edit" === e.mode && e.paketBelanjaIsLoading), a.xp6(1), a.Q6J("ngIf", "add" === e.mode || !e.paketBelanjaIsLoading));
                            },
                            directives: [j.O5, p._Y, p.JL, p.sg, p.EJ, p.JJ, p.u, p.YN, p.Kr, p.Fj, p.nD],
                            styles: [""],
                        })),
                        i
                    );
                })(),
                pe = (() => {
                    class i {
                        constructor(t) {
                            (this.http = t), (this.API_URL = `${Ka.N.apiUrlMaster}`);
                        }
                        list(t) {
                            return this.http.post(this.API_URL + "/d_komponen/list", t);
                        }
                        find(t) {
                            return this.http.post(`${this.API_URL}/d_komponen/find`, t);
                        }
                        add(t) {
                            return this.http.post(this.API_URL + "/d_komponen/add", t);
                        }
                        view(t) {
                            return this.http.post(this.API_URL + "/d_komponen/view", t);
                        }
                        update(t) {
                            return this.http.post(this.API_URL + "/d_komponen/update", t);
                        }
                        getByIdSubBl(t) {
                            return this.http.post(this.API_URL + "/d_komponen/get_by_id_sub_bl", t);
                        }
                        getByIdStandarHarga(t) {
                            return this.http.post(this.API_URL + "/d_komponen/get_by_id_standar_harga", t);
                        }
                        findKomponenForAkun(t) {
                            return this.http.post(`${this.API_URL}/d_komponen/find_komponen_for_akun`, t);
                        }
                        listKomponenForAkun(t) {
                            return this.http.post(`${this.API_URL}/d_komponen/list_komponen_for_akun`, t);
                        }
                    }
                    return (
                        (i.ɵfac = function (t) {
                            return new (t || i)(a.LFG(Pa.eN));
                        }),
                        (i.ɵprov = a.Yz7({ token: i, factory: i.ɵfac, providedIn: "root" })),
                        i
                    );
                })();
            var Ha = D(12152);
            function Qe(i, d) {
                1 & i && a._UZ(0, "app-loading-spinner", 5);
            }
            function Oe(i, d) {
                1 & i && (a.TgZ(0, "th", 28), a._uU(1, " ID "), a.qZA());
            }
            function Ee(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 29), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", t.id_standar_harga, " ");
                }
            }
            function He(i, d) {
                1 & i && (a.TgZ(0, "th", 28), a._uU(1, " Nama "), a.qZA());
            }
            function $e(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 29), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", t.nama_standar_harga, " ");
                }
            }
            function ze(i, d) {
                1 & i && (a.TgZ(0, "th", 28), a._uU(1, " Spesifikasi "), a.qZA());
            }
            function Ve(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 29), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", t.spek, " ");
                }
            }
            function Xe(i, d) {
                1 & i && (a.TgZ(0, "th", 28), a._uU(1, " TKDN "), a.qZA());
            }
            function an(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 29), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", t.nilai_tkdn, " % ");
                }
            }
            function tn(i, d) {
                1 & i && (a.TgZ(0, "th", 28), a._uU(1, " Satuan "), a.qZA());
            }
            function en(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 29), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", t.satuan, " ");
                }
            }
            function nn(i, d) {
                1 & i && (a.TgZ(0, "th", 30), a._uU(1, " Harga Satuan "), a.qZA());
            }
            function sn(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 31), a._uU(1), a.ALo(2, "currency"), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", a.gM2(2, 2, t.harga, "IDR", "Rp ", "1.2-2"), " ");
                }
            }
            function on(i, d) {
                1 & i && a._UZ(0, "tr", 32);
            }
            function ln(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "tr", 33),
                        a.NdJ("click", function () {
                            const s = a.CHM(t).$implicit;
                            return a.oxw(3).selectKomponen(s);
                        }),
                        a.qZA();
                }
            }
            function rn(i, d) {
                if (
                    (1 & i &&
                        (a.TgZ(0, "table", 15),
                        a.ynx(1, 16),
                        a.YNc(2, Oe, 2, 0, "th", 17),
                        a.YNc(3, Ee, 2, 2, "td", 18),
                        a.BQk(),
                        a.ynx(4, 19),
                        a.YNc(5, He, 2, 0, "th", 17),
                        a.YNc(6, $e, 2, 2, "td", 18),
                        a.BQk(),
                        a.ynx(7, 20),
                        a.YNc(8, ze, 2, 0, "th", 17),
                        a.YNc(9, Ve, 2, 2, "td", 18),
                        a.BQk(),
                        a.ynx(10, 21),
                        a.YNc(11, Xe, 2, 0, "th", 17),
                        a.YNc(12, an, 2, 2, "td", 18),
                        a.BQk(),
                        a.ynx(13, 22),
                        a.YNc(14, tn, 2, 0, "th", 17),
                        a.YNc(15, en, 2, 2, "td", 18),
                        a.BQk(),
                        a.ynx(16, 23),
                        a.YNc(17, nn, 2, 0, "th", 24),
                        a.YNc(18, sn, 3, 7, "td", 25),
                        a.BQk(),
                        a.YNc(19, on, 1, 0, "tr", 26),
                        a.YNc(20, ln, 1, 0, "tr", 27),
                        a.qZA()),
                    2 & i)
                ) {
                    const t = a.oxw(2);
                    a.Q6J("dataSource", t.dataSource), a.xp6(19), a.Q6J("matHeaderRowDef", t.displayedColumns), a.xp6(1), a.Q6J("matRowDefColumns", t.displayedColumns);
                }
            }
            function dn(i, d) {
                if ((1 & i && (a.TgZ(0, "table")(1, "tr")(2, "td")(3, "div", 34)(4, "div", 35)(5, "h4", 36), a._uU(6, "Data komponen untuk akun ini masih kosong"), a.qZA()()()()()()), 2 & i)) {
                    const t = a.oxw(2);
                    a.xp6(2), a.Udp("text-align", "center"), a.uIk("colspan", t.displayedColumns.length);
                }
            }
            const un = function () {
                return [5, 10, 20, 50, 100];
            };
            function _n(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 6)(1, "div", 7)(2, "div", 8),
                        a._UZ(3, "span", 9),
                        a.TgZ(4, "input", 10),
                        a.NdJ("keyup", function (n) {
                            return a.CHM(t), a.oxw().applyFilter(n);
                        }),
                        a.qZA()(),
                        a.TgZ(5, "div", 11),
                        a.YNc(6, rn, 21, 3, "table", 12),
                        a.YNc(7, dn, 7, 3, "table", 13),
                        a._UZ(8, "mat-paginator", 14),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw();
                    a.xp6(3),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen021.svg"),
                        a.xp6(3),
                        a.Q6J("ngIf", t.dataSource.data.length > 0),
                        a.xp6(1),
                        a.Q6J("ngIf", 0 === t.dataSource.data.length && !t.komponenIsLoading),
                        a.xp6(1),
                        a.Q6J("pageSizeOptions", a.DdM(4, un));
                }
            }
            let pn = (() => {
                class i {
                    constructor(t, e, n, s) {
                        (this.modalService = t),
                            (this.konfigurasiService = e),
                            (this.komponenService = n),
                            (this.activeModal = s),
                            (this.is_paket = !1),
                            (this.displayedColumns = ["nama_komponen", "spesifikasi", "satuan", "harga_satuan", "tkdn"]),
                            (this.display = []),
                            (this.dataSource = new L.by(this.komponenList)),
                            (this.allDataIsLoaded = !1),
                            (this.komponenIsLoading = !1),
                            (this.komponenListIsLoaded = !1);
                    }
                    set paginator(t) {
                        this.dataSource.paginator = t;
                    }
                    set sort(t) {
                        this.dataSource.sort = t;
                    }
                    ngOnInit() {
                        this.loadKomponen();
                    }
                    applyFilter(t) {
                        let e;
                        (e = t.target.value), (this.dataSource.filter = null == e ? void 0 : e.toLowerCase());
                    }
                    loadKomponen() {
                        const t = new FormData();
                        t.append("id_daerah", String(this.konfigurasiService.getIdDaerah())),
                            t.append("tahun", String(this.konfigurasiService.getTahun())),
                            t.append("id_akun", String(this.id_akun)),
                            t.append("tipe", String(this.tipe)),
                            (this.komponenIsLoading = !0),
                            (this.komponenSub = this.komponenService.listKomponenForAkun(t).subscribe({
                                next: (e) => {
                                    (this.komponenIsLoading = !1), (this.komponenListIsLoaded = !0), (this.komponenList = e.data), this.buildDataSource();
                                },
                                error: (e) => {
                                    this.komponenIsLoading = !1;
                                },
                            }));
                    }
                    selectKomponen(t) {
                        this.activeModal.close(t);
                    }
                    buildDataSource() {
                        if (!1 === this.allDataIsLoaded && 1 == this.komponenListIsLoaded) {
                            let t = 0;
                            this.komponenList
                                .sort((e, n) => e.urut_sasaran - n.urut_sasaran)
                                .forEach((e) => {
                                    console.log(e),
                                        (this.display[t] = {
                                            id_standar_harga: e.id_standar_harga,
                                            nama_standar_harga: e.nama_standar_harga,
                                            nilai_tkdn: e.nilai_tkdn,
                                            spek: e.spek,
                                            satuan: e.satuan,
                                            harga: e.harga,
                                            kode_standar_harga: e.kode_standar_harga,
                                        }),
                                        t++;
                                }),
                                (this.dataSource.data = this.display),
                                (this.dataSource.paginator = this.paginator),
                                (this.dataSource.sort = this.sort),
                                (this.allDataIsLoaded = !0);
                        }
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(aa.FF), a.Y36(Ra.W), a.Y36(pe), a.Y36(aa.Kz));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-komponen-list"]],
                        viewQuery: function (t, e) {
                            if ((1 & t && (a.Gf(X.NW, 5), a.Gf(S.YE, 5)), 2 & t)) {
                                let n;
                                a.iGM((n = a.CRH())) && (e.paginator = n.first), a.iGM((n = a.CRH())) && (e.sort = n.first);
                            }
                        },
                        decls: 6,
                        vars: 2,
                        consts: [
                            [1, "modal-header"],
                            [1, "fw-bolder", "m-0"],
                            ["type", "button", "aria-label", "Close", 1, "btn-close", 3, "click"],
                            ["class", "m-5", 4, "ngIf"],
                            ["class", "card card-xl-stretch mb-xl-8", 4, "ngIf"],
                            [1, "m-5"],
                            [1, "card", "card-xl-stretch", "mb-xl-8"],
                            [1, "card-body", "py-3"],
                            [1, "d-flex", "align-items-center", "position-relative", "my-1", "py-2"],
                            [1, "svg-icon", "svg-icon-1", "position-absolute", "ms-4", 3, "inlineSVG"],
                            ["type", "text", "placeholder", "Pencarian", 1, "form-control", "form-control", "ps-14", 3, "keyup"],
                            [1, "table-responsive"],
                            ["mat-table", "", "matSort", "", "class", "table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4", 3, "dataSource", 4, "ngIf"],
                            [4, "ngIf"],
                            ["showFirstLastButtons", "", 3, "pageSizeOptions"],
                            ["mat-table", "", "matSort", "", 1, "table", "table-row-dashed", "table-row-gray-300", "align-middle", "gs-0", "gy-4", 3, "dataSource"],
                            ["matColumnDef", "id_komponen"],
                            ["mat-header-cell", "", "class", "fw-bolder text-muted", 4, "matHeaderCellDef"],
                            ["class", "pe-5", "mat-cell", "", 4, "matCellDef"],
                            ["matColumnDef", "nama_komponen"],
                            ["matColumnDef", "spesifikasi"],
                            ["matColumnDef", "tkdn"],
                            ["matColumnDef", "satuan"],
                            ["matColumnDef", "harga_satuan"],
                            ["mat-header-cell", "", "class", "fw-bolder text-muted", "style", "width: 120px", 4, "matHeaderCellDef"],
                            ["mat-cell", "", 4, "matCellDef"],
                            ["mat-header-row", "", 4, "matHeaderRowDef"],
                            ["mat-row", "", "class", "hover-hand", 3, "click", 4, "matRowDef", "matRowDefColumns"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-muted"],
                            ["mat-cell", "", 1, "pe-5"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-muted", 2, "width", "120px"],
                            ["mat-cell", ""],
                            ["mat-header-row", ""],
                            ["mat-row", "", 1, "hover-hand", 3, "click"],
                            [1, "d-flex", "justify-content-center", "align-items-center", "w-100", "h-100", "p-20"],
                            [1, "alert", "alert-warning"],
                            [1, "alert-heading", 2, "margin", "0px"],
                        ],
                        template: function (t, e) {
                            1 & t &&
                                (a.TgZ(0, "div", 0)(1, "h3", 1),
                                a._uU(2, "Komponen"),
                                a.qZA(),
                                a.TgZ(3, "button", 2),
                                a.NdJ("click", function () {
                                    return e.activeModal.dismiss("Cross click");
                                }),
                                a.qZA()(),
                                a.YNc(4, Qe, 1, 0, "app-loading-spinner", 3),
                                a.YNc(5, _n, 9, 5, "div", 4)),
                                2 & t && (a.xp6(4), a.Q6J("ngIf", e.komponenIsLoading), a.xp6(1), a.Q6J("ngIf", !e.komponenIsLoading));
                        },
                        directives: [j.O5, Ha.g, Ma.d$, L.BZ, S.YE, L.w1, L.fO, L.ge, L.Dz, L.ev, L.as, L.XQ, L.nj, L.Gk, X.NW],
                        pipes: [j.H9],
                        styles: [".hover-hand[_ngcontent-%COMP%]:hover{cursor:pointer;background-color:#f7f7f7}"],
                    })),
                    i
                );
            })();
            function cn(i, d) {
                if (
                    (1 & i &&
                        (a.TgZ(0, "div", 7)(1, "div", 8)(2, "label", 9)(3, "b"), a._uU(4, "Baris Ke : "), a.qZA(), a._uU(5), a.qZA()(), a.TgZ(6, "div", 8)(7, "label", 9)(8, "b"), a._uU(9, "Keterangan : "), a.qZA(), a._uU(10), a.qZA()()()),
                    2 & i)
                ) {
                    const t = d.$implicit;
                    a.xp6(5), a.Oqu(t.noRow), a.xp6(5), a.Oqu(t.keterangan);
                }
            }
            let hn = (() => {
                class i {
                    constructor(t) {
                        (this.activeModal = t), (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))), (this.pageTitle = "Check Import Excel Data Penerima Bantuan");
                    }
                    ngOnInit() {
                        this.listData = this.dataError;
                    }
                    generatePDF() {
                        const t = new Date(),
                            e = t.getFullYear();
                        let n = t.getMonth() + 1,
                            s = t.getDate();
                        s < 10 && (s = 0 + s), n < 10 && (n = 0 + n);
                        const o = s + "/" + n + "/" + e;
                        var l = new Ja.default("p", "mm", "a4");
                        l.setProperties({ title: "Check Import Data SSH" + o, author: "Siemen", creator: "-" }),
                            l.setFontSize(12),
                            l.setFont("helvetica", "bold"),
                            l.text("Check Import Data " + (1 == this.id_modal ? "Standar Harga" : "Rekening Belanja") + " SSH", 105, 10, { align: "center" }),
                            l.setFontSize(9),
                            l.setFont("helvetica", "bold"),
                            l.text("Tanggal Cetak : " + o, 14, 18);
                        var u,
                            _ = [];
                        if (this.listData.length > 0) {
                            u = [[{ content: "Baris Ke", styles: { cellWidth: 15 } }, { content: "Kode", styles: { cellWidth: 20 } }, { content: "Satuan", styles: { cellWidth: 20 } }, { content: "Keterangan" }]];
                            for (let m = 0; m < this.listData.length; m++) {
                                let v = this.listData[m];
                                _.push([
                                    [
                                        { content: v.noRow, styles: { fontStyle: "bold", halign: "center" } },
                                        { content: v.kode ? "FALSE" : "TRUE", styles: { halign: "center" } },
                                        { content: v.satuan ? "FALSE" : "TRUE", styles: { halign: "center" } },
                                        { content: v.keterangan, styles: { halign: "left" } },
                                    ],
                                ]);
                            }
                        }
                        var k = [];
                        for (let m = 0; m < _.length; m++) k = k.concat(_[m]);
                        l.autoTable({
                            startY: 20,
                            theme: "grid",
                            body: k,
                            head: u,
                            rowPageBreak: "avoid",
                            styles: { fontSize: 8, textColor: 0 },
                            headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                            bodyStyles: { valign: "middle", lineWidth: 0.2, lineColor: 0 },
                            footStyles: { fillColor: 255, valign: "middle", halign: "right", lineWidth: 0.2, lineColor: 0 },
                        }),
                            l.save("Check_Import_Data_SSH_" + o + ".pdf");
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(aa.Kz));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-penerima-bantuan-excel-check"]],
                        inputs: { id_modal: "id_modal", dataError: "dataError" },
                        decls: 10,
                        vars: 2,
                        consts: [
                            [1, "modal-header"],
                            [1, "fw-bolder", "m-0"],
                            ["type", "button", "aria-label", "Close", 1, "btn-close", 3, "click"],
                            [1, "card", "mb-5", "mb-xl-10"],
                            [1, "card-body", "border-top", "p-9"],
                            ["id", "excelDescription", 1, "form-text", "text-warning"],
                            ["class", "border p-2 my-2", 4, "ngFor", "ngForOf"],
                            [1, "border", "p-2", "my-2"],
                            [1, "row"],
                            [1, "col", "col-form-label", "fw-bold"],
                        ],
                        template: function (t, e) {
                            1 & t &&
                                (a.TgZ(0, "div", 0)(1, "h3", 1),
                                a._uU(2),
                                a.qZA(),
                                a.TgZ(3, "button", 2),
                                a.NdJ("click", function () {
                                    return e.activeModal.dismiss("Cross click");
                                }),
                                a.qZA()(),
                                a.TgZ(4, "div", 3)(5, "div", 4)(6, "div", 5),
                                a._uU(7, " \u26a0 Dimohon untuk upload ulang seluruh data yang gagal setelah memperbaiki kesalahan data dibawah ini "),
                                a.qZA(),
                                a.TgZ(8, "div"),
                                a.YNc(9, cn, 11, 2, "div", 6),
                                a.qZA()()()),
                                2 & t && (a.xp6(2), a.Oqu(e.pageTitle), a.xp6(7), a.Q6J("ngForOf", e.listData));
                        },
                        directives: [j.sg],
                        encapsulation: 2,
                    })),
                    i
                );
            })();
            var dt = D(94327),
                ut = D(64313);
            let $a = (() => {
                class i {
                    constructor(t) {
                        (this.http = t), (this.API_URL = `${Ka.N.apiUrlRenja}`);
                    }
                    list(t) {
                        return this.http.post(this.API_URL + "/rinci_sub_bl/list", t);
                    }
                    listByIdSkpd(t) {
                        return this.http.post(this.API_URL + "/rinci_sub_bl/list_by_id_skpd", t);
                    }
                    totalByIdSkpd(t) {
                        return this.http.post(this.API_URL + "/rinci_sub_bl/total_by_id_skpd", t);
                    }
                    add(t) {
                        return this.http.post(this.API_URL + "/rinci_sub_bl/add", t);
                    }
                    importFromExcel(t) {
                        return this.http.post(this.API_URL + "/rinci_sub_bl/importExcel", t);
                    }
                    view(t, e) {
                        return this.http.post(this.API_URL + `/rinci_sub_bl/view/${t}`, e);
                    }
                    viewByIdUnik(t) {
                        return this.http.post(this.API_URL + "/rinci_sub_bl/view_by_id_unik", t);
                    }
                    hapusRincianAll(t) {
                        return this.http.post(this.API_URL + "/rinci_sub_bl/hapus_rincian_all", t);
                    }
                    hapusRincian(t) {
                        return this.http.post(this.API_URL + "/rinci_sub_bl/hapus_rincian", t);
                    }
                    update(t) {
                        return this.http.post(this.API_URL + "/rinci_sub_bl/update", t);
                    }
                    getByIdSubBl(t) {
                        return this.http.post(this.API_URL + "/rinci_sub_bl/get_by_id_sub_bl", t);
                    }
                    rekapAkunList(t) {
                        return this.http.post(this.API_URL + "/rinci_sub_bl/rekap", t);
                    }
                    getDataBySumberDana(t) {
                        return this.http.post(this.API_URL + "/rinci_sub_bl/total_by_sumber_dana", t);
                    }
                    pindahRincianBelanjaAll(t) {
                        return this.http.post(this.API_URL + "/rinci_sub_bl/pindah_rincian_all", t);
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.LFG(Pa.eN));
                    }),
                    (i.ɵprov = a.Yz7({ token: i, factory: i.ɵfac, providedIn: "root" })),
                    i
                );
            })();
            var nt = D(38334),
                _t = D(2664),
                pt = D(37714);
            let at = (() => {
                class i {
                    constructor(t) {
                        (this.http = t), (this.API_URL = `${Ka.N.apiUrlRenja}`);
                    }
                    list(t) {
                        return this.http.post(this.API_URL + "/dana_sub_bl/list", t);
                    }
                    add(t) {
                        return this.http.post(this.API_URL + "/dana_sub_bl/add", t);
                    }
                    delete(t) {
                        return this.http.post(this.API_URL + "/dana_sub_bl/delete", t);
                    }
                    view(t, e) {
                        return this.http.post(this.API_URL + `/dana_sub_bl/view/${t}`, e);
                    }
                    update(t) {
                        return this.http.post(this.API_URL + "/dana_sub_bl/update", t);
                    }
                    getByIdSubBl(t) {
                        return this.http.post(this.API_URL + "/dana_sub_bl/get_by_id_sub_bl", t);
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.LFG(Pa.eN));
                    }),
                    (i.ɵprov = a.Yz7({ token: i, factory: i.ɵfac, providedIn: "root" })),
                    i
                );
            })();
            var ct = D(88664);
            const gn = ["excelForm"],
                mn = ["provInstance"],
                bn = ["kabkotInstance"],
                vn = ["camatInstance"],
                kn = ["lurahInstance"];
            function fn(i, d) {
                1 & i && (a.TgZ(0, "div", 6), a._UZ(1, "div", 7), a.qZA());
            }
            function Sn(i, d) {
                1 & i && (a.TgZ(0, "div", 52), a._uU(1, " NIK harus 16 digit angka! "), a.qZA());
            }
            function jn(i, d) {
                if ((1 & i && (a.TgZ(0, "div", 15)(1, "label", 31), a._uU(2, "NIK"), a.qZA(), a.TgZ(3, "div", 17), a._UZ(4, "input", 50), a.YNc(5, Sn, 2, 0, "div", 51), a.qZA()()), 2 & i)) {
                    const t = a.oxw(4);
                    a.xp6(5),
                        a.Q6J(
                            "ngIf",
                            (null == t.penerimaBantuanForm || null == t.penerimaBantuanForm.errors ? null : t.penerimaBantuanForm.errors.pattern) &&
                                (null == t.penerimaBantuanForm ? null : t.penerimaBantuanForm.dirty) &&
                                (null == t.penerimaBantuanForm ? null : t.penerimaBantuanForm.touched)
                        );
                }
            }
            function Tn(i, d) {
                1 & i && a._UZ(0, "div", 53);
            }
            function In(i, d) {
                1 & i && a._UZ(0, "div", 53);
            }
            function Bn(i, d) {
                1 & i && a._UZ(0, "div", 53);
            }
            function xn(i, d) {
                1 & i && a._UZ(0, "div", 53);
            }
            function Cn(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 14)(1, "div", 15)(2, "label", 16),
                        a._uU(3, "Jenis Penerima"),
                        a.qZA(),
                        a.TgZ(4, "div", 17)(5, "select", 18),
                        a.NdJ("change", function (n) {
                            return a.CHM(t), a.oxw(3).onChangeJenisPenerima(n.target.value);
                        }),
                        a.TgZ(6, "option", 19),
                        a._uU(7, "Pilih Jenis Penerima"),
                        a.qZA(),
                        a.TgZ(8, "option", 20),
                        a._uU(9, "Individu/Keluarga"),
                        a.qZA(),
                        a.TgZ(10, "option", 21),
                        a._uU(11, "BUMN"),
                        a.qZA(),
                        a.TgZ(12, "option", 22),
                        a._uU(13, "BUMD"),
                        a.qZA(),
                        a.TgZ(14, "option", 23),
                        a._uU(15, "LKB-BUMN"),
                        a.qZA(),
                        a.TgZ(16, "option", 24),
                        a._uU(17, "LKB-BUMD"),
                        a.qZA(),
                        a.TgZ(18, "option", 25),
                        a._uU(19, "LKB-Badan Usaha Milik Swasta"),
                        a.qZA(),
                        a.TgZ(20, "option", 26),
                        a._uU(21, "LKBB-BUMN"),
                        a.qZA(),
                        a.TgZ(22, "option", 27),
                        a._uU(23, "LKBB-BUMD"),
                        a.qZA(),
                        a.TgZ(24, "option", 28),
                        a._uU(25, "LKBB-Badan Usaha Milik Swasta"),
                        a.qZA(),
                        a.TgZ(26, "option", 29),
                        a._uU(27, "PARTAI POLITIK"),
                        a.qZA(),
                        a.TgZ(28, "option", 30),
                        a._uU(29, "LEMBAGA LAINNYA"),
                        a.qZA()()()(),
                        a.TgZ(30, "div", 15)(31, "label", 31),
                        a._uU(32, "Nama"),
                        a.qZA(),
                        a.TgZ(33, "div", 17)(34, "div", 32),
                        a._UZ(35, "input", 33),
                        a.qZA()()(),
                        a.YNc(36, jn, 6, 1, "div", 34),
                        a.TgZ(37, "div", 15)(38, "label", 31),
                        a._uU(39, "Alamat"),
                        a.qZA(),
                        a.TgZ(40, "div", 17)(41, "div", 32),
                        a._UZ(42, "input", 35),
                        a.qZA()()(),
                        a.TgZ(43, "div", 15)(44, "label", 36),
                        a._uU(45, "Provinsi"),
                        a.qZA(),
                        a.TgZ(46, "div", 17)(47, "div", 32)(48, "input", 37, 38),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(3).provModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(3).provFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(3).provClick$.next(n.target.value);
                        }),
                        a.qZA(),
                        a.YNc(50, Tn, 1, 0, "div", 39),
                        a.qZA()()(),
                        a.TgZ(51, "div", 15)(52, "label", 40),
                        a._uU(53, "Kab/Kota"),
                        a.qZA(),
                        a.TgZ(54, "div", 17)(55, "div", 32)(56, "input", 41, 42),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(3).kabkotModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(3).kabkotFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(3).kabkotClick$.next(n.target.value);
                        }),
                        a.qZA(),
                        a.YNc(58, In, 1, 0, "div", 39),
                        a.qZA()()(),
                        a.TgZ(59, "div", 15)(60, "label", 43),
                        a._uU(61, "Kecamatan"),
                        a.qZA(),
                        a.TgZ(62, "div", 17)(63, "div", 32)(64, "input", 44, 45),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(3).camatModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(3).camatFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(3).camatClick$.next(n.target.value);
                        }),
                        a.qZA(),
                        a.YNc(66, Bn, 1, 0, "div", 39),
                        a.qZA()()(),
                        a.TgZ(67, "div", 15)(68, "label", 46),
                        a._uU(69, "Kelurahan / Desa"),
                        a.qZA(),
                        a.TgZ(70, "div", 17)(71, "div", 32)(72, "input", 47, 48),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(3).lurahModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(3).lurahFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(3).lurahClick$.next(n.target.value);
                        }),
                        a.qZA(),
                        a.YNc(74, xn, 1, 0, "div", 39),
                        a.qZA()()(),
                        a.TgZ(75, "div", 15)(76, "label", 31),
                        a._uU(77, "No. Telepon"),
                        a.qZA(),
                        a.TgZ(78, "div", 17)(79, "div", 32),
                        a._UZ(80, "input", 49),
                        a.qZA()()()();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(36),
                        a.Q6J("ngIf", 3 == (null == t.penerimaBantuanForm ? null : t.penerimaBantuanForm.value.jenis_penerima)),
                        a.xp6(12),
                        a.Q6J("ngModel", t.provModel)("ngbTypeahead", t.searchProv)("inputFormatter", t.provFormatter)("resultFormatter", t.provFormatter)("editable", !1),
                        a.xp6(2),
                        a.Q6J("ngIf", t.searchProvinsiIsLoading),
                        a.xp6(6),
                        a.Q6J("ngModel", t.kabkotModel)("ngbTypeahead", t.searchKabkot)("inputFormatter", t.kabkotFormatter)("resultFormatter", t.kabkotFormatter)("editable", !1),
                        a.uIk("disabled", !t.provModel || null),
                        a.xp6(2),
                        a.Q6J("ngIf", t.searchKabkotIsLoading),
                        a.xp6(6),
                        a.Q6J("ngModel", t.camatModel)("ngbTypeahead", t.searchCamat)("inputFormatter", t.camatFormatter)("resultFormatter", t.camatFormatter)("editable", !1),
                        a.uIk("disabled", !t.kabkotModel || null),
                        a.xp6(2),
                        a.Q6J("ngIf", t.searchCamatIsLoading),
                        a.xp6(6),
                        a.Q6J("ngModel", t.lurahModel)("ngbTypeahead", t.searchLurah)("inputFormatter", t.lurahFormatter)("resultFormatter", t.lurahFormatter)("editable", !1),
                        a.uIk("disabled", !t.camatModel || null),
                        a.xp6(2),
                        a.Q6J("ngIf", t.searchLurahIsLoading);
                }
            }
            function yn(i, d) {
                if ((1 & i && (a.TgZ(0, "option", 67), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.Q6J("value", t.id_dana), a.xp6(1), a.hij(" ", t.nama_dana, " ");
                }
            }
            function Ln(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 14)(1, "div", 54)(2, "div", 55),
                        a._UZ(3, "span", 56),
                        a.TgZ(4, "a", 57),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(3).exportExcelReferensiDaerah();
                        }),
                        a._uU(5, " Referensi Wilayah"),
                        a.qZA()(),
                        a.TgZ(6, "div", 55),
                        a._UZ(7, "span", 56),
                        a.TgZ(8, "a", 58),
                        a._uU(9, " Format Dokumen Upload Penerima Bantuan"),
                        a.qZA()(),
                        a.TgZ(10, "label", 59),
                        a._uU(11, "Sumber Dana"),
                        a.qZA(),
                        a.TgZ(12, "div", 60)(13, "select", 61)(14, "option", 19),
                        a._uU(15, "Pilih Sumber Dana..."),
                        a.qZA(),
                        a.YNc(16, yn, 2, 2, "option", 62),
                        a.qZA()(),
                        a.TgZ(17, "label", 63),
                        a._uU(18, "Upload Dokumen "),
                        a.qZA(),
                        a.TgZ(19, "div", 17)(20, "input", 64, 65),
                        a.NdJ("change", function (n) {
                            return a.CHM(t), a.oxw(3).onChange(n);
                        }),
                        a.qZA(),
                        a.TgZ(22, "div", 66),
                        a._uU(23, " \u26a0 Jenis file upload dokumen harus berformat (.xlsx) "),
                        a.qZA()()()();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(3),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen005.svg"),
                        a.xp6(4),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen005.svg"),
                        a.xp6(1),
                        a.MGl("href", "./assets/media/manual/", 1 == t.dataDaerah.is_prop ? "Penerima bantuan - format upload penerima bantuan provinsi" : "Penerima bantuan - format upload penerima bantuan kabupaten kota", ".xlsx", a.LSH),
                        a.xp6(8),
                        a.Q6J("ngForOf", t.sumberDanaList);
                }
            }
            function wn(i, d) {
                1 & i && (a.ynx(0), a._uU(1, "Simpan"), a.BQk());
            }
            function Dn(i, d) {
                1 & i && (a.ynx(0), a.TgZ(1, "span", 68), a._uU(2), a._UZ(3, "span", 69), a.qZA(), a.BQk()), 2 & i && (a.xp6(1), a.Udp("display", "block"), a.xp6(1), a.hij(" Menyimpan...", " ", " "));
            }
            function Rn(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "form", 9),
                        a.NdJ("submit", function () {
                            return a.CHM(t), a.oxw(2).onSubmit();
                        }),
                        a.YNc(1, Cn, 81, 28, "div", 10),
                        a.YNc(2, Ln, 24, 4, "div", 10),
                        a.TgZ(3, "div", 11)(4, "span", 12),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).activeModal.close();
                        }),
                        a._uU(5, " Tutup "),
                        a.qZA(),
                        a.TgZ(6, "button", 13),
                        a.YNc(7, wn, 2, 0, "ng-container", 5),
                        a.YNc(8, Dn, 4, 3, "ng-container", 5),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw(2);
                    a.Q6J("formGroup", t.penerimaBantuanForm),
                        a.xp6(1),
                        a.Q6J("ngIf", 0 == t.from_file),
                        a.xp6(1),
                        a.Q6J("ngIf", 1 == t.from_file),
                        a.xp6(4),
                        a.Q6J("disabled", t.penerimaBantuanForm.invalid || t.isSaving),
                        a.xp6(1),
                        a.Q6J("ngIf", !t.isSaving),
                        a.xp6(1),
                        a.Q6J("ngIf", t.isSaving);
                }
            }
            function An(i, d) {
                if ((1 & i && (a.TgZ(0, "div"), a.YNc(1, Rn, 9, 6, "form", 8), a.qZA()), 2 & i)) {
                    const t = a.oxw();
                    a.xp6(1), a.Q6J("ngIf", t.penerimaBantuanForm);
                }
            }
            let Fn = (() => {
                class i {
                    constructor(t, e, n, s, o, l, _, r, u, k) {
                        (this.activeModal = t),
                            (this.modalService = e),
                            (this.toastr = n),
                            (this.konfigurasiService = s),
                            (this.rincianBelanjaService = o),
                            (this.daerahService = l),
                            (this.kecamatanService = _),
                            (this.kelurahanService = r),
                            (this.renjaDanaBelanjaService = u),
                            (this.userService = k),
                            (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))),
                            (this.pageTitle = "Tambah Rincian Belanja"),
                            (this.mode = "add"),
                            (this.referensiDaerahList = []),
                            (this.sumberDanaList = []),
                            (this.sumberDanaIsLoading = !1),
                            (this.daerahListIsLoading = !1),
                            (this.dataDaerah = []),
                            (this.provFocus$ = new z.x()),
                            (this.provClick$ = new z.x()),
                            (this.provFormatter = (m) => m.nama_daerah),
                            (this.searchProvinsiIsLoading = !1),
                            (this.kabkotFocus$ = new z.x()),
                            (this.kabkotClick$ = new z.x()),
                            (this.kabkotFormatter = (m) => m.nama_daerah),
                            (this.searchKabkotIsLoading = !1),
                            (this.camatFocus$ = new z.x()),
                            (this.camatClick$ = new z.x()),
                            (this.camatFormatter = (m) => m.camat_teks),
                            (this.searchCamatIsLoading = !1),
                            (this.lurahFocus$ = new z.x()),
                            (this.lurahClick$ = new z.x()),
                            (this.lurahFormatter = (m) => m.lurah_teks),
                            (this.searchLurahIsLoading = !1),
                            (this.isSaving = !1),
                            (this.loadProvinsiIsLoading = !1),
                            (this.loadKabkotIsLoading = !1),
                            (this.loadReferensiDaerahIsLoading = !1),
                            (this.searchProv = (m) => {
                                const v = m.pipe((0, ha.b)(500)),
                                    g = this.provClick$.pipe(
                                        (0, ga.h)(() => {
                                            var h;
                                            return !(null === (h = this.provInstance) || void 0 === h ? void 0 : h.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(v, this.provFocus$, g).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((h) => {
                                        var f, y, B, F, c, b, I;
                                        const x = new FormData();
                                        return (
                                            x.append("search[value]", h),
                                            x.append("tipe", "prov"),
                                            null == (null === (f = this.penerimaBantuanForm) || void 0 === f ? void 0 : f.value.id_prov) &&
                                                ((null === (y = this.penerimaBantuanForm) || void 0 === y ? void 0 : y.contains("id_kabkot")) &&
                                                    (null === (B = this.penerimaBantuanForm) || void 0 === B || B.controls.id_kabkot.setValue(void 0)),
                                                (null === (F = this.penerimaBantuanForm) || void 0 === F ? void 0 : F.contains("id_camat")) &&
                                                    (null === (c = this.penerimaBantuanForm) || void 0 === c || c.controls.id_camat.setValue(void 0)),
                                                (null === (b = this.penerimaBantuanForm) || void 0 === b ? void 0 : b.contains("id_lurah")) &&
                                                    (null === (I = this.penerimaBantuanForm) || void 0 === I || I.controls.id_lurah.setValue(void 0))),
                                            (this.searchProvinsiIsLoading = !0),
                                            this.daerahService.findlistProv(x).pipe(
                                                (0, ka.U)((q) => (null == q ? void 0 : q.data)),
                                                (0, fa.b)(() => (this.searchProvinsiIsLoading = !1)),
                                                (0, Sa.K)((q) => ((this.searchProvinsiIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.searchKabkot = (m) => {
                                const v = m.pipe((0, ha.b)(500)),
                                    g = this.kabkotClick$.pipe(
                                        (0, ga.h)(() => {
                                            var h;
                                            return !(null === (h = this.kabkotInstance) || void 0 === h ? void 0 : h.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(v, this.kabkotFocus$, g).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((h) => {
                                        var f, y, B, F, c, b;
                                        null == (null === (f = this.penerimaBantuanForm) || void 0 === f ? void 0 : f.value.id_kabkot) &&
                                            ((null === (y = this.penerimaBantuanForm) || void 0 === y ? void 0 : y.contains("id_camat")) && (null === (B = this.penerimaBantuanForm) || void 0 === B || B.controls.id_camat.setValue(void 0)),
                                            (null === (F = this.penerimaBantuanForm) || void 0 === F ? void 0 : F.contains("id_lurah")) && (null === (c = this.penerimaBantuanForm) || void 0 === c || c.controls.id_lurah.setValue(void 0)));
                                        const I = new FormData();
                                        return (
                                            I.append("id_daerah", String(null === (b = this.provModel) || void 0 === b ? void 0 : b.id_daerah)),
                                            I.append("search[value]", h),
                                            (this.searchKabkotIsLoading = !0),
                                            this.daerahService.findKabkota(I).pipe(
                                                (0, ka.U)((x) => (null == x ? void 0 : x.data)),
                                                (0, fa.b)(() => (this.searchKabkotIsLoading = !1)),
                                                (0, Sa.K)((x) => ((this.searchKabkotIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.searchCamat = (m) => {
                                const v = m.pipe((0, ha.b)(500)),
                                    g = this.camatClick$.pipe(
                                        (0, ga.h)(() => {
                                            var h;
                                            return !(null === (h = this.camatInstance) || void 0 === h ? void 0 : h.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(v, this.camatFocus$, g).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((h) => {
                                        var f, y, B, F;
                                        null == (null === (f = this.penerimaBantuanForm) || void 0 === f ? void 0 : f.value.id_camat) &&
                                            (null === (y = this.penerimaBantuanForm) || void 0 === y ? void 0 : y.contains("id_lurah")) &&
                                            (null === (B = this.penerimaBantuanForm) || void 0 === B || B.controls.id_lurah.setValue(void 0));
                                        const c = new FormData();
                                        return (
                                            c.append("id_kabkota", String(null === (F = this.kabkotModel) || void 0 === F ? void 0 : F.id_daerah)),
                                            c.append("tahun", String(this.konfigurasiService.getTahun())),
                                            c.append("search[value]", h),
                                            (this.searchCamatIsLoading = !0),
                                            this.kecamatanService.search(c).pipe(
                                                (0, ka.U)((b) => (null == b ? void 0 : b.data)),
                                                (0, fa.b)(() => (this.searchCamatIsLoading = !1)),
                                                (0, Sa.K)((b) => ((this.searchCamatIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.searchLurah = (m) => {
                                const v = m.pipe((0, ha.b)(500)),
                                    g = this.lurahClick$.pipe(
                                        (0, ga.h)(() => {
                                            var h;
                                            return !(null === (h = this.lurahInstance) || void 0 === h ? void 0 : h.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(v, this.lurahFocus$, g).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((h) => {
                                        var f, y;
                                        const B = new FormData();
                                        return (
                                            B.append("id_kabkota", String(null === (f = this.kabkotModel) || void 0 === f ? void 0 : f.id_daerah)),
                                            B.append("id_camat", String(null === (y = this.camatModel) || void 0 === y ? void 0 : y.id_camat)),
                                            B.append("tahun", String(this.konfigurasiService.getTahun())),
                                            B.append("search[value]", h),
                                            (this.searchLurahIsLoading = !0),
                                            this.kelurahanService.find(B).pipe(
                                                (0, ka.U)((F) => (null == F ? void 0 : F.data)),
                                                (0, fa.b)(() => (this.searchLurahIsLoading = !1)),
                                                (0, Sa.K)((F) => ((this.searchLurahIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            });
                    }
                    ngOnInit() {
                        this.loadData(), this.loadDaerah(), this.buildForm(), this.loadSumberDana(), this.loadReferensiDaerah();
                    }
                    ngOnDestroy() {
                        this.sumberDanaSub.unsubscribe(), this.ReferensiDaerahSub.unsubscribe();
                    }
                    onSubmit() {
                        var t, e;
                        (null === (t = this.penerimaBantuanForm) || void 0 === t ? void 0 : t.invalid)
                            ? alert("Mohon semua kolom form diisi")
                            : ((this.isSaving = !0), null === (e = this.penerimaBantuanForm) || void 0 === e || e.disable(), this.from_file ? this.submitExcel() : this.submitManual());
                    }
                    submitManual() {
                        var t, e, n, s, o, l, _, r, u, k, m;
                        const v = new FormData();
                        v.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                            v.append("id_jenis_profil", String((null === (t = this.penerimaBantuanForm) || void 0 === t ? void 0 : t.value.jenis_penerima) || 0)),
                            v.append("nama_teks", String((null === (e = this.penerimaBantuanForm) || void 0 === e ? void 0 : e.value.nama) || "")),
                            v.append("alamat_teks", String((null === (n = this.penerimaBantuanForm) || void 0 === n ? void 0 : n.value.alamat) || "")),
                            v.append("nik", String((null === (s = this.penerimaBantuanForm) || void 0 === s ? void 0 : s.value.nik) || "")),
                            v.append("no_telp", String((null === (o = this.penerimaBantuanForm) || void 0 === o ? void 0 : o.value.no_telepon) || 0)),
                            v.append("email_teks", String("")),
                            v.append("is_profil_ok", String("1")),
                            v.append("id_prov", String((null === (l = this.penerimaBantuanForm) || void 0 === l ? void 0 : l.value.id_prov.id_daerah) || 0)),
                            v.append("id_kab_kota", String((null === (_ = this.penerimaBantuanForm) || void 0 === _ ? void 0 : _.value.id_kabkot.id_daerah) || 0)),
                            v.append("id_kecamatan", String((null === (r = this.penerimaBantuanForm) || void 0 === r ? void 0 : r.value.id_camat.id_camat) || 0)),
                            v.append("id_kelurahan", String((null === (u = this.penerimaBantuanForm) || void 0 === u ? void 0 : u.value.id_lurah.id_lurah) || 0)),
                            v.append("id_daerah_log", null === (k = this.userSession) || void 0 === k ? void 0 : k.daerah_id),
                            v.append("id_user_log", null === (m = this.userSession) || void 0 === m ? void 0 : m.user_id),
                            "add" === this.mode &&
                                (this.penerimaBantuanSub = this.userService.addProfile(v).subscribe({
                                    next: (g) => {
                                        (this.isSaving = !1), this.activeModal.close(g), this.toastr.success("Data berhasil disimpan", "Sukses");
                                    },
                                    error: (g) => {
                                        var C;
                                        (this.isSaving = !1),
                                            null === (C = this.penerimaBantuanForm) || void 0 === C || C.enable(),
                                            this.activeModal.close(),
                                            g.message.includes("duplicate key value violates unique constraint")
                                                ? this.toastr.error("Data gagal disimpan, data dengan nama tersebut sudah pernah dibuat", "Error")
                                                : this.toastr.error("Data gagal disimpan", "Error");
                                    },
                                }));
                    }
                    submitExcel() {
                        var t;
                        const e = new FormData();
                        e.append("excel", this.file, this.file.name),
                            e.append("created_user", String(this.userSession.user_id || 0)),
                            e.append("tahun", this.konfigurasiService.getTahun()),
                            e.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                            e.append("jumlahRincianAnggaranSkpd", this.jumlahRincianAnggaranSkpd),
                            e.append("paguIndikatif", this.paguIndikatif),
                            e.append("id_unit", this.id_unit),
                            e.append("id_bl", this.id_bl),
                            e.append("id_sub_bl", this.id_sub_bl),
                            e.append("jenis_bl", this.jenis_bl),
                            e.append("id_dana", String(null === (t = this.penerimaBantuanForm) || void 0 === t ? void 0 : t.value.sumberDana)),
                            e.append("id_akun", this.id_akun),
                            e.append("id_jadwal_murni", this.id_jadwal_murni),
                            e.append("id_skpd", this.id_skpd),
                            e.append("id_sub_skpd", this.id_sub_skpd),
                            e.append("id_program", this.id_program),
                            e.append("id_giat", this.id_giat),
                            e.append("id_sub_giat", this.id_sub_giat),
                            e.append("rkpd_murni", this.rkpd_murni),
                            e.append("rkpd_pak", this.rkpd_pak),
                            e.append("nama_daerah", this.nama_daerah),
                            e.append("nama_unit", this.nama_unit),
                            e.append("nama_skpd", this.nama_skpd),
                            e.append("nama_sub_skpd", this.nama_sub_skpd),
                            e.append("nama_program", this.nama_program),
                            e.append("nama_giat", this.nama_giat),
                            e.append("nama_sub_giat", this.nama_sub_giat),
                            e.append("nama_standar_nfs", this.nama_standar_nfs),
                            e.append("nama_jadwal_murni", this.nama_jadwal_murni),
                            e.append("nama_blt", this.nama_blt),
                            e.append("nama_usulan", this.nama_usulan),
                            e.append("nama_jenis_usul", this.nama_jenis_usul),
                            e.append("kode_akun", this.kode_akun),
                            e.append("nama_akun", this.nama_akun),
                            e.append("id_daerah_log", this.konfigurasiService.getIdDaerah()),
                            e.append("id_user_log", String(this.userSession.user_id || 0));
                        let n = this.rincianBelanjaService.importFromExcel(e);
                        null == n ||
                            n.subscribe({
                                next: (s) => {
                                    var o;
                                    if (((this.isSaving = !1), null === (o = this.penerimaBantuanForm) || void 0 === o || o.enable(), s.data)) {
                                        this.toastr.warning(s.message, "Peringatan", { positionClass: "toast-top-right", closeButton: !0, progressBar: !0 });
                                        const l = this.modalService.open(hn, { size: "lg" });
                                        (l.componentInstance.dataError = s.data),
                                            l.result.then(
                                                (_) => {
                                                    this.activeModal.close(!0);
                                                },
                                                (_) => {
                                                    this.activeModal.close(!0);
                                                }
                                            );
                                    } else this.toastr.success(s.message, "Sukses", { positionClass: "toast-top-right", closeButton: !0, progressBar: !0 }), this.activeModal.close(!0);
                                },
                                error: (s) => {
                                    var o;
                                    (this.isSaving = !1),
                                        null === (o = this.penerimaBantuanForm) || void 0 === o || o.enable(),
                                        this.toastr.error(s.error.message, "Error!", { positionClass: "toast-top-right", closeButton: !0, progressBar: !0 });
                                },
                            });
                    }
                    onChangeJenisPenerima(t) {
                        var e, n;
                        3 == t &&
                            (null === (e = this.penerimaBantuanForm) || void 0 === e || e.removeControl("nik"),
                            null === (n = this.penerimaBantuanForm) || void 0 === n || n.addControl("nik", new p.NI("", [p.kI.maxLength(16), p.kI.pattern("^[0-9]{16}$"), p.kI.required])));
                    }
                    buildForm() {
                        this.penerimaBantuanForm = new p.cw(
                            this.from_file
                                ? { excel: new p.NI("", [p.kI.required]), sumberDana: new p.NI("", [p.kI.required]) }
                                : {
                                      jenis_penerima: new p.NI("", [p.kI.maxLength(255), p.kI.required]),
                                      nama: new p.NI("", [p.kI.maxLength(255), p.kI.required]),
                                      alamat: new p.NI("", [p.kI.maxLength(255), p.kI.required]),
                                      no_telepon: new p.NI("", [p.kI.maxLength(16), p.kI.required]),
                                      nik: new p.NI("", [p.kI.maxLength(16), p.kI.pattern("^[0-9]{16}$")]),
                                      id_prov: new p.NI("", [p.kI.maxLength(255), p.kI.required]),
                                      id_kabkot: new p.NI("", [p.kI.maxLength(255), p.kI.required]),
                                      id_camat: new p.NI("", [p.kI.maxLength(255), p.kI.required]),
                                      id_lurah: new p.NI("", [p.kI.maxLength(255), p.kI.required]),
                                  }
                        );
                    }
                    loadData() {
                        (this.loadProvinsiIsLoading = !0),
                            this.daerahService.view(String(this.konfigurasiService.getIdDaerah())).subscribe({
                                next: (t) => {
                                    (this.loadProvinsiIsLoading = !1),
                                        t.data[0].id_daerah == t.data[0].id_prop
                                            ? (this.provModel = t.data[0])
                                            : ((this.kabkotModel = t.data[0]),
                                              (this.loadKabkotIsLoading = !0),
                                              this.daerahService.view(String(t.data[0].id_prop)).subscribe({
                                                  next: (e) => {
                                                      (this.loadKabkotIsLoading = !1), e.data[0] && (this.provModel = e.data[0]);
                                                  },
                                                  error: (e) => {
                                                      this.loadKabkotIsLoading = !1;
                                                  },
                                              }));
                                },
                                error: (t) => {
                                    this.loadProvinsiIsLoading = !1;
                                },
                            });
                    }
                    onChange(t) {
                        (this.file = t.target.files[0]),
                            ["application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"].includes(this.file.type) ||
                                (this.toastr.error("Tipe file tidak didukung", "Error!", { positionClass: "toast-top-right", closeButton: !0, progressBar: !0 }), (this.excelFormVariable.nativeElement.value = ""));
                    }
                    loadSumberDana(t = 0) {
                        var e, n;
                        const s = new FormData();
                        s.append("id_daerah", String(null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah())),
                            s.append("tahun", String(null === (n = this.konfigurasiService) || void 0 === n ? void 0 : n.getTahun())),
                            s.append("id_sub_bl", String(this.id_sub_bl)),
                            (this.sumberDanaIsLoading = !0),
                            (this.sumberDanaSub = this.renjaDanaBelanjaService.getByIdSubBl(s).subscribe({
                                next: (o) => {
                                    (this.sumberDanaIsLoading = !1), (this.sumberDanaList = o.data);
                                },
                                error: (o) => {
                                    this.sumberDanaIsLoading = !1;
                                },
                            }));
                    }
                    loadDaerah() {
                        (this.daerahListIsLoading = !0),
                            this.daerahService.view(String(this.konfigurasiService.getIdDaerah())).subscribe({
                                next: (t) => {
                                    (this.daerahListIsLoading = !1), (this.dataDaerah = t.data[0]);
                                },
                                error: (t) => {
                                    (this.daerahListIsLoading = !1), this.toastr.error("Gagal memuat data Daerah", "Error");
                                },
                            });
                    }
                    loadReferensiDaerah() {
                        var t;
                        const e = new FormData();
                        e.append("id_daerah", String(null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getIdDaerah())),
                            (this.loadReferensiDaerahIsLoading = !0),
                            (this.ReferensiDaerahSub = this.kelurahanService.listFullJoinByDaerah(e).subscribe({
                                next: (n) => {
                                    (this.loadReferensiDaerahIsLoading = !1), (this.referensiDaerahList = n.data);
                                },
                                error: (n) => {
                                    this.loadReferensiDaerahIsLoading = !1;
                                },
                            }));
                    }
                    exportExcelReferensiDaerah() {
                        let t = new ut.Workbook();
                        var e = t.addWorksheet("Sheet 1");
                        if (
                            ((e.getCell("A1").value = "Nama Provinsi"),
                            (e.getCell("B1").value = "Kode Provinsi"),
                            (e.getCell("C1").value = "Nama Kab/Kota"),
                            (e.getCell("D1").value = "Kode Kab/Kota"),
                            (e.getCell("E1").value = "Nama Kecamatan"),
                            (e.getCell("F1").value = "Kode Kecamatan"),
                            (e.getCell("G1").value = "Nama Desa/Kelurahan"),
                            (e.getCell("H1").value = "Kode Desa/Kelurahan"),
                            (e.getCell("I1").value = "Ket"),
                            this.referensiDaerahList.length > 0)
                        ) {
                            e.columns = [
                                { key: "A", width: 25 },
                                { key: "B", width: 20 },
                                { key: "C", width: 20 },
                                { key: "D", width: 20 },
                                { key: "E", width: 20 },
                                { key: "F", width: 20 },
                                { key: "G", width: 20 },
                                { key: "H", width: 20 },
                                { key: "I", width: 10 },
                            ];
                            for (let _ = 0; _ < this.referensiDaerahList.length; _++)
                                e.addRow({
                                    A: this.referensiDaerahList[_].nama_prop,
                                    B: this.referensiDaerahList[_].kode_prop,
                                    C: this.referensiDaerahList[_].nama_kab_kota,
                                    D: this.referensiDaerahList[_].kode_kab_kota,
                                    E: this.referensiDaerahList[_].nama_camat,
                                    F: this.referensiDaerahList[_].kode_camat,
                                    G: this.referensiDaerahList[_].nama_lurah,
                                    H: this.referensiDaerahList[_].kode_lurah,
                                    I: this.referensiDaerahList[_].ket,
                                });
                        }
                        let s = e.rowCount;
                        if (null != s)
                            for (let _ = 1; _ <= s; _++) {
                                let u = 73;
                                for (let k = 65; k <= u; k++)
                                    (e.getCell(String.fromCharCode(k) + _).alignment = { vertical: "top", horizontal: "left", wrapText: !0 }),
                                        (e.getCell(String.fromCharCode(k) + _).border = { top: { style: "thin" }, left: { style: "thin" }, bottom: { style: "thin" }, right: { style: "thin" } });
                            }
                        (e.getRow(1).height = 16),
                            (e.getRow(1).font = { bold: !0 }),
                            t.xlsx.writeBuffer(),
                            t.xlsx.writeBuffer().then(function (_) {
                                const r = new Blob([_], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" });
                                dt.saveAs(r, "Penerima Bantuan - Referensi Wilayah.xlsx");
                            });
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(aa.Kz), a.Y36(aa.FF), a.Y36(Na._W), a.Y36(Ra.W), a.Y36($a), a.Y36(nt.E), a.Y36(_t.w), a.Y36(pt.O), a.Y36(at), a.Y36(ct.K));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-penerima-bantuan-tambah"]],
                        viewQuery: function (t, e) {
                            if ((1 & t && (a.Gf(gn, 5), a.Gf(mn, 7), a.Gf(bn, 7), a.Gf(vn, 7), a.Gf(kn, 7)), 2 & t)) {
                                let n;
                                a.iGM((n = a.CRH())) && (e.excelFormVariable = n.first),
                                    a.iGM((n = a.CRH())) && (e.provInstance = n.first),
                                    a.iGM((n = a.CRH())) && (e.kabkotInstance = n.first),
                                    a.iGM((n = a.CRH())) && (e.camatInstance = n.first),
                                    a.iGM((n = a.CRH())) && (e.lurahInstance = n.first);
                            }
                        },
                        decls: 7,
                        vars: 3,
                        consts: [
                            [1, "modal-header"],
                            [1, "fw-bolder", "m-0"],
                            ["type", "button", "aria-label", "Close", 1, "btn-close", 3, "click"],
                            [1, "card", "mb-3"],
                            ["class", "d-flex justify-content-center mt-20 mb-20", 4, "ngIf"],
                            [4, "ngIf"],
                            [1, "d-flex", "justify-content-center", "mt-20", "mb-20"],
                            [1, "spinner-border"],
                            ["novalidate", "", "class", "form", 3, "formGroup", "submit", 4, "ngIf"],
                            ["novalidate", "", 1, "form", 3, "formGroup", "submit"],
                            ["class", "card-body border-top p-9", 4, "ngIf"],
                            [1, "card-footer", "d-flex", "justify-content-between", "py-5", "px-9"],
                            [1, "btn", "btn-outline-danger", 3, "click"],
                            ["type", "submit", 1, "btn", "btn-success", 3, "disabled"],
                            [1, "card-body", "border-top", "p-9"],
                            [1, "row", "mb-6"],
                            ["for", "jenis_penerima", "ng", "", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [1, "col-lg-8", "fv-row"],
                            ["id", "jenis_penerima", "formControlName", "jenis_penerima", 1, "form-control", "select2", 3, "change"],
                            ["value", ""],
                            ["value", "3"],
                            ["value", "9"],
                            ["value", "10"],
                            ["value", "11"],
                            ["value", "12"],
                            ["value", "13"],
                            ["value", "14"],
                            ["value", "15"],
                            ["value", "16"],
                            ["value", "17"],
                            ["value", "4"],
                            ["for", "penerima-bantuan-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [1, "position-relative", "is-loading"],
                            ["id", "nama", "formControlName", "nama", "type", "text", "placeholder", "Nama Penerima", 1, "form-control"],
                            ["class", "row mb-6", 4, "ngIf"],
                            ["id", "alamat", "formControlName", "alamat", "type", "text", "placeholder", "Alamat Penerima", 1, "form-control"],
                            ["for", "prov-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [
                                "id",
                                "prov-autocomplete",
                                "type",
                                "text",
                                "formControlName",
                                "id_prov",
                                "placeholder",
                                "Provinsi",
                                "maxlength",
                                "40",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["provInstance", "ngbTypeahead"],
                            ["class", "spinner-border spinner-border-sm mt-1", 4, "ngIf"],
                            ["for", "kabkot-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [
                                "id",
                                "kabkot-autocomplete",
                                "type",
                                "text",
                                "formControlName",
                                "id_kabkot",
                                "placeholder",
                                "Kab/kot",
                                "maxlength",
                                "40",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["kabkotInstance", "ngbTypeahead"],
                            ["for", "camat-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [
                                "id",
                                "camat-autocomplete",
                                "type",
                                "text",
                                "formControlName",
                                "id_camat",
                                "placeholder",
                                "Kecamatan",
                                "maxlength",
                                "40",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["camatInstance", "ngbTypeahead"],
                            ["for", "lurah-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [
                                "id",
                                "lurah-autocomplete",
                                "type",
                                "text",
                                "formControlName",
                                "id_lurah",
                                "placeholder",
                                "Kelurahan / Desa",
                                "maxlength",
                                "40",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["lurahInstance", "ngbTypeahead"],
                            ["id", "no_telepon", "formControlName", "no_telepon", "type", "number", "placeholder", "No. Telepon Penerima", 1, "form-control"],
                            ["type", "text", "id", "nik", "placeholder", "NIK", "formControlName", "nik", "minlength", "16", "maxlength", "16", 1, "form-control"],
                            ["class", "form-text text-danger fw-bold", 4, "ngIf"],
                            [1, "form-text", "text-danger", "fw-bold"],
                            [1, "spinner-border", "spinner-border-sm", "mt-1"],
                            [1, "row", "mb-5"],
                            [1, "d-inline", "mb-5"],
                            [1, "svg-icon", "svg-icon-3", "text-success", 3, "inlineSVG"],
                            [1, "fw-bold", "fs-6", 3, "click"],
                            [1, "fw-bold", "fs-6", 3, "href"],
                            ["for", "sumberDana-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [1, "col-lg-8", "fv-row", "mb-5"],
                            ["id", "sumberDana", "formControlName", "sumberDana", "name", "jenis_subtitle", 1, "form-select"],
                            [3, "value", 4, "ngFor", "ngForOf"],
                            ["for", "excel", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            ["id", "excel", "name", "excel", "type", "file", "placeholder", "File Excel", "formControlName", "excel", "aria-describedby", "excelDescription", 1, "form-control", 3, "change"],
                            ["excelForm", ""],
                            ["id", "excelDescription", 1, "form-text", "text-warning"],
                            [3, "value"],
                            ["clas", "indicator-progress"],
                            [1, "spinner-border", "spinner-border-sm", "align-middle", "ms-2"],
                        ],
                        template: function (t, e) {
                            1 & t &&
                                (a.TgZ(0, "div", 0)(1, "h3", 1),
                                a._uU(2),
                                a.qZA(),
                                a.TgZ(3, "button", 2),
                                a.NdJ("click", function () {
                                    return e.activeModal.dismiss();
                                }),
                                a.qZA()(),
                                a.TgZ(4, "div", 3),
                                a.YNc(5, fn, 2, 0, "div", 4),
                                a.YNc(6, An, 2, 1, "div", 5),
                                a.qZA()),
                                2 & t &&
                                    (a.xp6(2),
                                    a.hij(" ", e.from_file ? "Upload Penerima Bantuan" : "Form Penerima", " "),
                                    a.xp6(3),
                                    a.Q6J("ngIf", e.loadProvinsiIsLoading || e.loadKabkotIsLoading || e.daerahListIsLoading || e.loadReferensiDaerahIsLoading),
                                    a.xp6(1),
                                    a.Q6J("ngIf", !(e.loadProvinsiIsLoading || e.loadKabkotIsLoading || e.daerahListIsLoading || e.loadReferensiDaerahIsLoading)));
                        },
                        directives: [j.O5, p._Y, p.JL, p.sg, p.EJ, p.JJ, p.u, p.YN, p.Kr, p.Fj, p.wO, p.nD, aa.dR, p.wV, Ma.d$, j.sg],
                        styles: [""],
                    })),
                    i
                );
            })();
            function Un(i, d) {
                1 & i && a._UZ(0, "app-loading-spinner", 9);
            }
            function Zn(i, d) {
                1 & i && (a.TgZ(0, "th", 30), a._uU(1, " Id Profil "), a.qZA());
            }
            function Pn(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 31), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", t.id_profil, " ");
                }
            }
            function Nn(i, d) {
                1 & i && (a.TgZ(0, "th", 32), a._uU(1, " Nama Lembaga / Individu "), a.qZA());
            }
            function Mn(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 33), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", t.nama_teks, " ");
                }
            }
            function Kn(i, d) {
                1 & i && (a.TgZ(0, "th", 32), a._uU(1, "Alamat"), a.qZA());
            }
            function Jn(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 33), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", t.alamat_teks, " ");
                }
            }
            function qn(i, d) {
                1 & i && (a.TgZ(0, "th", 32), a._uU(1, "Jenis"), a.qZA());
            }
            function Yn(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 33), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", t.jenis_penerima, " ");
                }
            }
            function Wn(i, d) {
                1 & i && a._UZ(0, "tr", 34);
            }
            function Gn(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "tr", 35),
                        a.NdJ("click", function () {
                            const s = a.CHM(t).$implicit;
                            return a.oxw(3).selectUser(s);
                        }),
                        a.qZA();
                }
            }
            function Qn(i, d) {
                if (
                    (1 & i &&
                        (a.TgZ(0, "table", 19),
                        a.ynx(1, 20),
                        a.YNc(2, Zn, 2, 0, "th", 21),
                        a.YNc(3, Pn, 2, 2, "td", 22),
                        a.BQk(),
                        a.ynx(4, 23),
                        a.YNc(5, Nn, 2, 0, "th", 24),
                        a.YNc(6, Mn, 2, 2, "td", 25),
                        a.BQk(),
                        a.ynx(7, 26),
                        a.YNc(8, Kn, 2, 0, "th", 24),
                        a.YNc(9, Jn, 2, 2, "td", 25),
                        a.BQk(),
                        a.ynx(10, 27),
                        a.YNc(11, qn, 2, 0, "th", 24),
                        a.YNc(12, Yn, 2, 2, "td", 25),
                        a.BQk(),
                        a.YNc(13, Wn, 1, 0, "tr", 28),
                        a.YNc(14, Gn, 1, 0, "tr", 29),
                        a.qZA()),
                    2 & i)
                ) {
                    const t = a.oxw(2);
                    a.Q6J("dataSource", t.dataSource), a.xp6(13), a.Q6J("matHeaderRowDef", t.displayedColumns), a.xp6(1), a.Q6J("matRowDefColumns", t.displayedColumns);
                }
            }
            function On(i, d) {
                if ((1 & i && (a.TgZ(0, "table")(1, "tr")(2, "td")(3, "div", 36)(4, "div", 37)(5, "h4", 38), a._uU(6, " Data penerima bantuan untuk rincian ini masih kosong "), a.qZA()()()()()()), 2 & i)) {
                    const t = a.oxw(2);
                    a.xp6(2), a.Udp("text-align", "center"), a.uIk("colspan", t.displayedColumns.length);
                }
            }
            const En = function () {
                return [5];
            };
            function Hn(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 10)(1, "div", 11)(2, "div", 12),
                        a._UZ(3, "span", 13),
                        a.TgZ(4, "input", 14),
                        a.NdJ("keyup", function (n) {
                            return a.CHM(t), a.oxw().applyFilter(n);
                        }),
                        a.qZA()(),
                        a.TgZ(5, "div", 15),
                        a.YNc(6, Qn, 15, 3, "table", 16),
                        a.YNc(7, On, 7, 3, "table", 17),
                        a._UZ(8, "mat-paginator", 18),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw();
                    a.xp6(3),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen021.svg"),
                        a.xp6(3),
                        a.Q6J("ngIf", t.dataSource.data.length > 0),
                        a.xp6(1),
                        a.Q6J("ngIf", 0 === t.dataSource.data.length && !t.penerimaBantuanIsLoading),
                        a.xp6(1),
                        a.Q6J("pageSizeOptions", a.DdM(4, En));
                }
            }
            function $n(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 39),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().addPenerimaBantuan(!0);
                        }),
                        a._uU(1, " Tambah Penerima Menggunakan Excel "),
                        a.qZA();
                }
            }
            function zn(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 40),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().addPenerimaBantuan();
                        }),
                        a._uU(1, " Tambah Penerima "),
                        a.qZA();
                }
            }
            let Vn = (() => {
                class i {
                    constructor(t, e, n, s) {
                        (this.modalService = t),
                            (this.konfigurasiService = e),
                            (this.userService = n),
                            (this.activeModal = s),
                            (this.displayedColumns = ["id_user", "nama_user", "alamat_teks", "nama_level"]),
                            (this.display = []),
                            (this.data_baru_tambah = []),
                            (this.dataSource = new L.by(this.penerimaBantuanList)),
                            (this.allDataIsLoaded = !1),
                            (this.penerimaBantuanIsLoading = !1),
                            (this.penerimaBantuanListIsLoaded = !1);
                    }
                    set paginator(t) {
                        this.dataSource.paginator = t;
                    }
                    set sort(t) {
                        this.dataSource.sort = t;
                    }
                    ngOnInit() {
                        this.loadData();
                    }
                    applyFilter(t) {
                        let e;
                        (e = t.target.value), (this.dataSource.filter = null == e ? void 0 : e.toLowerCase());
                    }
                    loadData() {
                        const t = new FormData();
                        t.append("id_daerah", String(this.konfigurasiService.getIdDaerah())),
                            t.append("tahun", String(this.konfigurasiService.getTahun())),
                            (this.penerimaBantuanIsLoading = !0),
                            (this.penerimaBantuanSub = this.userService.listForPenerimaBantuan(t).subscribe({
                                next: (e) => {
                                    (this.penerimaBantuanIsLoading = !1), (this.penerimaBantuanListIsLoaded = !0), (this.penerimaBantuanList = e.data), this.buildDataSource();
                                },
                                error: (e) => {
                                    this.penerimaBantuanIsLoading = !1;
                                },
                            }));
                    }
                    buildDataSource() {
                        if (!1 === this.allDataIsLoaded && 1 == this.penerimaBantuanListIsLoaded) {
                            let t = 0;
                            this.penerimaBantuanList
                                .sort((e, n) => e.urut_sasaran - n.urut_sasaran)
                                .forEach((e) => {
                                    (this.display[t] = { id_profil: e.id_profil, nama_teks: e.nama_teks, alamat_teks: e.alamat_teks, jenis_penerima: e.jenis_penerima }), t++;
                                }),
                                (this.dataSource.data = this.display),
                                (this.dataSource.paginator = this.paginator),
                                (this.dataSource.sort = this.sort),
                                (this.allDataIsLoaded = !0);
                        }
                    }
                    selectUser(t) {
                        this.activeModal.close(t);
                    }
                    addPenerimaBantuan(t = !1) {
                        const e = this.modalService.open(Fn, { size: "lg" });
                        (e.componentInstance.from_file = t),
                            t &&
                                ((e.componentInstance.jumlahRincianAnggaranSkpd = this.jumlahRincianAnggaranSkpd),
                                (e.componentInstance.paguIndikatif = this.paguIndikatif),
                                (e.componentInstance.id_unit = this.id_unit),
                                (e.componentInstance.id_bl = this.id_bl),
                                (e.componentInstance.id_sub_bl = this.id_sub_bl),
                                (e.componentInstance.jenis_bl = this.jenis_bl),
                                (e.componentInstance.id_akun = this.id_akun),
                                (e.componentInstance.id_jadwal_murni = this.id_jadwal_murni),
                                (e.componentInstance.id_skpd = this.id_skpd),
                                (e.componentInstance.id_sub_skpd = this.id_sub_skpd),
                                (e.componentInstance.id_program = this.id_program),
                                (e.componentInstance.id_giat = this.id_giat),
                                (e.componentInstance.id_sub_giat = this.id_sub_giat),
                                (e.componentInstance.rkpd_murni = this.rkpd_murni),
                                (e.componentInstance.rkpd_pak = this.rkpd_pak),
                                (e.componentInstance.nama_daerah = this.nama_daerah),
                                (e.componentInstance.nama_unit = this.nama_unit),
                                (e.componentInstance.nama_skpd = this.nama_skpd),
                                (e.componentInstance.nama_sub_skpd = this.nama_sub_skpd),
                                (e.componentInstance.nama_program = this.nama_program),
                                (e.componentInstance.nama_giat = this.nama_giat),
                                (e.componentInstance.nama_sub_giat = this.nama_sub_giat),
                                (e.componentInstance.nama_standar_nfs = this.nama_standar_nfs),
                                (e.componentInstance.nama_jadwal_murni = this.nama_jadwal_murni),
                                (e.componentInstance.nama_blt = this.nama_blt),
                                (e.componentInstance.nama_usulan = this.nama_usulan),
                                (e.componentInstance.nama_jenis_usul = this.nama_jenis_usul),
                                (e.componentInstance.kode_akun = this.kode_akun),
                                (e.componentInstance.nama_akun = this.nama_akun)),
                            (this.allDataIsLoaded = !1),
                            e.result.then(
                                (n) => {
                                    t && 1 == n && this.activeModal.close(!0), this.ngOnInit();
                                },
                                (n) => {}
                            );
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(aa.FF), a.Y36(Ra.W), a.Y36(ct.K), a.Y36(aa.Kz));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-penerima-bantuan-list"]],
                        viewQuery: function (t, e) {
                            if ((1 & t && (a.Gf(X.NW, 5), a.Gf(S.YE, 5)), 2 & t)) {
                                let n;
                                a.iGM((n = a.CRH())) && (e.paginator = n.first), a.iGM((n = a.CRH())) && (e.sort = n.first);
                            }
                        },
                        decls: 12,
                        vars: 4,
                        consts: [
                            [1, "modal-header"],
                            [1, "fw-bolder", "m-0"],
                            ["type", "button", "aria-label", "Close", 1, "btn-close", 3, "click"],
                            ["class", "m-5", 4, "ngIf"],
                            ["class", "card card-xl-stretch", 4, "ngIf"],
                            [1, "card-footer", "d-flex", "justify-content-between", "py-5", "px-9"],
                            [1, "btn", "btn-outline-danger", 3, "click"],
                            ["type", "button", "class", "btn btn-success", "style", "margin-right: 5px", 3, "click", 4, "ngIf"],
                            ["type", "button", "class", "btn btn-primary", 3, "click", 4, "ngIf"],
                            [1, "m-5"],
                            [1, "card", "card-xl-stretch"],
                            [1, "card-body", "py-3"],
                            [1, "d-flex", "align-items-center", "position-relative", "my-1", "py-2"],
                            [1, "svg-icon", "svg-icon-1", "position-absolute", "ms-4", 3, "inlineSVG"],
                            ["type", "text", "placeholder", "Pencarian", 1, "form-control", "ps-14", 3, "keyup"],
                            [1, "table-responsive"],
                            ["mat-table", "", "matSort", "", "class", "table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4", 3, "dataSource", 4, "ngIf"],
                            [4, "ngIf"],
                            ["showFirstLastButtons", "", 3, "pageSizeOptions"],
                            ["mat-table", "", "matSort", "", 1, "table", "table-row-dashed", "table-row-gray-300", "align-middle", "gs-0", "gy-4", 3, "dataSource"],
                            ["matColumnDef", "id_user"],
                            ["mat-header-cell", "", "class", "fw-bolder text-muted text-center", 4, "matHeaderCellDef"],
                            ["class", "px-5 text-center", "mat-cell", "", 4, "matCellDef"],
                            ["matColumnDef", "nama_user"],
                            ["mat-header-cell", "", "class", "fw-bolder text-muted", 4, "matHeaderCellDef"],
                            ["class", "pe-5", "mat-cell", "", 4, "matCellDef"],
                            ["matColumnDef", "alamat_teks"],
                            ["matColumnDef", "nama_level"],
                            ["mat-header-row", "", 4, "matHeaderRowDef"],
                            ["mat-row", "", "class", "hover-hand", 3, "click", 4, "matRowDef", "matRowDefColumns"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-muted", "text-center"],
                            ["mat-cell", "", 1, "px-5", "text-center"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-muted"],
                            ["mat-cell", "", 1, "pe-5"],
                            ["mat-header-row", ""],
                            ["mat-row", "", 1, "hover-hand", 3, "click"],
                            [1, "d-flex", "justify-content-center", "align-items-center", "w-100", "h-100", "p-20"],
                            [1, "alert", "alert-warning"],
                            [1, "alert-heading", 2, "margin", "0px"],
                            ["type", "button", 1, "btn", "btn-success", 2, "margin-right", "5px", 3, "click"],
                            ["type", "button", 1, "btn", "btn-primary", 3, "click"],
                        ],
                        template: function (t, e) {
                            1 & t &&
                                (a.TgZ(0, "div", 0)(1, "h3", 1),
                                a._uU(2, "Penerima Bantuan"),
                                a.qZA(),
                                a.TgZ(3, "button", 2),
                                a.NdJ("click", function () {
                                    return e.activeModal.dismiss("Cross click");
                                }),
                                a.qZA()(),
                                a.YNc(4, Un, 1, 0, "app-loading-spinner", 3),
                                a.YNc(5, Hn, 9, 5, "div", 4),
                                a.TgZ(6, "div", 5)(7, "span", 6),
                                a.NdJ("click", function () {
                                    return e.activeModal.close(!1);
                                }),
                                a._uU(8, " Tutup "),
                                a.qZA(),
                                a.TgZ(9, "div"),
                                a.YNc(10, $n, 2, 0, "button", 7),
                                a.YNc(11, zn, 2, 0, "button", 8),
                                a.qZA()()),
                                2 & t &&
                                    (a.xp6(4),
                                    a.Q6J("ngIf", e.penerimaBantuanIsLoading),
                                    a.xp6(1),
                                    a.Q6J("ngIf", !e.penerimaBantuanIsLoading),
                                    a.xp6(5),
                                    a.Q6J("ngIf", !e.penerimaBantuanIsLoading && "18480" == e.id_akun),
                                    a.xp6(1),
                                    a.Q6J("ngIf", !e.penerimaBantuanIsLoading));
                        },
                        directives: [j.O5, Ha.g, Ma.d$, L.BZ, S.YE, L.w1, L.fO, L.ge, L.Dz, L.ev, L.as, L.XQ, L.nj, L.Gk, X.NW],
                        styles: [".hover-hand[_ngcontent-%COMP%]:hover{cursor:pointer;background-color:#f7f7f7}"],
                    })),
                    i
                );
            })();
            var ce = D(32928),
                Xn = D(65671),
                it = D(59219),
                tt = D(4696);
            let ai = (() => {
                class i {
                    constructor(t) {
                        (this.http = t), (this.API_URL = `${Ka.N.apiUrlRenja}`);
                    }
                    add(t) {
                        return this.http.post(this.API_URL + "/penerima_bantuan/add", t);
                    }
                    view(t, e) {
                        return this.http.post(this.API_URL + `/penerima_bantuan/view/${t}`, e);
                    }
                    viewByIdRinciSubBl(t, e) {
                        return this.http.post(this.API_URL + `/penerima_bantuan/view_by_id_rinci_sub_bl/${t}`, e);
                    }
                    update(t) {
                        return this.http.post(this.API_URL + "/penerima_bantuan/update", t);
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.LFG(Pa.eN));
                    }),
                    (i.ɵprov = a.Yz7({ token: i, factory: i.ɵfac, providedIn: "root" })),
                    i
                );
            })();
            var st = D(65414);
            const ti = ["satuanInstance"],
                ei = ["satuanInstance2"],
                ni = ["satuanInstance3"],
                ii = ["satuanInstance4"],
                si = ["paketInstance"],
                oi = ["akunInstance"],
                li = ["komponenInstance"],
                ri = ["keteranganInstance"],
                di = ["bidangUrusanInstance"],
                ui = ["provInstance"],
                _i = ["kabkotInstance"],
                pi = ["camatInstance"],
                ci = ["lurahInstance"];
            function hi(i, d) {
                1 & i && (a.TgZ(0, "div", 6), a._UZ(1, "div", 7), a.qZA());
            }
            function gi(i, d) {
                1 & i && a._UZ(0, "div", 43);
            }
            const mi = function (i) {
                return { "is-invalid": i };
            };
            function bi(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 12)(1, "label", 38),
                        a._uU(2, "Rekening / Akun"),
                        a.qZA(),
                        a.TgZ(3, "div", 14)(4, "div", 39)(5, "input", 40, 41),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(3).akunModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(3).akunFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(3).akunClick$.next(n.target.value);
                        })("ngModelChange", function () {
                            return a.CHM(t), a.oxw(3).onChangeAkun();
                        }),
                        a.qZA(),
                        a.YNc(7, gi, 1, 0, "div", 42),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(5),
                        a.Q6J("ngClass", a.VKq(10, mi, (null == t.akunModel ? null : t.akunModel.is_locked) > 0))("ngModel", t.akunModel)("ngbTypeahead", t.akunSearch)("inputFormatter", t.akunFormatter)("resultFormatter", t.akunFormatter)(
                            "editable",
                            !1
                        )("disabled", t.isSaving)("ngbTooltip", (null == t.akunModel ? null : t.akunModel.is_locked) > 0 ? "Rekening / Akun Belanja sudah di Non Aktifkan" : ""),
                        a.uIk("disabled", "view" == t.mode || null),
                        a.xp6(2),
                        a.Q6J("ngIf", t.akunSearchIsLoading);
                }
            }
            function vi(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 12)(1, "label", 44),
                        a._uU(2, "Pengelompokan Belanja / Paket Pekerjaan"),
                        a.qZA(),
                        a.TgZ(3, "div", 14)(4, "select", 45),
                        a.NdJ("ngModelChange", function () {
                            return a.CHM(t), a.oxw(3).paketChange();
                        }),
                        a.TgZ(5, "option", 16),
                        a._uU(6, "Pilih Pemaketan Kerja/Pengelompokan Belanja..."),
                        a.qZA(),
                        a.TgZ(7, "option", 46),
                        a._uU(8, "Pemaketan Kerja"),
                        a.qZA(),
                        a.TgZ(9, "option", 47),
                        a._uU(10, " Pengelompokan Belanja "),
                        a.qZA()()()();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(4),
                        a.uIk("disabled", "view" == t.mode || null),
                        a.xp6(3),
                        a.Q6J("selected", "1" == (null == t.paketBelanja ? null : t.paketBelanja.is_paket)),
                        a.xp6(2),
                        a.Q6J("selected", "2" == (null == t.paketBelanja ? null : t.paketBelanja.is_paket));
                }
            }
            function ki(i, d) {
                if ((1 & i && (a.TgZ(0, "option", 52), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.Q6J("value", t.id_subs_sub_bl), a.xp6(1), a.hij(" ", t.subs_bl_teks, " ");
                }
            }
            function fi(i, d) {
                1 & i && a._UZ(0, "div", 43);
            }
            function Si(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 53),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(4).openPaketBelanjaModal();
                        }),
                        a._uU(1, " Tambah Paket Belanja "),
                        a.qZA();
                }
            }
            function ji(i, d) {
                if (
                    (1 & i &&
                        (a.TgZ(0, "div", 12)(1, "label", 48),
                        a._uU(2, "Uraian Pengelompokan Belanja / Paket Pekerjaan"),
                        a.qZA(),
                        a.TgZ(3, "div", 14)(4, "div", 39)(5, "select", 49)(6, "option", 16),
                        a._uU(7, "Pilih Paket Belanja..."),
                        a.qZA(),
                        a.YNc(8, ki, 2, 2, "option", 50),
                        a.qZA(),
                        a.YNc(9, fi, 1, 0, "div", 42),
                        a.qZA(),
                        a.YNc(10, Si, 2, 0, "div", 51),
                        a.qZA()()),
                    2 & i)
                ) {
                    const t = a.oxw(3);
                    a.xp6(5), a.uIk("disabled", "view" == t.mode || null), a.xp6(3), a.Q6J("ngForOf", t.paketBelanjaList), a.xp6(1), a.Q6J("ngIf", t.paketBelanjaListIsLoading), a.xp6(1), a.Q6J("ngIf", "view" != t.mode);
                }
            }
            function Ti(i, d) {
                if ((1 & i && (a.TgZ(0, "option", 52), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.Q6J("value", t.id_dana), a.xp6(1), a.hij(" ", t.nama_dana, " ");
                }
            }
            function Ii(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 12)(1, "label", 54),
                        a._uU(2, "Sumber Dana"),
                        a.qZA(),
                        a.TgZ(3, "div", 14)(4, "select", 55),
                        a.NdJ("ngModelChange", function () {
                            return a.CHM(t), a.oxw(3).onChangeDana();
                        }),
                        a.TgZ(5, "option", 16),
                        a._uU(6, "Pilih Sumber Dana..."),
                        a.qZA(),
                        a.YNc(7, Ti, 2, 2, "option", 50),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(4), a.uIk("disabled", "view" == t.mode || null), a.xp6(3), a.Q6J("ngForOf", t.sumberDanaList);
                }
            }
            function Bi(i, d) {
                1 & i && (a.TgZ(0, "div", 56)(1, "label", 57), a._uU(2, "PENERIMA BUNGA"), a.qZA()());
            }
            function xi(i, d) {
                1 & i && (a.TgZ(0, "div", 56)(1, "label", 57), a._uU(2, "PENERIMA SUBSIDI"), a.qZA()());
            }
            function Ci(i, d) {
                1 & i && (a.TgZ(0, "div", 56)(1, "label", 57), a._uU(2, "PENERIMA BAGI HASIL"), a.qZA()());
            }
            function yi(i, d) {
                1 & i && (a.TgZ(0, "div", 56)(1, "label", 57), a._uU(2, "PENERIMA BANTUAN KEUANGAN"), a.qZA()());
            }
            function Li(i, d) {
                if ((1 & i && (a.TgZ(0, "div", 12)(1, "label", 58), a._uU(2, "Uraian / Nama Penerima"), a.qZA(), a.TgZ(3, "div", 14), a._UZ(4, "input", 59), a.qZA()()), 2 & i)) {
                    const t = a.oxw(3);
                    a.xp6(4), a.uIk("disabled", "view" == t.mode || null);
                }
            }
            function wi(i, d) {
                1 & i && (a.TgZ(0, "div", 56)(1, "label", 57), a._uU(2, "PENERIMA BANTUAN"), a.qZA()());
            }
            function Di(i, d) {
                1 & i && a._UZ(0, "div", 43);
            }
            function Ri(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "a", 65),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(4).openPenerimaBantuan();
                        }),
                        a._UZ(1, "span", 66),
                        a.qZA();
                }
                2 & i && (a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen021.svg"));
            }
            function Ai(i, d) {
                if (
                    (1 & i &&
                        (a.TgZ(0, "div", 12)(1, "label", 60),
                        a._uU(2, "Uraian / Nama Penerima"),
                        a.qZA(),
                        a.TgZ(3, "div", 61)(4, "div", 39),
                        a._UZ(5, "input", 62),
                        a.YNc(6, Di, 1, 0, "div", 42),
                        a.qZA()(),
                        a.TgZ(7, "div", 63),
                        a.YNc(8, Ri, 2, 1, "a", 64),
                        a.qZA()()),
                    2 & i)
                ) {
                    const t = a.oxw(3);
                    a.xp6(5), a.uIk("disabled", "view" == t.mode || null)("disabled", !0), a.xp6(1), a.Q6J("ngIf", t.komponenSearchIsLoading), a.xp6(2), a.Q6J("ngIf", "view" != t.mode);
                }
            }
            function Fi(i, d) {
                1 & i && a._UZ(0, "div", 43);
            }
            function Ui(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 12)(1, "label", 67),
                        a._uU(2, "Provinsi"),
                        a.qZA(),
                        a.TgZ(3, "div", 14)(4, "div", 39)(5, "input", 68, 69),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(3).provModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(3).provFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(3).provClick$.next(n.target.value);
                        }),
                        a.qZA(),
                        a.YNc(7, Fi, 1, 0, "div", 42),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(5),
                        a.Q6J("ngModel", t.provModel)("ngbTypeahead", t.searchProv)("inputFormatter", t.provFormatter)("resultFormatter", t.provFormatter)("editable", !1),
                        a.uIk("disabled", "view" == t.mode || null),
                        a.xp6(2),
                        a.Q6J("ngIf", t.searchProvinsiIsLoading);
                }
            }
            function Zi(i, d) {
                1 & i && a._UZ(0, "div", 43);
            }
            function Pi(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 12)(1, "label", 70),
                        a._uU(2, "Kab/Kota"),
                        a.qZA(),
                        a.TgZ(3, "div", 14)(4, "div", 39)(5, "input", 71, 72),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(3).kabkotModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(3).kabkotFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(3).kabkotClick$.next(n.target.value);
                        }),
                        a.qZA(),
                        a.YNc(7, Zi, 1, 0, "div", 42),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(5),
                        a.Q6J("ngModel", t.kabkotModel)("ngbTypeahead", t.searchKabkot)("inputFormatter", t.kabkotFormatter)("resultFormatter", t.kabkotFormatter)("editable", !1),
                        a.uIk("disabled", !t.provModel || "view" == t.mode || null),
                        a.xp6(2),
                        a.Q6J("ngIf", t.searchKabkotIsLoading);
                }
            }
            function Ni(i, d) {
                1 & i && a._UZ(0, "div", 43);
            }
            function Mi(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 12)(1, "label", 73),
                        a._uU(2, "Kecamatan"),
                        a.qZA(),
                        a.TgZ(3, "div", 14)(4, "div", 39)(5, "input", 74, 75),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(3).camatModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(3).camatFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(3).camatClick$.next(n.target.value);
                        }),
                        a.qZA(),
                        a.YNc(7, Ni, 1, 0, "div", 42),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(5),
                        a.Q6J("ngModel", t.camatModel)("ngbTypeahead", t.searchCamat)("inputFormatter", t.camatFormatter)("resultFormatter", t.camatFormatter)("editable", !1),
                        a.uIk("disabled", !t.kabkotModel || "view" == t.mode || null),
                        a.xp6(2),
                        a.Q6J("ngIf", t.searchCamatIsLoading);
                }
            }
            function Ki(i, d) {
                1 & i && a._UZ(0, "div", 43);
            }
            function Ji(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 12)(1, "label", 76),
                        a._uU(2, "Kelurahan / Desa"),
                        a.qZA(),
                        a.TgZ(3, "div", 14)(4, "div", 39)(5, "input", 77, 78),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(3).lurahModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(3).lurahFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(3).lurahClick$.next(n.target.value);
                        }),
                        a.qZA(),
                        a.YNc(7, Ki, 1, 0, "div", 42),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(5),
                        a.Q6J("ngModel", t.lurahModel)("ngbTypeahead", t.searchLurah)("inputFormatter", t.lurahFormatter)("resultFormatter", t.lurahFormatter)("editable", !1),
                        a.uIk("disabled", !t.camatModel || "view" == t.mode || null),
                        a.xp6(2),
                        a.Q6J("ngIf", t.searchLurahIsLoading);
                }
            }
            function qi(i, d) {
                if (
                    (1 & i &&
                        (a.TgZ(0, "div", 12)(1, "label", 79),
                        a._uU(2, "Jenis Standar Harga"),
                        a.qZA(),
                        a.TgZ(3, "div", 14)(4, "select", 80)(5, "option", 16),
                        a._uU(6, "Pilih Standar Harga..."),
                        a.qZA(),
                        a.TgZ(7, "option", 81),
                        a._uU(8, "SSH"),
                        a.qZA(),
                        a.TgZ(9, "option", 82),
                        a._uU(10, "SBU"),
                        a.qZA(),
                        a.TgZ(11, "option", 83),
                        a._uU(12, "HSPK"),
                        a.qZA(),
                        a.TgZ(13, "option", 84),
                        a._uU(14, "ASB"),
                        a.qZA()()()()),
                    2 & i)
                ) {
                    const t = a.oxw(3);
                    a.xp6(4), a.uIk("disabled", "view" == t.mode || null);
                }
            }
            function Yi(i, d) {
                1 & i && a._UZ(0, "div", 43);
            }
            function Wi(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "a", 88),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(4).openKomponen();
                        }),
                        a._UZ(1, "span", 66),
                        a.qZA();
                }
                2 & i && (a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen021.svg"));
            }
            function Gi(i, d) {
                if (
                    (1 & i &&
                        (a.TgZ(0, "div", 12)(1, "label", 85),
                        a._uU(2, "Komponen"),
                        a.qZA(),
                        a.TgZ(3, "div", 61)(4, "div", 39),
                        a._UZ(5, "input", 86),
                        a.YNc(6, Yi, 1, 0, "div", 42),
                        a.qZA()(),
                        a.TgZ(7, "div", 63),
                        a.YNc(8, Wi, 2, 1, "a", 87),
                        a.qZA()()),
                    2 & i)
                ) {
                    const t = a.oxw(3);
                    a.xp6(5), a.uIk("disabled", !0), a.xp6(1), a.Q6J("ngIf", t.komponenSearchIsLoading), a.xp6(2), a.Q6J("ngIf", "view" != t.mode);
                }
            }
            function Qi(i, d) {
                1 & i && (a.TgZ(0, "div", 12)(1, "label", 89), a._uU(2, "TKDN"), a.qZA(), a.TgZ(3, "div", 14), a._UZ(4, "input", 90), a.qZA()()), 2 & i && (a.xp6(4), a.uIk("disabled", !0));
            }
            function Oi(i, d) {
                1 & i && (a.TgZ(0, "div", 12)(1, "label", 91), a._uU(2, "Spesifikasi Komponen"), a.qZA(), a.TgZ(3, "div", 14), a._UZ(4, "input", 92), a.qZA()()), 2 & i && (a.xp6(4), a.uIk("disabled", !0));
            }
            function Ei(i, d) {
                if ((1 & i && (a.TgZ(0, "div", 12)(1, "label", 93), a._uU(2, "Satuan"), a.qZA(), a.TgZ(3, "div", 14), a._UZ(4, "input", 94), a.qZA()()), 2 & i)) {
                    const t = a.oxw(3);
                    a.xp6(4), a.uIk("disabled", !!t.rincianBelanjaForm.contains("spesifikasi_komponen") || null);
                }
            }
            function Hi(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 12)(1, "label", 95),
                        a._uU(2, "Harga Satuan"),
                        a.qZA(),
                        a.TgZ(3, "div", 14)(4, "input", 96),
                        a.NdJ("ngModelChange", function () {
                            return a.CHM(t), a.oxw(3).updateTotalHarga();
                        }),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(4), a.Q6J("allowNegativeNumbers", !1), a.uIk("disabled", !(!t.rincianBelanjaForm.contains("spesifikasi_komponen") && "view" != t.mode) || null);
                }
            }
            function $i(i, d) {
                if ((1 & i && (a.TgZ(0, "option", 52), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.Q6J("value", t.id_ket_sub_bl), a.xp6(1), a.hij(" ", t.ket_bl_teks, " ");
                }
            }
            function zi(i, d) {
                1 & i && a._UZ(0, "div", 43);
            }
            function Vi(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 53),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(4).openKeteranganModal();
                        }),
                        a._uU(1, " Tambah Keterangan "),
                        a.qZA();
                }
            }
            function Xi(i, d) {
                if (
                    (1 & i &&
                        (a.TgZ(0, "div", 12)(1, "label", 97),
                        a._uU(2, "Keterangan"),
                        a.qZA(),
                        a.TgZ(3, "div", 98)(4, "div", 39)(5, "select", 99)(6, "option", 16),
                        a._uU(7, "Pilih Keterangan..."),
                        a.qZA(),
                        a.YNc(8, $i, 2, 2, "option", 50),
                        a.qZA(),
                        a.YNc(9, zi, 1, 0, "div", 42),
                        a.qZA(),
                        a.YNc(10, Vi, 2, 0, "div", 51),
                        a.qZA()()),
                    2 & i)
                ) {
                    const t = a.oxw(3);
                    a.xp6(5), a.uIk("disabled", "view" == t.mode || null), a.xp6(3), a.Q6J("ngForOf", t.keteranganList), a.xp6(1), a.Q6J("ngIf", t.keteranganIsLoading), a.xp6(1), a.Q6J("ngIf", "view" != t.mode);
                }
            }
            function as(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 12)(1, "label", 100),
                        a._uU(2, "Tambahkan Pajak"),
                        a.qZA(),
                        a.TgZ(3, "div", 101)(4, "div", 102)(5, "input", 103),
                        a.NdJ("ngModelChange", function () {
                            return a.CHM(t), a.oxw(3).updateTotalHarga();
                        }),
                        a.qZA()()()();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(5), a.uIk("disabled", "view" == t.mode || null);
                }
            }
            function ts(i, d) {
                1 & i && a._UZ(0, "div", 43);
            }
            function es(i, d) {
                1 & i && a._UZ(0, "div", 43);
            }
            function ns(i, d) {
                1 & i && a._UZ(0, "div", 43);
            }
            function is(i, d) {
                1 & i && a._UZ(0, "div", 43);
            }
            function ss(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 12)(1, "label", 104),
                        a._uU(2, "Koefisien (Perkalian)"),
                        a.qZA(),
                        a.TgZ(3, "div", 14)(4, "div", 105)(5, "div", 106)(6, "input", 107),
                        a.NdJ("ngModelChange", function () {
                            return a.CHM(t), a.oxw(3).updateTotalHarga();
                        }),
                        a.qZA()(),
                        a.TgZ(7, "div", 108)(8, "div", 39)(9, "input", 109, 110),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(3).satuanModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(3).satuanFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(3).satuanClick$.next(n.target.value);
                        })("ngModelChange", function () {
                            return a.CHM(t), a.oxw(3).updateTotalHarga();
                        }),
                        a.qZA(),
                        a.YNc(11, ts, 1, 0, "div", 42),
                        a.qZA()(),
                        a.TgZ(12, "div", 106)(13, "input", 111),
                        a.NdJ("ngModelChange", function () {
                            return a.CHM(t), a.oxw(3).updateTotalHarga();
                        }),
                        a.qZA()(),
                        a.TgZ(14, "div", 108)(15, "div", 39)(16, "input", 112, 113),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(3).satuanModel2 = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(3).satuanFocus2$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(3).satuanClick2$.next(n.target.value);
                        })("ngModelChange", function () {
                            return a.CHM(t), a.oxw(3).updateTotalHarga();
                        }),
                        a.qZA(),
                        a.YNc(18, es, 1, 0, "div", 42),
                        a.qZA()(),
                        a.TgZ(19, "div", 106)(20, "input", 114),
                        a.NdJ("ngModelChange", function () {
                            return a.CHM(t), a.oxw(3).updateTotalHarga();
                        }),
                        a.qZA()(),
                        a.TgZ(21, "div", 108)(22, "div", 39)(23, "input", 115, 116),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(3).satuanModel3 = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(3).satuanFocus3$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(3).satuanClick3$.next(n.target.value);
                        })("ngModelChange", function () {
                            return a.CHM(t), a.oxw(3).updateTotalHarga();
                        }),
                        a.qZA(),
                        a.YNc(25, ns, 1, 0, "div", 42),
                        a.qZA()(),
                        a.TgZ(26, "div", 106)(27, "input", 117),
                        a.NdJ("ngModelChange", function () {
                            return a.CHM(t), a.oxw(3).updateTotalHarga();
                        }),
                        a.qZA()(),
                        a.TgZ(28, "div", 108)(29, "div", 39)(30, "input", 118, 119),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(3).satuanModel4 = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(3).satuanFocus4$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(3).satuanClick4$.next(n.target.value);
                        })("ngModelChange", function () {
                            return a.CHM(t), a.oxw(3).updateTotalHarga();
                        }),
                        a.qZA(),
                        a.YNc(32, is, 1, 0, "div", 42),
                        a.qZA()()()()();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(6),
                        a.uIk("disabled", "view" == t.mode || null),
                        a.xp6(3),
                        a.Q6J("ngModel", t.satuanModel)("ngbTypeahead", t.searchSatuan)("inputFormatter", t.satuanFormatter)("resultFormatter", t.satuanFormatter)("editable", !1),
                        a.uIk("disabled", "view" == t.mode || null),
                        a.xp6(2),
                        a.Q6J("ngIf", t.searchSatuanIsLoading),
                        a.xp6(2),
                        a.uIk("disabled", "view" == t.mode || null == t.rincianBelanjaForm.value.vol_1 || 0 == t.rincianBelanjaForm.value.vol_1 || null),
                        a.xp6(3),
                        a.Q6J("ngModel", t.satuanModel2)("ngbTypeahead", t.searchSatuan2)("inputFormatter", t.satuanFormatter2)("resultFormatter", t.satuanFormatter2)("editable", !1),
                        a.uIk("disabled", "view" == t.mode || null == t.rincianBelanjaForm.value.vol_1 || 0 == t.rincianBelanjaForm.value.vol_1 || null),
                        a.xp6(2),
                        a.Q6J("ngIf", t.searchSatuanIsLoading2),
                        a.xp6(2),
                        a.uIk("disabled", "view" == t.mode || null == t.rincianBelanjaForm.value.vol_2 || 0 == t.rincianBelanjaForm.value.vol_2 || null),
                        a.xp6(3),
                        a.Q6J("ngModel", t.satuanModel3)("ngbTypeahead", t.searchSatuan3)("inputFormatter", t.satuanFormatter3)("resultFormatter", t.satuanFormatter3)("editable", !1),
                        a.uIk("disabled", "view" == t.mode || null == t.rincianBelanjaForm.value.vol_2 || 0 == t.rincianBelanjaForm.value.vol_2 || null),
                        a.xp6(2),
                        a.Q6J("ngIf", t.searchSatuanIsLoading3),
                        a.xp6(2),
                        a.uIk("disabled", "view" == t.mode || null == t.rincianBelanjaForm.value.vol_3 || 0 == t.rincianBelanjaForm.value.vol_3 || null),
                        a.xp6(3),
                        a.Q6J("ngModel", t.satuanModel4)("ngbTypeahead", t.searchSatuan4)("inputFormatter", t.satuanFormatter4)("resultFormatter", t.satuanFormatter4)("editable", !1),
                        a.uIk("disabled", "view" == t.mode || null == t.rincianBelanjaForm.value.vol_3 || 0 == t.rincianBelanjaForm.value.vol_3 || null),
                        a.xp6(2),
                        a.Q6J("ngIf", t.searchSatuanIsLoading4);
                }
            }
            function os(i, d) {
                1 & i && (a.TgZ(0, "div", 12)(1, "label", 104), a._uU(2, "Volume"), a.qZA(), a.TgZ(3, "div", 14), a._UZ(4, "input", 120), a.qZA()()), 2 & i && (a.xp6(4), a.uIk("disabled", !0));
            }
            function ls(i, d) {
                1 & i && (a.TgZ(0, "div", 12)(1, "label", 104), a._uU(2, "Koefisien (Keterangan Jumlah)"), a.qZA(), a.TgZ(3, "div", 14), a._UZ(4, "input", 121), a.qZA()()), 2 & i && (a.xp6(4), a.uIk("disabled", !0));
            }
            function rs(i, d) {
                if ((1 & i && (a.TgZ(0, "div", 126), a._uU(1), a.qZA()), 2 & i)) {
                    const t = a.oxw(4);
                    a.xp6(1), a.hij(" Total Belanja Melebihi Pagu Sumber Dana Rp. ", t.pagu_dana, " ");
                }
            }
            function ds(i, d) {
                if ((1 & i && (a.TgZ(0, "div", 127), a._uU(1, " *Total Rincian Melebihi Pagu Indikatif "), a._UZ(2, "br"), a._uU(3), a.qZA()), 2 & i)) {
                    const t = a.oxw(4);
                    a.xp6(3), a.hij(" *Total Belanja Tidak Boleh Melebihi Total Belanja Sebelum Diedit (Rp. ", null == t.rincianBelanja ? null : t.rincianBelanja.total_harga, ") ");
                }
            }
            function us(i, d) {
                if ((1 & i && (a.TgZ(0, "div", 12)(1, "label", 122), a._uU(2, "Total Belanja"), a.qZA(), a.TgZ(3, "div", 14), a._UZ(4, "input", 123), a.YNc(5, rs, 2, 1, "div", 124), a.YNc(6, ds, 4, 1, "div", 125), a.qZA()()), 2 & i)) {
                    const t = a.oxw(3);
                    a.xp6(4),
                        a.Q6J("allowNegativeNumbers", !1),
                        a.uIk("disabled", !0),
                        a.xp6(1),
                        a.Q6J("ngIf", t.melebihi_pagu_dana && null != t.subBelanja && 1 == t.subBelanja.kunci_bl),
                        a.xp6(1),
                        a.Q6J("ngIf", "edit" == t.mode && null != t.rincianAnggaranSkpd && null != t.paguIndikatif && t.rincianAnggaranSkpd > t.paguIndikatif);
                }
            }
            function _s(i, d) {
                1 & i && a._UZ(0, "div", 43);
            }
            const ps = function () {
                return { standalone: !0 };
            };
            function cs(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 12)(1, "label", 128),
                        a._uU(2, "Bidang Urusan"),
                        a.qZA(),
                        a.TgZ(3, "div", 98)(4, "div", 39)(5, "input", 129, 130),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(3).bidangUrusanModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(3).bidangUrusanFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(3).bidangUrusanClick$.next(n.target.value);
                        })("ngModelChange", function () {
                            return a.CHM(t), a.oxw(3).bidangUrusanChange();
                        }),
                        a.qZA(),
                        a.YNc(7, _s, 1, 0, "div", 42),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(5),
                        a.s9C("placeholder", "Bidang Urusan..."),
                        a.Q6J("ngModel", t.bidangUrusanModel)("ngModelOptions", a.DdM(10, ps))("ngbTypeahead", t.bidangUrusanSearch)("inputFormatter", t.bidangUrusanFormatter)("resultFormatter", t.bidangUrusanFormatter)("editable", !1)(
                            "disabled",
                            t.bidangUrusanIsLoading || t.isSaving
                        ),
                        a.uIk("disabled", "view" == t.mode || null),
                        a.xp6(2),
                        a.Q6J("ngIf", t.bidangUrusanSearchIsLoading);
                }
            }
            function hs(i, d) {
                1 & i && (a.ynx(0), a._uU(1, "Simpan"), a.BQk());
            }
            function gs(i, d) {
                1 & i && (a.ynx(0), a.TgZ(1, "span", 133), a._uU(2), a._UZ(3, "span", 134), a.qZA(), a.BQk()), 2 & i && (a.xp6(1), a.Udp("display", "block"), a.xp6(1), a.hij(" Menyimpan...", " ", " "));
            }
            function ms(i, d) {
                if ((1 & i && (a.TgZ(0, "button", 131), a.YNc(1, hs, 2, 0, "ng-container", 132), a.YNc(2, gs, 4, 3, "ng-container", 132), a.qZA()), 2 & i)) {
                    const t = a.oxw(3);
                    let e;
                    a.Q6J(
                        "disabled",
                        t.rincianBelanjaForm.invalid ||
                            t.isSaving ||
                            (("add" == t.mode || ("edit" == t.mode && null != t.rincianAnggaranSkpd && null != t.paguIndikatif && t.rincianAnggaranSkpd < t.paguIndikatif)) &&
                                null != t.jumlahRincianAnggaranSkpd &&
                                null != t.paguIndikatif &&
                                t.jumlahRincianAnggaranSkpd > t.paguIndikatif) ||
                            ("edit" == t.mode &&
                                null != t.jumlahRincianAnggaranSkpd &&
                                null != t.paguIndikatif &&
                                null != t.rincianBelanja &&
                                null != t.rincianBelanjaForm &&
                                t.jumlahRincianAnggaranSkpd > t.paguIndikatif &&
                                t.rincianBelanja.total_harga < (null == (e = t.rincianBelanjaForm.get("total_harga")) ? null : e.value)) ||
                            (null != t.subBelanja &&
                                1 == t.subBelanja.kunci_bl &&
                                ("add" == t.mode || ("edit" == t.mode && null != t.rincianAnggaran && null != t.paguSubKegiatan && t.rincianAnggaran < t.paguSubKegiatan)) &&
                                null != t.jumlahRincianAnggaran &&
                                null != t.paguSubKegiatan &&
                                t.jumlahRincianAnggaran > t.paguSubKegiatan) ||
                            (null != t.subBelanja &&
                                1 == t.subBelanja.kunci_bl &&
                                "edit" == t.mode &&
                                null != t.jumlahRincianAnggaran &&
                                null != t.paguSubKegiatan &&
                                null != t.rincianBelanja &&
                                null != t.rincianBelanjaForm &&
                                t.jumlahRincianAnggaran > t.paguSubKegiatan &&
                                t.rincianBelanja.total_harga < (null == (e = t.rincianBelanjaForm.get("total_harga")) ? null : e.value)) ||
                            (t.melebihi_pagu_dana && null != t.subBelanja && 1 == t.subBelanja.kunci_bl)
                    ),
                        a.xp6(1),
                        a.Q6J("ngIf", !t.isSaving),
                        a.xp6(1),
                        a.Q6J("ngIf", t.isSaving);
                }
            }
            function bs(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "form", 10),
                        a.NdJ("submit", function () {
                            return a.CHM(t), a.oxw(2).onSubmit();
                        }),
                        a.TgZ(1, "div", 11)(2, "div", 12)(3, "label", 13),
                        a._uU(4, "Objek Belanja"),
                        a.qZA(),
                        a.TgZ(5, "div", 14)(6, "select", 15),
                        a.NdJ("change", function (n) {
                            return a.CHM(t), a.oxw(2).onChangeObjekBelanja(n.target.value);
                        }),
                        a.TgZ(7, "option", 16),
                        a._uU(8, "Pilih"),
                        a.qZA(),
                        a.TgZ(9, "option", 17),
                        a._uU(10, "Belanja Gaji dan Tunjangan ASN"),
                        a.qZA(),
                        a.TgZ(11, "option", 18),
                        a._uU(12, "Belanja Barang Jasa dan Modal"),
                        a.qZA(),
                        a.TgZ(13, "option", 19),
                        a._uU(14, "Belanja Bunga"),
                        a.qZA(),
                        a.TgZ(15, "option", 20),
                        a._uU(16, "Belanja Subsidi"),
                        a.qZA(),
                        a.TgZ(17, "option", 21),
                        a._uU(18, "Belanja Hibah (Barang/Jasa)"),
                        a.qZA(),
                        a.TgZ(19, "option", 22),
                        a._uU(20, "Belanja Hibah (Uang)"),
                        a.qZA(),
                        a.TgZ(21, "option", 23),
                        a._uU(22, "Belanja Bantuan Sosial (Barang/Jasa)"),
                        a.qZA(),
                        a.TgZ(23, "option", 24),
                        a._uU(24, "Belanja Bantuan Sosial (Uang)"),
                        a.qZA(),
                        a.TgZ(25, "option", 25),
                        a._uU(26, "Belanja Bagi Hasil"),
                        a.qZA(),
                        a.TgZ(27, "option", 26),
                        a._uU(28, "Belanja Bantuan Keuangan Umum"),
                        a.qZA(),
                        a.TgZ(29, "option", 27),
                        a._uU(30, "Belanja Bantuan Keuangan Khusus"),
                        a.qZA(),
                        a.TgZ(31, "option", 28),
                        a._uU(32, "Belanja Tidak Terduga (BTT)"),
                        a.qZA(),
                        a.TgZ(33, "option", 29),
                        a._uU(34, "Dana BOS (BOS Pusat)"),
                        a.qZA(),
                        a.TgZ(35, "option", 30),
                        a._uU(36, "Belanja Operasional (BLUD)"),
                        a.qZA(),
                        a.TgZ(37, "option", 31),
                        a._uU(38, "Pembebasan Tanah/ Lahan"),
                        a.qZA()()()(),
                        a.YNc(39, bi, 8, 12, "div", 32),
                        a.YNc(40, vi, 11, 3, "div", 32),
                        a.YNc(41, ji, 11, 4, "div", 32),
                        a.YNc(42, Ii, 8, 2, "div", 32),
                        a.YNc(43, Bi, 3, 0, "div", 33),
                        a.YNc(44, xi, 3, 0, "div", 33),
                        a.YNc(45, Ci, 3, 0, "div", 33),
                        a.YNc(46, yi, 3, 0, "div", 33),
                        a.YNc(47, Li, 5, 1, "div", 32),
                        a.YNc(48, wi, 3, 0, "div", 33),
                        a.YNc(49, Ai, 9, 4, "div", 32),
                        a.YNc(50, Ui, 8, 7, "div", 32),
                        a.YNc(51, Pi, 8, 7, "div", 32),
                        a.YNc(52, Mi, 8, 7, "div", 32),
                        a.YNc(53, Ji, 8, 7, "div", 32),
                        a.YNc(54, qi, 15, 1, "div", 32),
                        a.YNc(55, Gi, 9, 3, "div", 32),
                        a.YNc(56, Qi, 5, 1, "div", 32),
                        a.YNc(57, Oi, 5, 1, "div", 32),
                        a.YNc(58, Ei, 5, 1, "div", 32),
                        a.YNc(59, Hi, 5, 2, "div", 32),
                        a.YNc(60, Xi, 11, 4, "div", 32),
                        a.YNc(61, as, 6, 1, "div", 32),
                        a.YNc(62, ss, 33, 32, "div", 32),
                        a.YNc(63, os, 5, 1, "div", 32),
                        a.YNc(64, ls, 5, 1, "div", 32),
                        a.YNc(65, us, 7, 4, "div", 32),
                        a.YNc(66, cs, 8, 11, "div", 32),
                        a.qZA(),
                        a.TgZ(67, "div", 34)(68, "span", 35),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).activeModal.dismiss("Close click");
                        }),
                        a._uU(69, " Tutup "),
                        a.qZA(),
                        a.TgZ(70, "div", 36),
                        a.YNc(71, ms, 3, 3, "button", 37),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw(2);
                    let e;
                    a.Q6J("formGroup", t.rincianBelanjaForm),
                        a.xp6(6),
                        a.uIk("disabled", "view" == t.mode || null),
                        a.xp6(33),
                        a.Q6J("ngIf", "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl)),
                        a.xp6(1),
                        a.Q6J("ngIf", "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) && null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun)),
                        a.xp6(1),
                        a.Q6J("ngIf", "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) && null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun)),
                        a.xp6(1),
                        a.Q6J("ngIf", "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) && null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun)),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) && null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun) && 1 == t.akunFilter.is_bunga
                        ),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) && null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun) && 1 == t.akunFilter.is_subsidi
                        ),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) &&
                                null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun) &&
                                ((1 == t.akunFilter.is_bagi_hasil && "pemkab" == (null == t.akunModel ? null : t.akunModel.set_lokus)) || (1 == t.akunFilter.is_bagi_hasil && "pemdes" == (null == t.akunModel ? null : t.akunModel.set_lokus)))
                        ),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) &&
                                null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun) &&
                                (((1 == t.akunFilter.is_bankeu_umum || 1 == t.akunFilter.is_bankeu_khusus) && "pemrov" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    ((1 == t.akunFilter.is_bankeu_umum || 1 == t.akunFilter.is_bankeu_khusus) && "pemkab" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    ((1 == t.akunFilter.is_bankeu_umum || 1 == t.akunFilter.is_bankeu_khusus) && "pemdes" == (null == t.akunModel ? null : t.akunModel.set_lokus)))
                        ),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) &&
                                null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun) &&
                                ((1 == t.akunFilter.is_bunga && "pemkab" != (null == t.akunModel ? null : t.akunModel.set_lokus)) || 1 == t.akunFilter.is_subsidi)
                        ),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) &&
                                null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun) &&
                                (1 == t.akunFilter.is_hibah_brg || 1 == t.akunFilter.is_hibah_uang || 1 == t.akunFilter.is_sosial_brg || 1 == t.akunFilter.is_sosial_uang || 1 == t.akunFilter.is_bos)
                        ),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) &&
                                null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun) &&
                                (1 == t.akunFilter.is_hibah_brg || 1 == t.akunFilter.is_hibah_uang || 1 == t.akunFilter.is_sosial_brg || 1 == t.akunFilter.is_sosial_uang || 1 == t.akunFilter.is_bos)
                        ),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) &&
                                null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun) &&
                                ((1 == t.akunFilter.is_bunga && "pemkab" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_bagi_hasil && "pemkab" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_bagi_hasil && "pemdes" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    ((1 == t.akunFilter.is_bankeu_umum || 1 == t.akunFilter.is_bankeu_khusus) && "pemrov" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    ((1 == t.akunFilter.is_bankeu_umum || 1 == t.akunFilter.is_bankeu_khusus) && "pemkab" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    ((1 == t.akunFilter.is_bankeu_umum || 1 == t.akunFilter.is_bankeu_khusus) && "pemdes" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    ((1 == t.akunFilter.is_hibah_brg || 1 == t.akunFilter.is_hibah_uang) && "pemkab" == (null == t.akunModel ? null : t.akunModel.set_lokus)))
                        ),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) &&
                                null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun) &&
                                ((1 == t.akunFilter.is_bunga && "pemkab" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_bagi_hasil && "pemkab" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_bagi_hasil && "pemdes" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    ((1 == t.akunFilter.is_bankeu_umum || 1 == t.akunFilter.is_bankeu_khusus) && "pemkab" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    ((1 == t.akunFilter.is_bankeu_umum || 1 == t.akunFilter.is_bankeu_khusus) && "pemdes" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    ((1 == t.akunFilter.is_hibah_brg || 1 == t.akunFilter.is_hibah_uang) && "pemkab" == (null == t.akunModel ? null : t.akunModel.set_lokus)))
                        ),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) &&
                                null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun) &&
                                ((1 == t.akunFilter.is_bagi_hasil && "pemdes" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    ((1 == t.akunFilter.is_bankeu_umum || 1 == t.akunFilter.is_bankeu_khusus) && "pemdes" == (null == t.akunModel ? null : t.akunModel.set_lokus)))
                        ),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) &&
                                null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun) &&
                                ((1 == t.akunFilter.is_bagi_hasil && "pemdes" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    ((1 == t.akunFilter.is_bankeu_umum || 1 == t.akunFilter.is_bankeu_khusus) && "pemdes" == (null == t.akunModel ? null : t.akunModel.set_lokus)))
                        ),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) &&
                                null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun) &&
                                ((1 == t.akunFilter.is_barjas && "blud" != (null == t.akunModel ? null : t.akunModel.set_lokus) && "tkdd" != (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_hibah_brg && "lainnya" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_hibah_brg && "pemkab" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_sosial_brg && "lainnya" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_modal && "blud" != (null == t.akunModel ? null : t.akunModel.set_lokus) && "tkdd" != (null == t.akunModel ? null : t.akunModel.set_lokus)))
                        ),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) &&
                                null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun) &&
                                ((1 == t.akunFilter.is_barjas && "blud" != (null == t.akunModel ? null : t.akunModel.set_lokus) && "tkdd" != (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_modal && "blud" != (null == t.akunModel ? null : t.akunModel.set_lokus) && "tkdd" != (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_hibah_brg && "lainnya" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_hibah_brg && "pemkab" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_sosial_brg && "lainnya" == (null == t.akunModel ? null : t.akunModel.set_lokus)))
                        ),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) &&
                                null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun) &&
                                ((1 == t.akunFilter.is_barjas && "blud" != (null == t.akunModel ? null : t.akunModel.set_lokus) && "tkdd" != (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_modal && "blud" != (null == t.akunModel ? null : t.akunModel.set_lokus) && "tkdd" != (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_hibah_brg && "lainnya" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_hibah_brg && "pemkab" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_sosial_brg && "lainnya" == (null == t.akunModel ? null : t.akunModel.set_lokus)))
                        ),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) &&
                                null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun) &&
                                ((1 == t.akunFilter.is_barjas && "blud" != (null == t.akunModel ? null : t.akunModel.set_lokus) && "tkdd" != (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_modal && "blud" != (null == t.akunModel ? null : t.akunModel.set_lokus) && "tkdd" != (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_hibah_brg && "lainnya" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_hibah_brg && "pemkab" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_sosial_brg && "lainnya" == (null == t.akunModel ? null : t.akunModel.set_lokus)))
                        ),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) &&
                                null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun) &&
                                (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.contains("komponen"))
                        ),
                        a.xp6(1),
                        a.Q6J("ngIf", "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) && null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun)),
                        a.xp6(1),
                        a.Q6J("ngIf", "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) && null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun)),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) &&
                                null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun) &&
                                ((1 == t.akunFilter.is_barjas && "blud" != (null == t.akunModel ? null : t.akunModel.set_lokus) && "tkdd" != (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_hibah_brg && "lainnya" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_hibah_brg && "pemkab" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_hibah_uang && "lainnya" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_hibah_uang && "pemkab" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_sosial_brg && "lainnya" == (null == t.akunModel ? null : t.akunModel.set_lokus)) ||
                                    (1 == t.akunFilter.is_modal && "blud" != (null == t.akunModel ? null : t.akunModel.set_lokus) && "tkdd" != (null == t.akunModel ? null : t.akunModel.set_lokus)))
                        ),
                        a.xp6(1),
                        a.Q6J("ngIf", "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) && null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun)),
                        a.xp6(1),
                        a.Q6J("ngIf", "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) && null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun)),
                        a.xp6(1),
                        a.Q6J("ngIf", "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) && null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun)),
                        a.xp6(1),
                        a.Q6J("ngIf", "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) && null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun)),
                        a.xp6(1),
                        a.Q6J("ngIf", t.isBidangUrusan && "" != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.jenis_bl) && null != (null == t.rincianBelanjaForm ? null : t.rincianBelanjaForm.value.rekening_akun)),
                        a.xp6(4),
                        a.Q6J(
                            "ngbTooltip",
                            t.melebihi_pagu_dana && null != t.subBelanja && 1 == t.subBelanja.kunci_bl
                                ? "Tidak Bisa Menambah Rincian (Harga Satuan Melebihi Pagu Dana)"
                                : "add" == t.mode || ("edit" == t.mode && null != t.rincianAnggaranSkpd && null != t.paguIndikatif && t.rincianAnggaranSkpd < t.paguIndikatif)
                                ? null != t.jumlahRincianAnggaranSkpd && null != t.paguIndikatif && t.jumlahRincianAnggaranSkpd > t.paguIndikatif
                                    ? "Tidak Bisa Menambah Rincian (Total Rincian Per Skpd Melebihi Batasan Pagu Indikatif Skpd)"
                                    : null != t.subBelanja && 1 == t.subBelanja.kunci_bl && null != t.jumlahRincianAnggaran && null != t.paguSubKegiatan && t.jumlahRincianAnggaran > t.paguSubKegiatan
                                    ? "Tidak Bisa Menambah Rincian (Total Rincian Per Sub Kegiatan Melebihi Batasan Pagu per Sub Kegiatan)"
                                    : "Tambah Rincian Belanja"
                                : ((null != t.jumlahRincianAnggaranSkpd && null != t.paguIndikatif && t.jumlahRincianAnggaranSkpd > t.paguIndikatif) ||
                                      (null != t.subBelanja && 1 == t.subBelanja.kunci_bl && null != t.jumlahRincianAnggaran && null != t.paguSubKegiatan && t.jumlahRincianAnggaran > t.paguSubKegiatan)) &&
                                  null != t.rincianBelanja &&
                                  null != t.rincianBelanjaForm &&
                                  t.rincianBelanja.total_harga < (null == (e = t.rincianBelanjaForm.get("total_harga")) ? null : e.value)
                                ? "Total Belanja Yang Telah Dirubah Melebihi Total Belanja Sebelum Diedit"
                                : "Tambah Rincian Belanja"
                        ),
                        a.xp6(1),
                        a.Q6J("ngIf", "view" != t.mode);
                }
            }
            function vs(i, d) {
                if ((1 & i && (a.TgZ(0, "div", 8), a.YNc(1, bs, 72, 32, "form", 9), a.qZA()), 2 & i)) {
                    const t = a.oxw();
                    a.xp6(1), a.Q6J("ngIf", t.rincianBelanjaForm);
                }
            }
            let bt = (() => {
                class i {
                    constructor(t, e, n, s, o, l, _, r, u, k, m, v, g, C, h, f, y, B, F, c) {
                        (this.activeModal = t),
                            (this.modalService = e),
                            (this.toastr = n),
                            (this.konfigurasiService = s),
                            (this.akunService = o),
                            (this.komponenService = l),
                            (this.rincianBelanjaService = _),
                            (this.satuanService = r),
                            (this.keteranganBelanjaService = u),
                            (this.bidangUrusanService = k),
                            (this.subGiatService = m),
                            (this.daerahService = v),
                            (this.kecamatanService = g),
                            (this.kelurahanService = C),
                            (this.paketBelanjaService = h),
                            (this.change = f),
                            (this.penerimaBantuanService = y),
                            (this.renjaDanaBelanjaService = B),
                            (this.renjaSetupUnitService = F),
                            (this.userService = c),
                            (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))),
                            (this.pageTitle = "Tambah Rincian Belanja"),
                            (this.mode = "add"),
                            (this.paguSubKegiatan = 0),
                            (this.paguIndikatif = 0),
                            (this.rincianAnggaranSkpd = 0),
                            (this.rincianAnggaran = 0),
                            (this.dataPenerimaBantuan = []),
                            (this.jumlahRincianAnggaranSkpd = 0),
                            (this.jumlahRincianAnggaran = 0),
                            (this.dana_dipakai = void 0),
                            (this.melebihi_pagu_dana = !1),
                            (this.pagu_dana = "0"),
                            (this.satuanList = []),
                            (this.sumberDanaList = []),
                            (this.akunList = []),
                            (this.satuanFocus$ = new z.x()),
                            (this.satuanClick$ = new z.x()),
                            (this.satuanFormatter = (b) => b.nama_satuan),
                            (this.satuanFocus2$ = new z.x()),
                            (this.satuanClick2$ = new z.x()),
                            (this.satuanFormatter2 = (b) => b.nama_satuan),
                            (this.satuanFocus3$ = new z.x()),
                            (this.satuanClick3$ = new z.x()),
                            (this.satuanFormatter3 = (b) => b.nama_satuan),
                            (this.satuanFocus4$ = new z.x()),
                            (this.satuanClick4$ = new z.x()),
                            (this.satuanFormatter4 = (b) => b.nama_satuan),
                            (this.paketFocus$ = new z.x()),
                            (this.paketClick$ = new z.x()),
                            (this.paketFormatter = (b) => `${b.subs_bl_teks}`),
                            (this.akunFocus$ = new z.x()),
                            (this.akunClick$ = new z.x()),
                            (this.akunFormatter = (b) => `${b.kode_akun} ${b.nama_akun}`),
                            (this.komponenFocus$ = new z.x()),
                            (this.komponenClick$ = new z.x()),
                            (this.komponenFormatter = (b) => `${b.kode_standar_harga} ${b.nama_standar_harga}`),
                            (this.keteranganFocus$ = new z.x()),
                            (this.keteranganClick$ = new z.x()),
                            (this.keteranganSearchIsLoading = !1),
                            (this.keteranganFormatter = (b) => b.ket_bl_teks),
                            (this.bidangUrusanFocus$ = new z.x()),
                            (this.bidangUrusanClick$ = new z.x()),
                            (this.bidangUrusanSearchIsLoading = !1),
                            (this.bidangUrusanFormatter = (b) => b.nama_bidang_urusan),
                            (this.provFocus$ = new z.x()),
                            (this.provClick$ = new z.x()),
                            (this.provFormatter = (b) => b.nama_daerah),
                            (this.kabkotFocus$ = new z.x()),
                            (this.kabkotClick$ = new z.x()),
                            (this.kabkotFormatter = (b) => b.nama_daerah),
                            (this.camatFocus$ = new z.x()),
                            (this.camatClick$ = new z.x()),
                            (this.camatFormatter = (b) => b.camat_teks),
                            (this.lurahFocus$ = new z.x()),
                            (this.lurahClick$ = new z.x()),
                            (this.lurahFormatter = (b) => b.lurah_teks),
                            (this.idKomponenAkunList = []),
                            (this.paketBelanjaList = []),
                            (this.keteranganList = []),
                            (this.idAkunList = []),
                            (this.isBidangUrusan = !1),
                            (this.isSaving = !1),
                            (this.subGiatIsLoading = !1),
                            (this.sumberDanaIsLoading = !1),
                            (this.bidangUrusanIsLoading = !1),
                            (this.rincianBelanjaIsLoading = !1),
                            (this.akunIsLoading = !1),
                            (this.satuanIsLoading = !1),
                            (this.allDataIsLoaded = !1),
                            (this.keteranganIsLoading = !1),
                            (this.paketBelanjaIsLoading = !1),
                            (this.penerimaBantuanIsLoading = !1),
                            (this.komponenIsLoading = !1),
                            (this.komponenAkunIsLoading = !1),
                            (this.paketBelanjaListIsLoading = !1),
                            (this.searchPaketIsLoading = !1),
                            (this.paketSearchIsLoading = !1),
                            (this.akunSearchIsLoading = !1),
                            (this.komponenSearchIsLoading = !1),
                            (this.searchSatuanIsLoading = !1),
                            (this.searchSatuanIsLoading2 = !1),
                            (this.searchSatuanIsLoading3 = !1),
                            (this.searchSatuanIsLoading4 = !1),
                            (this.searchKabkotIsLoading = !1),
                            (this.searchProvinsiIsLoading = !1),
                            (this.searchCamatIsLoading = !1),
                            (this.searchLurahIsLoading = !1),
                            (this.penerimaBantuanSearchIsLoading = !1),
                            (this.setupUnitIsLoading = !1),
                            (this.INITIAL_AKUN_FILTER = {
                                is_gaji_asn: 0,
                                is_barjas: 0,
                                is_bunga: 0,
                                is_subsidi: 0,
                                is_bagi_hasil: 0,
                                is_bankeu_umum: 0,
                                is_bankeu_khusus: 0,
                                is_btt: 0,
                                is_hibah_brg: 0,
                                is_hibah_uang: 0,
                                is_sosial_brg: 0,
                                is_sosial_uang: 0,
                                is_bos: 0,
                                is_modal_tanah: 0,
                                is_modal: 0,
                                set_lokus: "",
                            }),
                            (this.akunFilter = Object.assign({}, this.INITIAL_AKUN_FILTER)),
                            (this.akunSearch = (b) => {
                                const I = b.pipe((0, ha.b)(500)),
                                    x = this.akunClick$.pipe(
                                        (0, ga.h)(() => {
                                            var T;
                                            return !(null === (T = this.akunInstance) || void 0 === T ? void 0 : T.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(I, this.akunFocus$, x).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((T) => {
                                        var P, Z, J;
                                        const w = new FormData();
                                        return (
                                            w.append("id_daerah", String(null !== (Z = null === (P = this.konfigurasiService) || void 0 === P ? void 0 : P.getIdDaerah()) && void 0 !== Z ? Z : 0)),
                                            w.append("tahun", String(null === (J = this.konfigurasiService) || void 0 === J ? void 0 : J.getTahun())),
                                            w.append("search[value]", T),
                                            w.append("length", "20"),
                                            w.append("is_gaji_asn", String(this.akunFilter.is_gaji_asn || 0)),
                                            w.append("is_barjas", String(this.akunFilter.is_barjas || 0)),
                                            w.append("is_bunga", String(this.akunFilter.is_bunga || 0)),
                                            w.append("is_subsidi", String(this.akunFilter.is_subsidi || 0)),
                                            w.append("is_bagi_hasil", String(this.akunFilter.is_bagi_hasil || 0)),
                                            w.append("is_bankeu_umum", String(this.akunFilter.is_bankeu_umum || 0)),
                                            w.append("is_bankeu_khusus", String(this.akunFilter.is_bankeu_khusus || 0)),
                                            w.append("is_btt", String(this.akunFilter.is_btt || 0)),
                                            w.append("is_hibah_brg", String(this.akunFilter.is_hibah_brg || 0)),
                                            w.append("is_hibah_uang", String(this.akunFilter.is_hibah_uang || 0)),
                                            w.append("is_sosial_brg", String(this.akunFilter.is_sosial_brg || 0)),
                                            w.append("is_sosial_uang", String(this.akunFilter.is_sosial_uang || 0)),
                                            w.append("is_bos", String(this.akunFilter.is_bos || 0)),
                                            w.append("is_modal_tanah", String(this.akunFilter.is_modal_tanah || 0)),
                                            w.append("set_lokus", String(this.akunFilter.set_lokus || "")),
                                            (this.akunSearchIsLoading = !0),
                                            this.akunService.findAkunForKomponen(w).pipe(
                                                (0, ka.U)((R) => (null == R ? void 0 : R.data)),
                                                (0, fa.b)(() => (this.akunSearchIsLoading = !1)),
                                                (0, Sa.K)((R) => ((this.akunSearchIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.searchSatuan = (b) => {
                                const I = b.pipe((0, ha.b)(500)),
                                    x = this.satuanClick$.pipe(
                                        (0, ga.h)(() => {
                                            var T;
                                            return !(null === (T = this.satuanInstance) || void 0 === T ? void 0 : T.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(I, this.satuanFocus$, x).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((T) => {
                                        const P = new FormData();
                                        return (
                                            P.append("search[value]", T),
                                            (this.searchSatuanIsLoading = !0),
                                            this.satuanService.list(P).pipe(
                                                (0, ka.U)((Z) => (null == Z ? void 0 : Z.data.data)),
                                                (0, fa.b)(() => (this.searchSatuanIsLoading = !1)),
                                                (0, Sa.K)((Z) => ((this.searchSatuanIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.searchSatuan2 = (b) => {
                                const I = b.pipe((0, ha.b)(500)),
                                    x = this.satuanClick2$.pipe(
                                        (0, ga.h)(() => {
                                            var T;
                                            return !(null === (T = this.satuanInstance2) || void 0 === T ? void 0 : T.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(I, this.satuanFocus2$, x).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((T) => {
                                        const P = new FormData();
                                        return (
                                            P.append("search[value]", T),
                                            (this.searchSatuanIsLoading2 = !0),
                                            this.satuanService.list(P).pipe(
                                                (0, ka.U)((Z) => (null == Z ? void 0 : Z.data.data)),
                                                (0, fa.b)(() => (this.searchSatuanIsLoading2 = !1)),
                                                (0, Sa.K)((Z) => ((this.searchSatuanIsLoading2 = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.searchSatuan3 = (b) => {
                                const I = b.pipe((0, ha.b)(500)),
                                    x = this.satuanClick3$.pipe(
                                        (0, ga.h)(() => {
                                            var T;
                                            return !(null === (T = this.satuanInstance3) || void 0 === T ? void 0 : T.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(I, this.satuanFocus3$, x).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((T) => {
                                        const P = new FormData();
                                        return (
                                            P.append("search[value]", T),
                                            (this.searchSatuanIsLoading3 = !0),
                                            this.satuanService.list(P).pipe(
                                                (0, ka.U)((Z) => (null == Z ? void 0 : Z.data.data)),
                                                (0, fa.b)(() => (this.searchSatuanIsLoading3 = !1)),
                                                (0, Sa.K)((Z) => ((this.searchSatuanIsLoading3 = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.searchSatuan4 = (b) => {
                                const I = b.pipe((0, ha.b)(500)),
                                    x = this.satuanClick4$.pipe(
                                        (0, ga.h)(() => {
                                            var T;
                                            return !(null === (T = this.satuanInstance4) || void 0 === T ? void 0 : T.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(I, this.satuanFocus4$, x).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((T) => {
                                        const P = new FormData();
                                        return (
                                            P.append("search[value]", T),
                                            (this.searchSatuanIsLoading4 = !0),
                                            this.satuanService.list(P).pipe(
                                                (0, ka.U)((Z) => (null == Z ? void 0 : Z.data.data)),
                                                (0, fa.b)(() => (this.searchSatuanIsLoading4 = !1)),
                                                (0, Sa.K)((Z) => ((this.searchSatuanIsLoading4 = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.searchProv = (b) => {
                                const I = b.pipe((0, ha.b)(500)),
                                    x = this.provClick$.pipe(
                                        (0, ga.h)(() => {
                                            var T;
                                            return !(null === (T = this.provInstance) || void 0 === T ? void 0 : T.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(I, this.provFocus$, x).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((T) => {
                                        var P, Z, J, w, R, A, N;
                                        const U = new FormData();
                                        return (
                                            U.append("search[value]", T),
                                            U.append("tipe", "prov"),
                                            null == (null === (P = this.rincianBelanjaForm) || void 0 === P ? void 0 : P.value.id_prov) &&
                                                ((null === (Z = this.rincianBelanjaForm) || void 0 === Z ? void 0 : Z.contains("id_kabkot")) &&
                                                    (null === (J = this.rincianBelanjaForm) || void 0 === J || J.controls.id_kabkot.setValue(void 0)),
                                                (null === (w = this.rincianBelanjaForm) || void 0 === w ? void 0 : w.contains("id_camat")) && (null === (R = this.rincianBelanjaForm) || void 0 === R || R.controls.id_camat.setValue(void 0)),
                                                (null === (A = this.rincianBelanjaForm) || void 0 === A ? void 0 : A.contains("id_lurah")) && (null === (N = this.rincianBelanjaForm) || void 0 === N || N.controls.id_lurah.setValue(void 0))),
                                            (this.searchProvinsiIsLoading = !0),
                                            this.daerahService.findlistProv(U).pipe(
                                                (0, ka.U)((W) => (null == W ? void 0 : W.data)),
                                                (0, fa.b)(() => (this.searchProvinsiIsLoading = !1)),
                                                (0, Sa.K)((W) => ((this.searchProvinsiIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.searchKabkot = (b) => {
                                const I = b.pipe((0, ha.b)(500)),
                                    x = this.kabkotClick$.pipe(
                                        (0, ga.h)(() => {
                                            var T;
                                            return !(null === (T = this.kabkotInstance) || void 0 === T ? void 0 : T.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(I, this.kabkotFocus$, x).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((T) => {
                                        var P, Z, J, w, R, A;
                                        null == (null === (P = this.rincianBelanjaForm) || void 0 === P ? void 0 : P.value.id_kabkot) &&
                                            ((null === (Z = this.rincianBelanjaForm) || void 0 === Z ? void 0 : Z.contains("id_camat")) && (null === (J = this.rincianBelanjaForm) || void 0 === J || J.controls.id_camat.setValue(void 0)),
                                            (null === (w = this.rincianBelanjaForm) || void 0 === w ? void 0 : w.contains("id_lurah")) && (null === (R = this.rincianBelanjaForm) || void 0 === R || R.controls.id_lurah.setValue(void 0)));
                                        const N = new FormData();
                                        return (
                                            N.append("id_daerah", String(null === (A = this.provModel) || void 0 === A ? void 0 : A.id_daerah)),
                                            N.append("search[value]", T),
                                            (this.searchKabkotIsLoading = !0),
                                            this.daerahService.findKabkota(N).pipe(
                                                (0, ka.U)((U) => (null == U ? void 0 : U.data)),
                                                (0, fa.b)(() => (this.searchKabkotIsLoading = !1)),
                                                (0, Sa.K)((U) => ((this.searchKabkotIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.searchCamat = (b) => {
                                const I = b.pipe((0, ha.b)(500)),
                                    x = this.camatClick$.pipe(
                                        (0, ga.h)(() => {
                                            var T;
                                            return !(null === (T = this.camatInstance) || void 0 === T ? void 0 : T.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(I, this.camatFocus$, x).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((T) => {
                                        var P, Z, J, w;
                                        null == (null === (P = this.rincianBelanjaForm) || void 0 === P ? void 0 : P.value.id_camat) &&
                                            (null === (Z = this.rincianBelanjaForm) || void 0 === Z ? void 0 : Z.contains("id_lurah")) &&
                                            (null === (J = this.rincianBelanjaForm) || void 0 === J || J.controls.id_lurah.setValue(void 0));
                                        const R = new FormData();
                                        return (
                                            R.append("id_kabkota", String(null === (w = this.kabkotModel) || void 0 === w ? void 0 : w.id_daerah)),
                                            R.append("tahun", String(this.konfigurasiService.getTahun())),
                                            R.append("search[value]", T),
                                            (this.searchCamatIsLoading = !0),
                                            this.kecamatanService.search(R).pipe(
                                                (0, ka.U)((A) => (null == A ? void 0 : A.data)),
                                                (0, fa.b)(() => (this.searchCamatIsLoading = !1)),
                                                (0, Sa.K)((A) => ((this.searchCamatIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.searchLurah = (b) => {
                                const I = b.pipe((0, ha.b)(500)),
                                    x = this.lurahClick$.pipe(
                                        (0, ga.h)(() => {
                                            var T;
                                            return !(null === (T = this.lurahInstance) || void 0 === T ? void 0 : T.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(I, this.lurahFocus$, x).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((T) => {
                                        var P, Z;
                                        const J = new FormData();
                                        return (
                                            J.append("id_kabkota", String(null === (P = this.kabkotModel) || void 0 === P ? void 0 : P.id_daerah)),
                                            J.append("id_camat", String(null === (Z = this.camatModel) || void 0 === Z ? void 0 : Z.id_camat)),
                                            J.append("tahun", String(this.konfigurasiService.getTahun())),
                                            J.append("search[value]", T),
                                            (this.searchLurahIsLoading = !0),
                                            this.kelurahanService.find(J).pipe(
                                                (0, ka.U)((w) => (null == w ? void 0 : w.data)),
                                                (0, fa.b)(() => (this.searchLurahIsLoading = !1)),
                                                (0, Sa.K)((w) => ((this.searchLurahIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.komponenSearch = (b) => {
                                const I = b.pipe((0, ha.b)(500)),
                                    x = this.komponenClick$.pipe(
                                        (0, ga.h)(() => {
                                            var T;
                                            return !(null === (T = this.komponenInstance) || void 0 === T ? void 0 : T.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(I, this.komponenFocus$, x).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((T) => {
                                        var P, Z, J, w, R;
                                        const A = new FormData();
                                        return (
                                            A.append("id_daerah", String(null !== (Z = null === (P = this.konfigurasiService) || void 0 === P ? void 0 : P.getIdDaerah()) && void 0 !== Z ? Z : 0)),
                                            A.append("tahun", String(null === (J = this.konfigurasiService) || void 0 === J ? void 0 : J.getTahun())),
                                            A.append("search[value]", T),
                                            A.append("length", "20"),
                                            A.append("id_akun", String(null !== (R = null === (w = this.akunModel) || void 0 === w ? void 0 : w.id_akun) && void 0 !== R ? R : 0)),
                                            (this.komponenSearchIsLoading = !0),
                                            this.komponenService.findKomponenForAkun(A).pipe(
                                                (0, ka.U)((N) => (null == N ? void 0 : N.data)),
                                                (0, fa.b)(() => (this.komponenSearchIsLoading = !1)),
                                                (0, Sa.K)((N) => ((this.komponenSearchIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.keteranganSearch = (b) => {
                                const I = b.pipe((0, ha.b)(500)),
                                    x = this.keteranganClick$.pipe(
                                        (0, ga.h)(() => {
                                            var T;
                                            return !(null === (T = this.keteranganInstance) || void 0 === T ? void 0 : T.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(I, this.keteranganFocus$, x).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((T) => {
                                        var P, Z, J;
                                        const w = new FormData();
                                        return (
                                            w.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                            w.append("id_daerah", String((null === (P = this.konfigurasiService) || void 0 === P ? void 0 : P.getIdDaerah()) || 0)),
                                            w.append("id_unit", String(null === (Z = this.subBelanja) || void 0 === Z ? void 0 : Z.id_unit)),
                                            w.append("id_sub_giat", String(null === (J = this.subBelanja) || void 0 === J ? void 0 : J.id_sub_giat)),
                                            w.append("kondisi_rincian", String("true")),
                                            w.append("search[value]", T),
                                            (this.keteranganSearchIsLoading = !0),
                                            this.keteranganBelanjaService.find(w).pipe(
                                                (0, ka.U)((R) => (null == R ? void 0 : R.data)),
                                                (0, fa.b)(() => (this.keteranganSearchIsLoading = !1)),
                                                (0, Sa.K)((R) => ((this.keteranganSearchIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.bidangUrusanSearch = (b) => {
                                const I = b.pipe((0, ha.b)(500)),
                                    x = this.bidangUrusanClick$.pipe(
                                        (0, ga.h)(() => {
                                            var T;
                                            return !(null === (T = this.bidangUrusanInstance) || void 0 === T ? void 0 : T.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(I, this.bidangUrusanFocus$, x).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((T) => {
                                        var P, Z, J;
                                        const w = new FormData();
                                        return (
                                            w.append("id_skpd", String((null === (P = this.subBelanja) || void 0 === P ? void 0 : P.id_skpd) || 0)),
                                            w.append("tahun", String((null === (Z = this.subBelanja) || void 0 === Z ? void 0 : Z.tahun) || 0)),
                                            w.append("id_daerah", String((null === (J = this.subBelanja) || void 0 === J ? void 0 : J.id_daerah) || 0)),
                                            w.append("search[value]", T),
                                            (this.bidangUrusanSearchIsLoading = !0),
                                            this.bidangUrusanService.findByIdSkpd(w).pipe(
                                                (0, ka.U)((R) => (null == R ? void 0 : R.data)),
                                                (0, fa.b)(() => (this.bidangUrusanSearchIsLoading = !1)),
                                                (0, Sa.K)((R) => ((this.bidangUrusanSearchIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            });
                    }
                    ngOnInit() {
                        this.buildForm(), this.loadKeterangan();
                    }
                    ngOnDestroy() {
                        var t, e, n;
                        null === (t = this.rincianBelanjaSub) || void 0 === t || t.unsubscribe(), null === (e = this.sumberDanaSub) || void 0 === e || e.unsubscribe(), null === (n = this.setupUnitSub) || void 0 === n || n.unsubscribe();
                    }
                    onSubmit() {
                        var t,
                            e,
                            n,
                            s,
                            o,
                            l,
                            _,
                            r,
                            u,
                            k,
                            m,
                            v,
                            g,
                            C,
                            h,
                            f,
                            y,
                            B,
                            F,
                            c,
                            b,
                            I,
                            x,
                            q,
                            T,
                            P,
                            Z,
                            J,
                            w,
                            R,
                            A,
                            N,
                            U,
                            W,
                            Y,
                            Q,
                            $,
                            ea,
                            ta,
                            sa,
                            la,
                            E,
                            ua,
                            ra,
                            oa,
                            da,
                            pa,
                            na,
                            V,
                            H,
                            ia,
                            Ta,
                            M,
                            Ia,
                            Ba,
                            Da,
                            Fa,
                            Ua,
                            Za,
                            Ca,
                            ya,
                            _a,
                            G,
                            qa,
                            ca,
                            Va,
                            Ct,
                            yt,
                            Lt,
                            wt,
                            Dt,
                            Rt,
                            At,
                            Ft,
                            Ut,
                            Zt,
                            Pt,
                            Nt,
                            Mt,
                            Kt,
                            Jt,
                            qt,
                            Yt,
                            Wt,
                            Gt,
                            Qt,
                            Ot,
                            Et,
                            Ht,
                            $t,
                            zt,
                            Vt,
                            Xt,
                            ae,
                            te,
                            ee,
                            ne,
                            ie,
                            se,
                            oe,
                            le,
                            re,
                            de,
                            ue;
                        if (null === (t = this.rincianBelanjaForm) || void 0 === t ? void 0 : t.invalid) return void alert("Mohon semua kolom form diisi");
                        (this.isSaving = !0), null === (e = this.rincianBelanjaForm) || void 0 === e || e.disable();
                        const K = new FormData();
                        if (
                            (K.append("id_subs_sub_bl", String((null === (n = this.rincianBelanjaForm) || void 0 === n ? void 0 : n.value.uraian_is_paket) || 0)),
                            K.append("id_ket_sub_bl", String((null === (s = this.rincianBelanjaForm) || void 0 === s ? void 0 : s.value.keterangan) || 0)),
                            K.append("id_akun", String((null === (o = this.akunModel) || void 0 === o ? void 0 : o.id_akun) || 0)),
                            K.append("id_standar_harga", String((null === (l = this.komponenModel) || void 0 === l ? void 0 : l.id_standar_harga) || 0)),
                            K.append("id_standar_nfs", String((null === (_ = this.rincianBelanjaForm) || void 0 === _ ? void 0 : _.value.id_standar_nfs) || 0)),
                            K.append("pajak", String((null === (r = this.rincianBelanjaForm) || void 0 === r ? void 0 : r.value.pajak) ? 11 : 0)),
                            K.append("volume", String((null === (u = this.rincianBelanjaForm) || void 0 === u ? void 0 : u.value.volume) || 0)),
                            K.append("harga_satuan", String((null === (k = this.rincianBelanjaForm) || void 0 === k ? void 0 : k.value.harga_satuan) || 0)),
                            K.append("koefisien", (null === (m = this.rincianBelanjaForm) || void 0 === m ? void 0 : m.value.koefisien) || ""),
                            K.append("total_harga", String((null === (v = this.rincianBelanjaForm) || void 0 === v ? void 0 : v.value.total_harga) || 0)),
                            K.append("jenis_bl", String((null === (g = this.rincianBelanjaForm) || void 0 === g ? void 0 : g.value.jenis_bl) || 0)),
                            K.append("id_dana", String((null === (C = this.rincianBelanjaForm) || void 0 === C ? void 0 : C.value.sumberDana) || 0)),
                            K.append("vol_1", String((null === (h = this.rincianBelanjaForm) || void 0 === h ? void 0 : h.value.vol_1) || 0)),
                            K.append(
                                "sat_1",
                                String((null === (B = null === (y = null === (f = this.rincianBelanjaForm) || void 0 === f ? void 0 : f.value) || void 0 === y ? void 0 : y.sat_1) || void 0 === B ? void 0 : B.nama_satuan) || "")
                            ),
                            K.append("vol_2", String((null === (F = this.rincianBelanjaForm) || void 0 === F ? void 0 : F.value.vol_2) || 0)),
                            K.append(
                                "sat_2",
                                String((null === (I = null === (b = null === (c = this.rincianBelanjaForm) || void 0 === c ? void 0 : c.value) || void 0 === b ? void 0 : b.sat_2) || void 0 === I ? void 0 : I.nama_satuan) || "")
                            ),
                            K.append("vol_3", String((null === (x = this.rincianBelanjaForm) || void 0 === x ? void 0 : x.value.vol_3) || 0)),
                            K.append(
                                "sat_3",
                                String((null === (P = null === (T = null === (q = this.rincianBelanjaForm) || void 0 === q ? void 0 : q.value) || void 0 === T ? void 0 : T.sat_3) || void 0 === P ? void 0 : P.nama_satuan) || "")
                            ),
                            K.append("vol_4", String((null === (Z = this.rincianBelanjaForm) || void 0 === Z ? void 0 : Z.value.vol_4) || 0)),
                            K.append(
                                "sat_4",
                                String((null === (R = null === (w = null === (J = this.rincianBelanjaForm) || void 0 === J ? void 0 : J.value) || void 0 === w ? void 0 : w.sat_4) || void 0 === R ? void 0 : R.nama_satuan) || "")
                            ),
                            K.append("rkpd_murni", "0"),
                            K.append("rkpd_pak", "0"),
                            K.append("kode_akun", (null === (A = this.akunModel) || void 0 === A ? void 0 : A.kode_akun) || ""),
                            K.append("nama_akun", (null === (N = this.akunModel) || void 0 === N ? void 0 : N.nama_akun) || ""),
                            K.append("nama_standar_harga", (null === (U = this.komponenModel) || void 0 === U ? void 0 : U.nama_standar_harga) || ""),
                            K.append("kode_standar_harga", String((null === (W = this.komponenModel) || void 0 === W ? void 0 : W.kode_standar_harga) || "")),
                            1 == this.akunFilter.is_hibah_brg ||
                                1 == this.akunFilter.is_hibah_uang ||
                                1 == this.akunFilter.is_sosial_brg ||
                                1 == this.akunFilter.is_sosial_uang ||
                                1 == this.akunFilter.is_bos ||
                                ((null === (Y = this.rincianBelanjaForm) || void 0 === Y ? void 0 : Y.controls.id_prov) &&
                                    1 != this.akunFilter.is_hibah_brg &&
                                    1 != this.akunFilter.is_hibah_uang &&
                                    1 != this.akunFilter.is_sosial_brg &&
                                    1 != this.akunFilter.is_sosial_uang &&
                                    1 != this.akunFilter.is_bos))
                        ) {
                            let Oa =
                                null !== ($ = null === (Q = this.lurahModel) || void 0 === Q ? void 0 : Q.lurah_teks) && void 0 !== $
                                    ? $
                                    : null !== (ta = null === (ea = this.camatModel) || void 0 === ea ? void 0 : ea.camat_teks) && void 0 !== ta
                                    ? ta
                                    : null !== (la = null === (sa = this.kabkotModel) || void 0 === sa ? void 0 : sa.nama_daerah) && void 0 !== la
                                    ? la
                                    : null !== (ua = null === (E = this.provModel) || void 0 === E ? void 0 : E.nama_daerah) && void 0 !== ua
                                    ? ua
                                    : "";
                            K.append("is_lokus_akun", "1"), K.append("lokus_akun_teks", (null === (ra = this.penerimaBantuanUser) || void 0 === ra ? void 0 : ra.nama_teks) || Oa || "");
                        }
                        K.append("id_daerah_log", null === (oa = this.userSession) || void 0 === oa ? void 0 : oa.daerah_id),
                            K.append("id_user_log", null === (da = this.userSession) || void 0 === da ? void 0 : da.user_id),
                            "add" === this.mode
                                ? (K.append("created_user", null === (pa = this.userSession) || void 0 === pa ? void 0 : pa.user_id),
                                  K.append("id_daerah", String((null === (na = this.subBelanja) || void 0 === na ? void 0 : na.id_daerah) || 0)),
                                  K.append("tahun", String((null === (V = this.subBelanja) || void 0 === V ? void 0 : V.tahun) || 0)),
                                  K.append("id_unit", String((null === (H = this.subBelanja) || void 0 === H ? void 0 : H.id_unit) || 0)),
                                  K.append("id_bl", String((null === (ia = this.subBelanja) || void 0 === ia ? void 0 : ia.id_bl) || 0)),
                                  K.append("id_sub_bl", String((null === (Ta = this.subBelanja) || void 0 === Ta ? void 0 : Ta.id_sub_bl) || 0)),
                                  K.append("id_jadwal_murni", String((null === (M = this.subBelanja) || void 0 === M ? void 0 : M.id_jadwal_murni) || 0)),
                                  K.append("id_skpd", String((null === (Ia = this.subBelanja) || void 0 === Ia ? void 0 : Ia.id_skpd) || 0)),
                                  K.append("id_sub_skpd", String((null === (Ba = this.subBelanja) || void 0 === Ba ? void 0 : Ba.id_sub_skpd) || 0)),
                                  K.append("id_program", String((null === (Da = this.subBelanja) || void 0 === Da ? void 0 : Da.id_program) || 0)),
                                  K.append("id_giat", String((null === (Fa = this.subBelanja) || void 0 === Fa ? void 0 : Fa.id_giat) || 0)),
                                  K.append("id_sub_giat", String((null === (Ua = this.subBelanja) || void 0 === Ua ? void 0 : Ua.id_sub_giat) || 0)),
                                  K.append("rkpd_murni", String((null === (Za = this.subBelanja) || void 0 === Za ? void 0 : Za.rkpd_murni) || 0)),
                                  K.append("rkpd_pak", String((null === (Ca = this.subBelanja) || void 0 === Ca ? void 0 : Ca.rkpd_pak) || 0)),
                                  K.append("nama_daerah", (null === (ya = this.subBelanja) || void 0 === ya ? void 0 : ya.nama_daerah) || ""),
                                  K.append("nama_unit", (null === (_a = this.subBelanja) || void 0 === _a ? void 0 : _a.nama_unit) || ""),
                                  K.append("nama_skpd", (null === (G = this.subBelanja) || void 0 === G ? void 0 : G.nama_skpd) || ""),
                                  K.append("nama_sub_skpd", (null === (qa = this.subBelanja) || void 0 === qa ? void 0 : qa.nama_sub_skpd) || ""),
                                  K.append("nama_program", (null === (ca = this.subBelanja) || void 0 === ca ? void 0 : ca.nama_program) || ""),
                                  K.append("nama_giat", (null === (Va = this.subBelanja) || void 0 === Va ? void 0 : Va.nama_giat) || ""),
                                  K.append("nama_sub_giat", (null === (Ct = this.subBelanja) || void 0 === Ct ? void 0 : Ct.nama_sub_giat) || ""),
                                  K.append("nama_standar_nfs", ""),
                                  K.append("nama_jadwal_murni", ""),
                                  K.append("nama_blt", ""),
                                  K.append("nama_usulan", ""),
                                  K.append("nama_jenis_usul", ""),
                                  (this.rincianBelanjaSub = this.rincianBelanjaService.add(K).subscribe({
                                      next: (Oa) => {
                                          var Ga;
                                          if (
                                              ((this.isSaving = !1),
                                              this.activeModal.close(Oa),
                                              this.toastr.success("Data berhasil disimpan", "Sukses"),
                                              1 == this.akunFilter.is_hibah_brg || 1 == this.akunFilter.is_hibah_uang || 1 == this.akunFilter.is_sosial_brg || 1 == this.akunFilter.is_sosial_uang || 1 == this.akunFilter.is_bos)
                                          ) {
                                              const Ea = new FormData();
                                              Ea.append("id_daerah", String(this.konfigurasiService.getIdDaerah())),
                                                  Ea.append("tahun", String(this.konfigurasiService.getTahun())),
                                                  Ea.append("id_unik", String(Oa.data)),
                                                  (this.penerimaBantuanIsLoading = !0),
                                                  this.rincianBelanjaService.viewByIdUnik(Ea).subscribe({
                                                      next: (Xa) => {
                                                          (this.penerimaBantuanIsLoading = !1), Xa.data[0] && this.onSubmitPenerimaBantuan(Xa.data[0].id_rinci_sub_bl);
                                                      },
                                                      error: (Xa) => {
                                                          this.activeModal.close(), (this.penerimaBantuanIsLoading = !1);
                                                      },
                                                  });
                                          }
                                          if (
                                              (null === (Ga = this.rincianBelanjaForm) || void 0 === Ga ? void 0 : Ga.controls.id_prov) &&
                                              1 != this.akunFilter.is_hibah_brg &&
                                              1 != this.akunFilter.is_hibah_uang &&
                                              1 != this.akunFilter.is_sosial_brg &&
                                              1 != this.akunFilter.is_sosial_uang &&
                                              1 != this.akunFilter.is_bos
                                          ) {
                                              const Ea = new FormData();
                                              Ea.append("id_daerah", String(this.konfigurasiService.getIdDaerah())),
                                                  Ea.append("tahun", String(this.konfigurasiService.getTahun())),
                                                  Ea.append("id_unik", String(Oa.data)),
                                                  (this.penerimaBantuanIsLoading = !0),
                                                  this.rincianBelanjaService.viewByIdUnik(Ea).subscribe({
                                                      next: (Xa) => {
                                                          (this.penerimaBantuanIsLoading = !1), Xa.data[0] && this.onSubmitPenerimaBantuan(Xa.data[0].id_rinci_sub_bl);
                                                      },
                                                      error: (Xa) => {
                                                          this.activeModal.close(), (this.penerimaBantuanIsLoading = !1);
                                                      },
                                                  });
                                          }
                                      },
                                      error: (Oa) => {
                                          var Ga;
                                          (this.isSaving = !1), null === (Ga = this.rincianBelanjaForm) || void 0 === Ga || Ga.enable(), this.activeModal.close(), this.toastr.error("Data gagal disimpan", "Error");
                                      },
                                  })))
                                : (K.append("updated_user", null === (yt = this.userSession) || void 0 === yt ? void 0 : yt.user_id),
                                  ((null === (Lt = this.rincianBelanjaForm) || void 0 === Lt ? void 0 : Lt.controls.id_prov) ||
                                      1 == this.akunFilter.is_hibah_brg ||
                                      1 == this.akunFilter.is_hibah_uang ||
                                      1 == this.akunFilter.is_sosial_brg ||
                                      1 == this.akunFilter.is_sosial_uang ||
                                      1 == this.akunFilter.is_bos) &&
                                      this.onSubmitPenerimaBantuan(null === (wt = this.rincianBelanja) || void 0 === wt ? void 0 : wt.id_rinci_sub_bl),
                                  K.append("id_rinci_sub_bl", String((null === (Dt = this.rincianBelanja) || void 0 === Dt ? void 0 : Dt.id_rinci_sub_bl) || 0)),
                                  K.append("id_unik", String((null === (Rt = this.rincianBelanja) || void 0 === Rt ? void 0 : Rt.id_unik) || 0)),
                                  K.append("tahun", String((null === (At = this.rincianBelanja) || void 0 === At ? void 0 : At.tahun) || 0)),
                                  K.append("id_daerah", String((null === (Ft = this.rincianBelanja) || void 0 === Ft ? void 0 : Ft.id_daerah) || 0)),
                                  K.append("id_unit", String((null === (Ut = this.rincianBelanja) || void 0 === Ut ? void 0 : Ut.id_unit) || 0)),
                                  K.append("id_bl", String((null === (Zt = this.rincianBelanja) || void 0 === Zt ? void 0 : Zt.id_bl) || 0)),
                                  K.append("id_sub_bl", String((null === (Pt = this.rincianBelanja) || void 0 === Pt ? void 0 : Pt.id_sub_bl) || 0)),
                                  K.append("id_standar_nfs", String((null === (Nt = this.rincianBelanja) || void 0 === Nt ? void 0 : Nt.id_standar_nfs) || 0)),
                                  K.append("id_jadwal_murni", String((null === (Mt = this.rincianBelanja) || void 0 === Mt ? void 0 : Mt.id_jadwal_murni) || 0)),
                                  K.append("is_lokus_akun", String((null === (Kt = this.rincianBelanja) || void 0 === Kt ? void 0 : Kt.is_lokus_akun) || 0)),
                                  K.append("lokus_akun_teks", String((null === (Jt = this.rincianBelanja) || void 0 === Jt ? void 0 : Jt.lokus_akun_teks) || "")),
                                  K.append("id_blt", String((null === (qt = this.rincianBelanja) || void 0 === qt ? void 0 : qt.id_blt) || 0)),
                                  K.append("id_usulan", String((null === (Yt = this.rincianBelanja) || void 0 === Yt ? void 0 : Yt.id_usulan) || 0)),
                                  K.append("id_jenis_usul", String((null === (Wt = this.rincianBelanja) || void 0 === Wt ? void 0 : Wt.id_jenis_usul) || 0)),
                                  K.append("id_skpd", String((null === (Gt = this.rincianBelanja) || void 0 === Gt ? void 0 : Gt.id_skpd) || 0)),
                                  K.append("id_sub_skpd", String((null === (Qt = this.rincianBelanja) || void 0 === Qt ? void 0 : Qt.id_sub_skpd) || 0)),
                                  K.append("id_program", String((null === (Ot = this.rincianBelanja) || void 0 === Ot ? void 0 : Ot.id_program) || 0)),
                                  K.append("id_giat", String((null === (Et = this.rincianBelanja) || void 0 === Et ? void 0 : Et.id_giat) || 0)),
                                  K.append("id_sub_giat", String((null === (Ht = this.rincianBelanja) || void 0 === Ht ? void 0 : Ht.id_sub_giat) || 0)),
                                  K.append("rkpd_murni", String((null === ($t = this.rincianBelanja) || void 0 === $t ? void 0 : $t.rkpd_murni) || 0)),
                                  K.append("rkpd_pak", String((null === (zt = this.rincianBelanja) || void 0 === zt ? void 0 : zt.rkpd_pak) || 0)),
                                  K.append("set_sisa_kontrak", String((null === (Vt = this.rincianBelanja) || void 0 === Vt ? void 0 : Vt.set_sisa_kontrak) || 0)),
                                  K.append("nama_daerah", (null === (Xt = this.rincianBelanja) || void 0 === Xt ? void 0 : Xt.nama_daerah) || ""),
                                  K.append("nama_unit", (null === (ae = this.rincianBelanja) || void 0 === ae ? void 0 : ae.nama_unit) || ""),
                                  K.append("nama_standar_nfs", (null === (te = this.rincianBelanja) || void 0 === te ? void 0 : te.nama_standar_nfs) || ""),
                                  K.append("nama_jadwal_murni", (null === (ee = this.rincianBelanja) || void 0 === ee ? void 0 : ee.nama_jadwal_murni) || ""),
                                  K.append("nama_blt", (null === (ne = this.rincianBelanja) || void 0 === ne ? void 0 : ne.nama_blt) || ""),
                                  K.append("nama_usulan", (null === (ie = this.rincianBelanja) || void 0 === ie ? void 0 : ie.nama_usulan) || ""),
                                  K.append("nama_jenis_usul", (null === (se = this.rincianBelanja) || void 0 === se ? void 0 : se.nama_jenis_usul) || ""),
                                  K.append("nama_skpd", (null === (oe = this.rincianBelanja) || void 0 === oe ? void 0 : oe.nama_skpd) || ""),
                                  K.append("nama_sub_skpd", (null === (le = this.rincianBelanja) || void 0 === le ? void 0 : le.nama_sub_skpd) || ""),
                                  K.append("nama_program", (null === (re = this.rincianBelanja) || void 0 === re ? void 0 : re.nama_program) || ""),
                                  K.append("nama_giat", (null === (de = this.rincianBelanja) || void 0 === de ? void 0 : de.nama_giat) || ""),
                                  K.append("nama_sub_giat", (null === (ue = this.rincianBelanja) || void 0 === ue ? void 0 : ue.nama_sub_giat) || ""),
                                  (this.rincianBelanjaSub = this.rincianBelanjaService.update(K).subscribe({
                                      next: (Oa) => {
                                          (this.isSaving = !1), this.activeModal.close(Oa), this.toastr.success("Data berhasil disimpan", "Sukses");
                                      },
                                      error: (Oa) => {
                                          var Ga;
                                          (this.isSaving = !1), null === (Ga = this.rincianBelanjaForm) || void 0 === Ga || Ga.enable(), this.activeModal.close(), this.toastr.error("Data gagal disimpan", "Error");
                                      },
                                  })));
                    }
                    onSubmitPenerimaBantuan(t) {
                        var e, n, s, o, l, _, r, u, k, m, v, g, C, h, f, y, B, F, c, b, I, x, q, T, P, Z, J, w, R, A, N, U, W, Y, Q, $, ea, ta, sa, la;
                        const E = new FormData();
                        E.append("tahun", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getTahun()) || 0)),
                            E.append("id_daerah", String((null === (n = this.konfigurasiService) || void 0 === n ? void 0 : n.getIdDaerah()) || 0)),
                            E.append("id_unit", String((null === (s = this.subBelanja) || void 0 === s ? void 0 : s.id_unit) || 0)),
                            E.append("jenis_bantuan", String((null === (o = this.rincianBelanjaForm) || void 0 === o ? void 0 : o.value.jenis_bl) || "").toLowerCase()),
                            E.append("id_bl", String((null === (l = this.subBelanja) || void 0 === l ? void 0 : l.id_bl) || 0)),
                            E.append("id_sub_bl", String((null === (_ = this.subBelanja) || void 0 === _ ? void 0 : _.id_sub_bl) || 0)),
                            E.append("id_rinci_sub_bl", String(t)),
                            E.append("id_akun", String((null === (r = this.akunModel) || void 0 === r ? void 0 : r.id_akun) || 0));
                        let ua =
                            null !== (k = null === (u = this.lurahModel) || void 0 === u ? void 0 : u.lurah_teks) && void 0 !== k
                                ? k
                                : null !== (v = null === (m = this.camatModel) || void 0 === m ? void 0 : m.camat_teks) && void 0 !== v
                                ? v
                                : null !== (C = null === (g = this.kabkotModel) || void 0 === g ? void 0 : g.nama_daerah) && void 0 !== C
                                ? C
                                : null !== (f = null === (h = this.provModel) || void 0 === h ? void 0 : h.nama_daerah) && void 0 !== f
                                ? f
                                : "";
                        E.append("lokus_akun", String((null === (y = this.penerimaBantuanUser) || void 0 === y ? void 0 : y.nama_teks) || ua || "")),
                            E.append("id_profil", String((null === (B = this.penerimaBantuanUser) || void 0 === B ? void 0 : B.id_profil) || 0)),
                            E.append("total_harga", String((null === (F = this.rincianBelanjaForm) || void 0 === F ? void 0 : F.value.total_harga) || 0)),
                            E.append(
                                "id_prop",
                                String((null === (c = this.rincianBelanjaForm) || void 0 === c ? void 0 : c.controls.id_prov) ? (null === (b = this.rincianBelanjaForm) || void 0 === b ? void 0 : b.value.id_prov.id_daerah) : 0)
                            ),
                            E.append(
                                "id_kokab",
                                String((null === (I = this.rincianBelanjaForm) || void 0 === I ? void 0 : I.controls.id_kabkot) ? (null === (x = this.rincianBelanjaForm) || void 0 === x ? void 0 : x.value.id_kabkot.id_daerah) : 0)
                            ),
                            E.append(
                                "id_camat",
                                String((null === (q = this.rincianBelanjaForm) || void 0 === q ? void 0 : q.controls.id_camat) ? (null === (T = this.rincianBelanjaForm) || void 0 === T ? void 0 : T.value.id_camat.id_camat) : 0)
                            ),
                            E.append(
                                "id_lurah",
                                String((null === (P = this.rincianBelanjaForm) || void 0 === P ? void 0 : P.controls.id_lurah) ? (null === (Z = this.rincianBelanjaForm) || void 0 === Z ? void 0 : Z.value.id_lurah.id_lurah) : 0)
                            ),
                            E.append("id_skpd", String((null === (J = this.subBelanja) || void 0 === J ? void 0 : J.id_skpd) || 0)),
                            E.append("id_sub_skpd", String((null === (w = this.subBelanja) || void 0 === w ? void 0 : w.id_sub_skpd) || 0)),
                            E.append("id_program", String((null === (R = this.subBelanja) || void 0 === R ? void 0 : R.id_program) || 0)),
                            E.append("id_giat", String((null === (A = this.subBelanja) || void 0 === A ? void 0 : A.id_giat) || 0)),
                            E.append("id_sub_giat", String((null === (N = this.subBelanja) || void 0 === N ? void 0 : N.id_sub_giat) || 0)),
                            E.append("id_daerah_log", null === (U = this.userSession) || void 0 === U ? void 0 : U.daerah_id),
                            E.append("id_user_log", null === (W = this.userSession) || void 0 === W ? void 0 : W.user_id),
                            (this.penerimaBantuanIsLoading = !0);
                        let ra = null;
                        "add" == this.mode
                            ? (ra = this.penerimaBantuanService.add(E))
                            : ((ra = this.penerimaBantuanService.update(E)),
                              E.append("id_penerima_bantuan", String(null === (Y = this.penerimaBantuanModel) || void 0 === Y ? void 0 : Y.id_penerima_bantuan)),
                              E.append("id_unik", String(null === (Q = this.penerimaBantuanModel) || void 0 === Q ? void 0 : Q.id_unik)),
                              E.append("id_blt", String(null === ($ = this.penerimaBantuanModel) || void 0 === $ ? void 0 : $.id_blt)),
                              E.append("id_profil", String(null === (ea = this.penerimaBantuanModel) || void 0 === ea ? void 0 : ea.id_profil)),
                              E.append("id_parpol", String(null === (ta = this.penerimaBantuanModel) || void 0 === ta ? void 0 : ta.id_parpol)),
                              E.append("id_usulan", String(null === (sa = this.penerimaBantuanModel) || void 0 === sa ? void 0 : sa.id_usulan)),
                              E.append("id_jenis_usul", String(null === (la = this.penerimaBantuanModel) || void 0 === la ? void 0 : la.id_jenis_usul))),
                            null == ra ||
                                ra.subscribe({
                                    next: (oa) => {
                                        this.penerimaBantuanIsLoading = !1;
                                    },
                                    error: (oa) => {
                                        this.penerimaBantuanIsLoading = !1;
                                    },
                                });
                    }
                    onChangeObjekBelanja(t) {
                        var e, n, s, o, l, _, r, u, k, m, v, g, C, h, f, y, B, F, c, b, I, x, q, T, P, Z, J, w, R, A;
                        (this.rincianBelanjaIsLoading = !0),
                            (this.id_objek_belanja = t),
                            this.buildForm(),
                            (this.akunFilter = Object.assign({}, this.INITIAL_AKUN_FILTER)),
                            null === (n = null === (e = this.rincianBelanjaForm) || void 0 === e ? void 0 : e.get("id_prov")) || void 0 === n || n.reset(),
                            null === (o = null === (s = this.rincianBelanjaForm) || void 0 === s ? void 0 : s.get("id_kabkot")) || void 0 === o || o.reset(),
                            null === (_ = null === (l = this.rincianBelanjaForm) || void 0 === l ? void 0 : l.get("id_camat")) || void 0 === _ || _.reset(),
                            null === (u = null === (r = this.rincianBelanjaForm) || void 0 === r ? void 0 : r.get("id_lurah")) || void 0 === u || u.reset(),
                            null === (m = null === (k = this.rincianBelanjaForm) || void 0 === k ? void 0 : k.get("komponen")) || void 0 === m || m.reset(),
                            null === (g = null === (v = this.rincianBelanjaForm) || void 0 === v ? void 0 : v.get("uraian_penerima")) || void 0 === g || g.reset(),
                            null === (h = null === (C = this.rincianBelanjaForm) || void 0 === C ? void 0 : C.get("pajak")) || void 0 === h || h.reset(),
                            null === (y = null === (f = this.rincianBelanjaForm) || void 0 === f ? void 0 : f.get("tkdn_komponen")) || void 0 === y || y.reset(),
                            null === (F = null === (B = this.rincianBelanjaForm) || void 0 === B ? void 0 : B.get("spesifikasi_komponen")) || void 0 === F || F.reset(),
                            null === (b = null === (c = this.rincianBelanjaForm) || void 0 === c ? void 0 : c.get("satuan")) || void 0 === b || b.reset(),
                            null === (x = null === (I = this.rincianBelanjaForm) || void 0 === I ? void 0 : I.get("komponenkel")) || void 0 === x || x.reset(),
                            "BTL-GAJI" == t && (this.akunFilter.is_gaji_asn = 1),
                            "BARJAS-MODAL" == t &&
                                (null === (q = this.rincianBelanjaForm) || void 0 === q || q.addControl("komponenkel", new p.NI("", [p.kI.maxLength(255), p.kI.required])),
                                null === (T = this.rincianBelanjaForm) || void 0 === T || T.addControl("komponen", new p.NI("", [p.kI.required])),
                                null === (P = this.rincianBelanjaForm) || void 0 === P || P.addControl("satuan", new p.NI("", [p.kI.maxLength(255), p.kI.required])),
                                null === (Z = this.rincianBelanjaForm) || void 0 === Z || Z.addControl("spesifikasi_komponen", new p.NI("", [p.kI.maxLength(5e3)])),
                                null === (J = this.rincianBelanjaForm) || void 0 === J || J.addControl("tkdn_komponen", new p.NI("", [p.kI.maxLength(255)])),
                                null === (w = this.rincianBelanjaForm) || void 0 === w || w.addControl("pajak", new p.NI("")),
                                (this.akunFilter.is_barjas = 1),
                                (this.akunFilter.is_modal = 1)),
                            "BUNGA" == t && (null === (R = this.rincianBelanjaForm) || void 0 === R || R.addControl("uraian_penerima", new p.NI("", [p.kI.required])), (this.akunFilter.is_bunga = 1)),
                            "SUBSIDI" == t && (null === (A = this.rincianBelanjaForm) || void 0 === A || A.addControl("uraian_penerima", new p.NI("", [p.kI.required])), (this.akunFilter.is_subsidi = 1)),
                            "HIBAH-BRG" == t && (this.akunFilter.is_hibah_brg = 1),
                            "HIBAH" == t && (this.akunFilter.is_hibah_uang = 1),
                            "BANSOS-BRG" == t && (this.akunFilter.is_sosial_brg = 1),
                            "BANSOS" == t && (this.akunFilter.is_sosial_uang = 1),
                            "BAGI-HASIL" == t && (this.akunFilter.is_bagi_hasil = 1),
                            "BANKEU" == t && (this.akunFilter.is_bankeu_umum = 1),
                            "BANKEU-KHUSUS" == t && (this.akunFilter.is_bankeu_khusus = 1),
                            "BTT" == t && (this.akunFilter.is_btt = 1),
                            "BOS" == t && (this.akunFilter.is_bos = 1),
                            "BLUD" == t && (this.akunFilter.set_lokus = "blud"),
                            "TANAH" == t && (this.akunFilter.is_modal_tanah = 1),
                            (this.rincianBelanjaIsLoading = !1);
                    }
                    paketChange() {
                        var t;
                        null === (t = this.rincianBelanjaForm) || void 0 === t || t.controls.uraian_is_paket.setValue(""), this.loadRincianBelanjaPaketList();
                    }
                    bidangUrusanChange() {}
                    onChangeAkun() {
                        var t, e, n, s, o, l, _, r, u, k, m, v, g, C, h, f, y, B, F, c, b, I, x, q, T, P, Z, J, w, R, A, N, U, W, Y, Q, $, ea, ta, sa, la, E, ua, ra, oa, da, pa, na, V, H, ia, Ta, M, Ia, Ba;
                        (null === (t = this.rincianBelanjaForm) || void 0 === t ? void 0 : t.pristine) ||
                            ((this.paketBelanja = void 0),
                            (this.satuanModel = void 0),
                            (this.paketModel = void 0),
                            (this.komponenModel = void 0),
                            (this.keteranganModel = void 0),
                            (this.bidangUrusanModel = void 0),
                            (this.provModel = void 0),
                            (this.kabkotModel = void 0),
                            (this.camatModel = void 0),
                            (this.lurahModel = void 0),
                            (this.penerimaBantuanModel = void 0),
                            null === (n = null === (e = this.rincianBelanjaForm) || void 0 === e ? void 0 : e.get("is_paket")) || void 0 === n || n.setValue(""),
                            null === (o = null === (s = this.rincianBelanjaForm) || void 0 === s ? void 0 : s.get("uraian_is_paket")) || void 0 === o || o.setValue(""),
                            null === (_ = null === (l = this.rincianBelanjaForm) || void 0 === l ? void 0 : l.get("sumberDana")) || void 0 === _ || _.setValue(""),
                            null === (u = null === (r = this.rincianBelanjaForm) || void 0 === r ? void 0 : r.get("harga_satuan")) || void 0 === u || u.reset(),
                            null === (m = null === (k = this.rincianBelanjaForm) || void 0 === k ? void 0 : k.get("keterangan")) || void 0 === m || m.setValue(""),
                            null === (g = null === (v = this.rincianBelanjaForm) || void 0 === v ? void 0 : v.get("vol_1")) || void 0 === g || g.reset(),
                            null === (h = null === (C = this.rincianBelanjaForm) || void 0 === C ? void 0 : C.get("sat_1")) || void 0 === h || h.reset(),
                            null === (y = null === (f = this.rincianBelanjaForm) || void 0 === f ? void 0 : f.get("vol_2")) || void 0 === y || y.reset(),
                            null === (F = null === (B = this.rincianBelanjaForm) || void 0 === B ? void 0 : B.get("sat_2")) || void 0 === F || F.reset(),
                            null === (b = null === (c = this.rincianBelanjaForm) || void 0 === c ? void 0 : c.get("vol_3")) || void 0 === b || b.reset(),
                            null === (x = null === (I = this.rincianBelanjaForm) || void 0 === I ? void 0 : I.get("sat_3")) || void 0 === x || x.reset(),
                            null === (T = null === (q = this.rincianBelanjaForm) || void 0 === q ? void 0 : q.get("vol_4")) || void 0 === T || T.reset(),
                            null === (Z = null === (P = this.rincianBelanjaForm) || void 0 === P ? void 0 : P.get("sat_4")) || void 0 === Z || Z.reset(),
                            null === (w = null === (J = this.rincianBelanjaForm) || void 0 === J ? void 0 : J.get("volume")) || void 0 === w || w.reset(),
                            null === (A = null === (R = this.rincianBelanjaForm) || void 0 === R ? void 0 : R.get("koefisien")) || void 0 === A || A.reset(),
                            null === (U = null === (N = this.rincianBelanjaForm) || void 0 === N ? void 0 : N.get("total_harga")) || void 0 === U || U.reset(),
                            null === (Y = null === (W = this.rincianBelanjaForm) || void 0 === W ? void 0 : W.get("id_prov")) || void 0 === Y || Y.reset(),
                            null === ($ = null === (Q = this.rincianBelanjaForm) || void 0 === Q ? void 0 : Q.get("id_kabkot")) || void 0 === $ || $.reset(),
                            null === (ta = null === (ea = this.rincianBelanjaForm) || void 0 === ea ? void 0 : ea.get("id_camat")) || void 0 === ta || ta.reset(),
                            null === (la = null === (sa = this.rincianBelanjaForm) || void 0 === sa ? void 0 : sa.get("id_lurah")) || void 0 === la || la.reset(),
                            null === (ua = null === (E = this.rincianBelanjaForm) || void 0 === E ? void 0 : E.get("komponen")) || void 0 === ua || ua.reset(),
                            null === (oa = null === (ra = this.rincianBelanjaForm) || void 0 === ra ? void 0 : ra.get("uraian_penerima")) || void 0 === oa || oa.reset(),
                            null === (pa = null === (da = this.rincianBelanjaForm) || void 0 === da ? void 0 : da.get("pajak")) || void 0 === pa || pa.reset(),
                            null === (V = null === (na = this.rincianBelanjaForm) || void 0 === na ? void 0 : na.get("tkdn_komponen")) || void 0 === V || V.reset(),
                            null === (ia = null === (H = this.rincianBelanjaForm) || void 0 === H ? void 0 : H.get("spesifikasi_komponen")) || void 0 === ia || ia.reset(),
                            null === (M = null === (Ta = this.rincianBelanjaForm) || void 0 === Ta ? void 0 : Ta.get("satuan")) || void 0 === M || M.reset(),
                            null === (Ba = null === (Ia = this.rincianBelanjaForm) || void 0 === Ia ? void 0 : Ia.get("komponenkel")) || void 0 === Ba || Ba.setValue(""),
                            this.kondisiAkun());
                    }
                    kondisiAkun() {
                        var t, e, n, s, o, l, _, r, u, k, m, v, g, C, h, f, y, B, F, c, b, I, x, q, T, P, Z, J, w, R, A, N, U, W, Y, Q, $, ea, ta, sa, la, E, ua, ra, oa, da, pa, na, V, H, ia, Ta, M, Ia, Ba, Da, Fa, Ua, Za, Ca, ya, _a;
                        1 == this.akunFilter.is_bunga &&
                            ("pemkab" == (null === (t = this.akunModel) || void 0 === t ? void 0 : t.set_lokus)
                                ? (null === (e = this.rincianBelanjaForm) || void 0 === e || e.removeControl("uraian_penerima"),
                                  null === (n = this.rincianBelanjaForm) || void 0 === n || n.addControl("id_prov", new p.NI("", [p.kI.required])),
                                  null === (s = this.rincianBelanjaForm) || void 0 === s || s.addControl("id_kabkot", new p.NI("", [p.kI.required])))
                                : (null === (o = this.rincianBelanjaForm) || void 0 === o || o.removeControl("id_prov"),
                                  null === (l = this.rincianBelanjaForm) || void 0 === l || l.removeControl("id_kabkot"),
                                  null === (_ = this.rincianBelanjaForm) || void 0 === _ || _.addControl("uraian_penerima", new p.NI("", [p.kI.required])))),
                            1 == this.akunFilter.is_bagi_hasil &&
                                ("pemkab" == (null === (r = this.akunModel) || void 0 === r ? void 0 : r.set_lokus)
                                    ? (null === (u = this.rincianBelanjaForm) || void 0 === u || u.removeControl("id_camat"),
                                      null === (k = this.rincianBelanjaForm) || void 0 === k || k.removeControl("id_lurah"),
                                      null === (m = this.rincianBelanjaForm) || void 0 === m || m.addControl("id_prov", new p.NI("", [p.kI.required])),
                                      null === (v = this.rincianBelanjaForm) || void 0 === v || v.addControl("id_kabkot", new p.NI("", [p.kI.required])))
                                    : "pemdes" == (null === (g = this.akunModel) || void 0 === g ? void 0 : g.set_lokus) &&
                                      (null === (C = this.rincianBelanjaForm) || void 0 === C || C.addControl("id_prov", new p.NI("", [p.kI.required])),
                                      null === (h = this.rincianBelanjaForm) || void 0 === h || h.addControl("id_kabkot", new p.NI("", [p.kI.required])),
                                      null === (f = this.rincianBelanjaForm) || void 0 === f || f.addControl("id_camat", new p.NI("", [p.kI.required])),
                                      null === (y = this.rincianBelanjaForm) || void 0 === y || y.addControl("id_lurah", new p.NI("", [p.kI.required])))),
                            (1 == this.akunFilter.is_bankeu_umum || 1 == this.akunFilter.is_bankeu_khusus) &&
                                ("pemrov" == (null === (B = this.akunModel) || void 0 === B ? void 0 : B.set_lokus)
                                    ? (null === (F = this.rincianBelanjaForm) || void 0 === F || F.removeControl("id_kabkot"),
                                      null === (c = this.rincianBelanjaForm) || void 0 === c || c.removeControl("id_camat"),
                                      null === (b = this.rincianBelanjaForm) || void 0 === b || b.removeControl("id_lurah"),
                                      null === (I = this.rincianBelanjaForm) || void 0 === I || I.addControl("id_prov", new p.NI("", [p.kI.required])))
                                    : "pemkab" == (null === (x = this.akunModel) || void 0 === x ? void 0 : x.set_lokus)
                                    ? (null === (q = this.rincianBelanjaForm) || void 0 === q || q.removeControl("id_camat"),
                                      null === (T = this.rincianBelanjaForm) || void 0 === T || T.removeControl("id_lurah"),
                                      null === (P = this.rincianBelanjaForm) || void 0 === P || P.addControl("id_prov", new p.NI("", [p.kI.required])),
                                      null === (Z = this.rincianBelanjaForm) || void 0 === Z || Z.addControl("id_kabkot", new p.NI("", [p.kI.required])))
                                    : "pemdes" == (null === (J = this.akunModel) || void 0 === J ? void 0 : J.set_lokus) &&
                                      (null === (w = this.rincianBelanjaForm) || void 0 === w || w.addControl("id_prov", new p.NI("", [p.kI.required])),
                                      null === (R = this.rincianBelanjaForm) || void 0 === R || R.addControl("id_kabkot", new p.NI("", [p.kI.required])),
                                      null === (A = this.rincianBelanjaForm) || void 0 === A || A.addControl("id_camat", new p.NI("", [p.kI.required])),
                                      null === (N = this.rincianBelanjaForm) || void 0 === N || N.addControl("id_lurah", new p.NI("", [p.kI.required])))),
                            (1 == this.akunFilter.is_hibah_brg || 1 == this.akunFilter.is_hibah_uang) &&
                                (1 == this.akunFilter.is_hibah_brg &&
                                    (null === (U = this.rincianBelanjaForm) || void 0 === U || U.addControl("satuan", new p.NI("", [p.kI.maxLength(255), p.kI.required])),
                                    null === (W = this.rincianBelanjaForm) || void 0 === W || W.addControl("komponenkel", new p.NI("", [p.kI.maxLength(255), p.kI.required])),
                                    null === (Y = this.rincianBelanjaForm) || void 0 === Y || Y.addControl("komponen", new p.NI("", [p.kI.required])),
                                    null === (Q = this.rincianBelanjaForm) || void 0 === Q || Q.addControl("spesifikasi_komponen", new p.NI("", [p.kI.maxLength(255)])),
                                    null === ($ = this.rincianBelanjaForm) || void 0 === $ || $.addControl("tkdn_komponen", new p.NI("", [p.kI.maxLength(255)]))),
                                "lainnya" == (null === (ea = this.akunModel) || void 0 === ea ? void 0 : ea.set_lokus)
                                    ? (null === (ta = this.rincianBelanjaForm) || void 0 === ta || ta.removeControl("id_prov"),
                                      null === (sa = this.rincianBelanjaForm) || void 0 === sa || sa.removeControl("id_kabkot"),
                                      null === (la = this.rincianBelanjaForm) || void 0 === la || la.addControl("pajak", new p.NI("")),
                                      null === (E = this.rincianBelanjaForm) || void 0 === E || E.addControl("uraian_penerima", new p.NI("", [p.kI.required])))
                                    : "pemkab" == (null === (ua = this.akunModel) || void 0 === ua ? void 0 : ua.set_lokus) &&
                                      (null === (ra = this.rincianBelanjaForm) || void 0 === ra || ra.addControl("pajak", new p.NI("")),
                                      null === (oa = this.rincianBelanjaForm) || void 0 === oa || oa.addControl("id_prov", new p.NI("", [p.kI.required])),
                                      null === (da = this.rincianBelanjaForm) || void 0 === da || da.addControl("id_kabkot", new p.NI("", [p.kI.required])))),
                            (1 == this.akunFilter.is_sosial_brg || 1 == this.akunFilter.is_sosial_uang) &&
                                "lainnya" == (null === (pa = this.akunModel) || void 0 === pa ? void 0 : pa.set_lokus) &&
                                (null === (na = this.rincianBelanjaForm) || void 0 === na || na.addControl("pajak", new p.NI("")),
                                null === (V = this.rincianBelanjaForm) || void 0 === V || V.addControl("uraian_penerima", new p.NI("", [p.kI.required])),
                                1 == this.akunFilter.is_sosial_brg &&
                                    (null === (H = this.rincianBelanjaForm) || void 0 === H || H.addControl("satuan", new p.NI("", [p.kI.maxLength(255), p.kI.required])),
                                    null === (ia = this.rincianBelanjaForm) || void 0 === ia || ia.addControl("komponenkel", new p.NI("", [p.kI.maxLength(255), p.kI.required])),
                                    null === (Ta = this.rincianBelanjaForm) || void 0 === Ta || Ta.addControl("komponen", new p.NI("", [p.kI.required])),
                                    null === (M = this.rincianBelanjaForm) || void 0 === M || M.addControl("spesifikasi_komponen", new p.NI("", [p.kI.maxLength(255)])),
                                    null === (Ia = this.rincianBelanjaForm) || void 0 === Ia || Ia.addControl("tkdn_komponen", new p.NI("", [p.kI.maxLength(255)])))),
                            1 == this.akunFilter.is_bos && (null === (Ba = this.rincianBelanjaForm) || void 0 === Ba || Ba.addControl("uraian_penerima", new p.NI("", [p.kI.required]))),
                            (1 == this.akunFilter.is_barjas || 1 == this.akunFilter.is_modal) &&
                                ("blud" == (null === (Da = this.akunModel) || void 0 === Da ? void 0 : Da.set_lokus) || "tkdd" == (null === (Fa = this.akunModel) || void 0 === Fa ? void 0 : Fa.set_lokus)) &&
                                (null === (Ua = this.rincianBelanjaForm) || void 0 === Ua || Ua.removeControl("komponenkel"),
                                null === (Za = this.rincianBelanjaForm) || void 0 === Za || Za.removeControl("komponen"),
                                null === (Ca = this.rincianBelanjaForm) || void 0 === Ca || Ca.removeControl("satuan"),
                                null === (ya = this.rincianBelanjaForm) || void 0 === ya || ya.removeControl("spesifikasi_komponen"),
                                null === (_a = this.rincianBelanjaForm) || void 0 === _a || _a.removeControl("pajak"));
                    }
                    onChangeKomponen() {
                        var t, e, n, s, o, l, _, r, u, k, m, v, g, C, h;
                        this.komponenModel &&
                            (null === (e = null === (t = this.rincianBelanjaForm) || void 0 === t ? void 0 : t.get("komponen")) ||
                                void 0 === e ||
                                e.setValue(null === (n = this.komponenModel) || void 0 === n ? void 0 : n.nama_standar_harga),
                            null === (o = null === (s = this.rincianBelanjaForm) || void 0 === s ? void 0 : s.get("tkdn_komponen")) ||
                                void 0 === o ||
                                o.setValue(String(null === (l = this.komponenModel) || void 0 === l ? void 0 : l.nilai_tkdn) + " %"),
                            null === (r = null === (_ = this.rincianBelanjaForm) || void 0 === _ ? void 0 : _.get("spesifikasi_komponen")) || void 0 === r || r.setValue(null === (u = this.komponenModel) || void 0 === u ? void 0 : u.spek),
                            null === (m = null === (k = this.rincianBelanjaForm) || void 0 === k ? void 0 : k.get("satuan")) || void 0 === m || m.setValue(null === (v = this.komponenModel) || void 0 === v ? void 0 : v.satuan),
                            null === (C = null === (g = this.rincianBelanjaForm) || void 0 === g ? void 0 : g.get("harga_satuan")) ||
                                void 0 === C ||
                                C.setValue(null === (h = this.komponenModel) || void 0 === h ? void 0 : h.harga.toFixed()),
                            this.updateTotalHarga());
                    }
                    openKeteranganModal() {
                        const t = this.modalService.open(mt, { size: "lg" });
                        (t.componentInstance.mode = "create"),
                            (t.componentInstance.subBelanja = this.subBelanja),
                            (this.allDataIsLoaded = !1),
                            t.result.then(
                                (e) => {
                                    this.loadKeterangan();
                                },
                                (e) => {}
                            );
                    }
                    openPaketBelanjaModal() {
                        var t;
                        const e = this.modalService.open(Ge, { size: "lg" });
                        (e.componentInstance.mode = "add"),
                            (e.componentInstance.id_sub_bl = null === (t = this.subBelanja) || void 0 === t ? void 0 : t.id_sub_bl),
                            (e.componentInstance.subBelanja = this.subBelanja),
                            (this.allDataIsLoaded = !1),
                            e.result.then(
                                (n) => {
                                    this.loadRincianBelanjaPaketList();
                                },
                                (n) => {}
                            );
                    }
                    onChangeDana() {
                        var t, e;
                        const n = null === (e = null === (t = this.rincianBelanjaForm) || void 0 === t ? void 0 : t.get("sumberDana")) || void 0 === e ? void 0 : e.value;
                        this.dana_dipakai = "" != n ? this.sumberDanaList.find((s) => s.id_dana == n) : void 0;
                    }
                    updateTotalHarga() {
                        var t, e, n, s, o, l, _, r, u, k, m, v, g, C, h, f, y, B, F, c, b, I, x, q, T, P, Z, J, w, R, A, N, U, W, Y;
                        if (null === (t = this.rincianBelanjaForm) || void 0 === t ? void 0 : t.pristine) return;
                        const Q = null === (n = null === (e = this.rincianBelanjaForm) || void 0 === e ? void 0 : e.get("harga_satuan")) || void 0 === n ? void 0 : n.value;
                        var $ = null !== (l = null === (o = null === (s = this.rincianBelanjaForm) || void 0 === s ? void 0 : s.get("vol_1")) || void 0 === o ? void 0 : o.value) && void 0 !== l ? l : 0,
                            ea = null === (r = null === (_ = this.rincianBelanjaForm) || void 0 === _ ? void 0 : _.get("vol_2")) || void 0 === r ? void 0 : r.value,
                            ta = null === (k = null === (u = this.rincianBelanjaForm) || void 0 === u ? void 0 : u.get("vol_3")) || void 0 === k ? void 0 : k.value,
                            sa = null === (v = null === (m = this.rincianBelanjaForm) || void 0 === m ? void 0 : m.get("vol_4")) || void 0 === v ? void 0 : v.value,
                            la = String((null === (h = null === (C = null === (g = this.rincianBelanjaForm) || void 0 === g ? void 0 : g.get("sat_1")) || void 0 === C ? void 0 : C.value) || void 0 === h ? void 0 : h.nama_satuan) || ""),
                            E = String((null === (B = null === (y = null === (f = this.rincianBelanjaForm) || void 0 === f ? void 0 : f.get("sat_2")) || void 0 === y ? void 0 : y.value) || void 0 === B ? void 0 : B.nama_satuan) || ""),
                            ua = String((null === (b = null === (c = null === (F = this.rincianBelanjaForm) || void 0 === F ? void 0 : F.get("sat_3")) || void 0 === c ? void 0 : c.value) || void 0 === b ? void 0 : b.nama_satuan) || ""),
                            ra = String((null === (q = null === (x = null === (I = this.rincianBelanjaForm) || void 0 === I ? void 0 : I.get("sat_4")) || void 0 === x ? void 0 : x.value) || void 0 === q ? void 0 : q.nama_satuan) || ""),
                            oa = String($) + " " + la,
                            da = $;
                        ea > 0 && ((da = $ * ea), (oa = oa + " x " + String(ea) + " " + E)),
                            ta > 0 && ((da *= ta), (oa = oa + " x " + String(ta) + " " + ua)),
                            sa > 0 && ((da *= sa), (oa = oa + " x " + String(sa) + " " + ra)),
                            (oa = " " == oa || "undefined " == oa || "null " == oa ? "" : oa);
                        const pa = da;
                        null === (P = null === (T = this.rincianBelanjaForm) || void 0 === T ? void 0 : T.get("volume")) || void 0 === P || P.setValue(pa),
                            null === (J = null === (Z = this.rincianBelanjaForm) || void 0 === Z ? void 0 : Z.get("koefisien")) || void 0 === J || J.setValue(oa);
                        const na = Q * pa,
                            H = na + na * ((1 == (null === (R = null === (w = this.rincianBelanjaForm) || void 0 === w ? void 0 : w.get("pajak")) || void 0 === R ? void 0 : R.value) ? 11 : 0) / 100);
                        null === (N = null === (A = this.rincianBelanjaForm) || void 0 === A ? void 0 : A.get("total_harga")) || void 0 === N || N.setValue(null !== (U = H.toFixed()) && void 0 !== U ? U : 0),
                            (this.jumlahRincianAnggaran = Number(this.rincianAnggaran) + Number(H) - ("edit" == this.mode ? Number(null === (W = this.rincianBelanja) || void 0 === W ? void 0 : W.total_harga.toFixed()) : 0)),
                            (this.jumlahRincianAnggaranSkpd = Number(this.rincianAnggaranSkpd) + Number(H) - ("edit" == this.mode ? Number(null === (Y = this.rincianBelanja) || void 0 === Y ? void 0 : Y.total_harga.toFixed()) : 0)),
                            null != this.dana_dipakai && H > this.dana_dipakai.pagu_dana
                                ? ((this.melebihi_pagu_dana = !0), (this.pagu_dana = new j.H9("id-ID").transform(this.dana_dipakai.pagu_dana, "", "", "1.2-2")))
                                : (this.melebihi_pagu_dana = !1);
                    }
                    buildForm() {
                        var t, e;
                        this.rincianBelanjaForm = new p.cw({
                            jenis_bl: new p.NI(null == (null === (t = this.rincianBelanjaForm) || void 0 === t ? void 0 : t.value.jenis_bl) ? "" : null === (e = this.rincianBelanjaForm) || void 0 === e ? void 0 : e.value.jenis_bl),
                            rekening_akun: new p.NI(void 0, [p.kI.maxLength(255), p.kI.required]),
                            is_paket: new p.NI("", [p.kI.maxLength(255), p.kI.required]),
                            uraian_is_paket: new p.NI("", [p.kI.required]),
                            sumberDana: new p.NI("", [p.kI.required]),
                            harga_satuan: new p.NI("", [p.kI.maxLength(255), p.kI.required]),
                            keterangan: new p.NI("", [p.kI.required]),
                            vol_1: new p.NI("", [p.kI.maxLength(20), p.kI.required]),
                            sat_1: new p.NI("", [p.kI.maxLength(100), p.kI.required]),
                            vol_2: new p.NI("", [p.kI.maxLength(20)]),
                            sat_2: new p.NI("", [p.kI.maxLength(100)]),
                            vol_3: new p.NI("", [p.kI.maxLength(20)]),
                            sat_3: new p.NI("", [p.kI.maxLength(100)]),
                            vol_4: new p.NI("", [p.kI.maxLength(20)]),
                            sat_4: new p.NI("", [p.kI.maxLength(100)]),
                            volume: new p.NI("", [p.kI.maxLength(20)]),
                            koefisien: new p.NI("", [p.kI.maxLength(100)]),
                            total_harga: new p.NI("", [p.kI.maxLength(20)]),
                        });
                    }
                    updateRincianBelanjaPaketList() {
                        var t, e, n, s;
                        const o = new FormData();
                        o.append("id_daerah", String(null === (t = this.subBelanja) || void 0 === t ? void 0 : t.id_daerah)),
                            o.append("tahun", String(null === (e = this.subBelanja) || void 0 === e ? void 0 : e.tahun)),
                            o.append("id_sub_bl", String(null === (n = this.subBelanja) || void 0 === n ? void 0 : n.id_sub_bl)),
                            o.append("is_paket", String(null === (s = this.rincianBelanjaForm) || void 0 === s ? void 0 : s.value.is_paket)),
                            (this.paketBelanjaListIsLoading = !0),
                            (this.paketBelanjaListSub = this.paketBelanjaService.findByIdSubBl(o).subscribe({
                                next: (l) => {
                                    (this.paketBelanjaListIsLoading = !1), (this.paketBelanjaList = l.data);
                                },
                                error: (l) => {
                                    this.paketBelanjaListIsLoading = !1;
                                },
                            }));
                    }
                    openKomponen() {
                        var t, e, n, s;
                        if ("" == (null === (t = this.rincianBelanjaForm) || void 0 === t ? void 0 : t.value.komponenkel) || null == (null === (e = this.rincianBelanjaForm) || void 0 === e ? void 0 : e.value.komponenkel))
                            return void this.toastr.error("Data Jenis Standar Harga Belum dipilih!", "Error");
                        const o = this.modalService.open(pn, { size: "lg" });
                        (o.componentInstance.id_akun = null === (n = this.akunModel) || void 0 === n ? void 0 : n.id_akun),
                            (o.componentInstance.tipe = null === (s = this.rincianBelanjaForm) || void 0 === s ? void 0 : s.value.komponenkel),
                            (this.allDataIsLoaded = !1),
                            o.result.then(
                                (l) => {
                                    var _;
                                    l && ((this.komponenModel = l), null === (_ = this.rincianBelanjaForm) || void 0 === _ || _.markAsDirty(), this.onChangeKomponen());
                                },
                                (l) => {}
                            );
                    }
                    openPenerimaBantuan() {
                        var t, e, n, s, o, l, _, r, u, k, m, v, g, C, h, f, y, B, F, c, b, I, x, q;
                        const T = this.modalService.open(Vn, { size: "lg" });
                        (T.componentInstance.id_akun = null === (t = this.akunModel) || void 0 === t ? void 0 : t.id_akun),
                            (T.componentInstance.id_rinci_sub_bl = null === (e = this.rincianBelanja) || void 0 === e ? void 0 : e.id_rinci_sub_bl),
                            18480 == (null === (n = this.akunModel) || void 0 === n ? void 0 : n.id_akun) &&
                                ((T.componentInstance.jumlahRincianAnggaranSkpd = String(this.jumlahRincianAnggaranSkpd)),
                                (T.componentInstance.paguIndikatif = String(this.paguIndikatif)),
                                (T.componentInstance.id_unit = String((null === (s = this.subBelanja) || void 0 === s ? void 0 : s.id_unit) || 0)),
                                (T.componentInstance.id_bl = String((null === (o = this.subBelanja) || void 0 === o ? void 0 : o.id_bl) || 0)),
                                (T.componentInstance.id_sub_bl = String((null === (l = this.subBelanja) || void 0 === l ? void 0 : l.id_sub_bl) || 0)),
                                (T.componentInstance.jenis_bl = String("BANSOS")),
                                (T.componentInstance.id_akun = String((null === (_ = this.akunModel) || void 0 === _ ? void 0 : _.id_akun) || 0)),
                                (T.componentInstance.id_jadwal_murni = String((null === (r = this.subBelanja) || void 0 === r ? void 0 : r.id_jadwal_murni) || 0)),
                                (T.componentInstance.id_skpd = String((null === (u = this.subBelanja) || void 0 === u ? void 0 : u.id_skpd) || 0)),
                                (T.componentInstance.id_sub_skpd = String((null === (k = this.subBelanja) || void 0 === k ? void 0 : k.id_sub_skpd) || 0)),
                                (T.componentInstance.id_program = String((null === (m = this.subBelanja) || void 0 === m ? void 0 : m.id_program) || 0)),
                                (T.componentInstance.id_giat = String((null === (v = this.subBelanja) || void 0 === v ? void 0 : v.id_giat) || 0)),
                                (T.componentInstance.id_sub_giat = String((null === (g = this.subBelanja) || void 0 === g ? void 0 : g.id_sub_giat) || 0)),
                                (T.componentInstance.rkpd_murni = String((null === (C = this.subBelanja) || void 0 === C ? void 0 : C.rkpd_murni) || 0)),
                                (T.componentInstance.rkpd_pak = String((null === (h = this.subBelanja) || void 0 === h ? void 0 : h.rkpd_pak) || 0)),
                                (T.componentInstance.nama_daerah = String((null === (f = this.subBelanja) || void 0 === f ? void 0 : f.nama_daerah) || "")),
                                (T.componentInstance.nama_unit = String((null === (y = this.subBelanja) || void 0 === y ? void 0 : y.nama_unit) || "")),
                                (T.componentInstance.nama_skpd = String((null === (B = this.subBelanja) || void 0 === B ? void 0 : B.nama_skpd) || "")),
                                (T.componentInstance.nama_sub_skpd = String((null === (F = this.subBelanja) || void 0 === F ? void 0 : F.nama_sub_skpd) || "")),
                                (T.componentInstance.nama_program = String((null === (c = this.subBelanja) || void 0 === c ? void 0 : c.nama_program) || "")),
                                (T.componentInstance.nama_giat = String((null === (b = this.subBelanja) || void 0 === b ? void 0 : b.nama_giat) || "")),
                                (T.componentInstance.nama_sub_giat = String((null === (I = this.subBelanja) || void 0 === I ? void 0 : I.nama_sub_giat) || "")),
                                (T.componentInstance.nama_standar_nfs = String("")),
                                (T.componentInstance.nama_jadwal_murni = String("")),
                                (T.componentInstance.nama_blt = String("")),
                                (T.componentInstance.nama_usulan = String("")),
                                (T.componentInstance.nama_jenis_usul = String("")),
                                (T.componentInstance.kode_akun = String((null === (x = this.akunModel) || void 0 === x ? void 0 : x.kode_akun) || 0)),
                                (T.componentInstance.nama_akun = String((null === (q = this.akunModel) || void 0 === q ? void 0 : q.nama_akun) || 0))),
                            (this.allDataIsLoaded = !1),
                            T.result.then(
                                (P) => {
                                    var Z, J, w;
                                    P &&
                                        (1 == P && this.activeModal.close(!0),
                                        (this.penerimaBantuanUser = P),
                                        null === (J = null === (Z = this.rincianBelanjaForm) || void 0 === Z ? void 0 : Z.get("uraian_penerima")) ||
                                            void 0 === J ||
                                            J.setValue(null === (w = this.penerimaBantuanUser) || void 0 === w ? void 0 : w.nama_teks));
                                },
                                (P) => {}
                            );
                    }
                    loadRincianBelanja() {
                        var t, e, n, s, o, l;
                        if ("edit" === this.mode || "view" === this.mode) {
                            this.pageTitle = "view" === this.mode ? "Lihat Rincian Belanja" : "Ubah Rincian Belanja";
                            const _ = new FormData();
                            _.append("tahun", String((null === (t = this.subBelanja) || void 0 === t ? void 0 : t.tahun) || 0)),
                                _.append("id_daerah", String((null === (e = this.subBelanja) || void 0 === e ? void 0 : e.id_daerah) || 0)),
                                _.append("id_sub_bl", String(null === (n = this.subBelanja) || void 0 === n ? void 0 : n.id_sub_bl)),
                                (this.rincianBelanjaIsLoading = !0),
                                this.rincianBelanjaService.view(String(null === (s = this.rincianBelanja) || void 0 === s ? void 0 : s.id_rinci_sub_bl), _).subscribe({
                                    next: (r) => {
                                        var u, k, m, v, g, C, h, f, y, B, F, c, b, I, x, q;
                                        if (((this.rincianBelanjaIsLoading = !1), r.data[0])) {
                                            (this.rincianBelanja = r.data[0]),
                                                this.onChangeObjekBelanja(String(null === (u = this.rincianBelanja) || void 0 === u ? void 0 : u.jenis_bl)),
                                                this.loadSumberDana(null === (k = this.rincianBelanja) || void 0 === k ? void 0 : k.id_dana),
                                                (this.satuanModel = this.satuanList.find((R) => {
                                                    var A;
                                                    return R.nama_satuan == (null === (A = this.rincianBelanja) || void 0 === A ? void 0 : A.sat_1);
                                                })),
                                                (this.satuanModel2 = this.satuanList.find((R) => {
                                                    var A;
                                                    return R.nama_satuan == (null === (A = this.rincianBelanja) || void 0 === A ? void 0 : A.sat_2);
                                                })),
                                                (this.satuanModel3 = this.satuanList.find((R) => {
                                                    var A;
                                                    return R.nama_satuan == (null === (A = this.rincianBelanja) || void 0 === A ? void 0 : A.sat_3);
                                                })),
                                                (this.satuanModel4 = this.satuanList.find((R) => {
                                                    var A;
                                                    return R.nama_satuan == (null === (A = this.rincianBelanja) || void 0 === A ? void 0 : A.sat_4);
                                                }));
                                            const T = new FormData();
                                            T.append("tahun", String(null === (m = this.rincianBelanja) || void 0 === m ? void 0 : m.tahun)),
                                                T.append("id_akun", String(null === (v = this.rincianBelanja) || void 0 === v ? void 0 : v.id_akun)),
                                                (this.akunIsLoading = !0),
                                                (this.akunSub = this.akunService.getById(T).subscribe({
                                                    next: (R) => {
                                                        var A, N, U, W, Y, Q, $, ea, ta, sa, la, E, ua, ra, oa, da, pa, na, V, H;
                                                        (this.akunIsLoading = !1),
                                                            (this.akunModel = R.data[0]),
                                                            this.kondisiAkun(),
                                                            null === (A = this.rincianBelanjaForm) ||
                                                                void 0 === A ||
                                                                A.patchValue({
                                                                    jenis_bl: null === (N = this.rincianBelanja) || void 0 === N ? void 0 : N.jenis_bl,
                                                                    pajak: !!((null === (U = this.rincianBelanja) || void 0 === U ? void 0 : U.pajak) && Number(null === (W = this.rincianBelanja) || void 0 === W ? void 0 : W.pajak) > 0),
                                                                    volume: null === (Y = this.rincianBelanja) || void 0 === Y ? void 0 : Y.volume,
                                                                    harga_satuan: null === (Q = this.rincianBelanja) || void 0 === Q ? void 0 : Q.harga_satuan.toFixed(),
                                                                    koefisien: null === ($ = this.rincianBelanja) || void 0 === $ ? void 0 : $.koefisien,
                                                                    total_harga: null === (ea = this.rincianBelanja) || void 0 === ea ? void 0 : ea.total_harga.toFixed(),
                                                                    vol_1: null === (ta = this.rincianBelanja) || void 0 === ta ? void 0 : ta.vol_1,
                                                                    sat_1: null === (sa = this.rincianBelanja) || void 0 === sa ? void 0 : sa.sat_1,
                                                                    vol_2: null === (la = this.rincianBelanja) || void 0 === la ? void 0 : la.vol_2,
                                                                    sat_2: null === (E = this.rincianBelanja) || void 0 === E ? void 0 : E.sat_2,
                                                                    vol_3: null === (ua = this.rincianBelanja) || void 0 === ua ? void 0 : ua.vol_3,
                                                                    sat_3: null === (ra = this.rincianBelanja) || void 0 === ra ? void 0 : ra.sat_3,
                                                                    vol_4: null === (oa = this.rincianBelanja) || void 0 === oa ? void 0 : oa.vol_4,
                                                                    sat_4: null === (da = this.rincianBelanja) || void 0 === da ? void 0 : da.sat_4,
                                                                }),
                                                            null === (na = null === (pa = this.rincianBelanjaForm) || void 0 === pa ? void 0 : pa.get("total_harga")) ||
                                                                void 0 === na ||
                                                                na.setValue(null !== (H = null === (V = this.rincianBelanja) || void 0 === V ? void 0 : V.total_harga.toFixed()) && void 0 !== H ? H : 0);
                                                    },
                                                    error: (R) => {
                                                        this.akunIsLoading = !1;
                                                    },
                                                }));
                                            const P = new FormData();
                                            P.append("id_daerah", String(null === (g = this.rincianBelanja) || void 0 === g ? void 0 : g.id_daerah)),
                                                P.append("tahun", String(null === (C = this.rincianBelanja) || void 0 === C ? void 0 : C.tahun)),
                                                P.append("id_standar_harga", String(null === (h = this.rincianBelanja) || void 0 === h ? void 0 : h.id_standar_harga)),
                                                (this.komponenIsLoading = !0),
                                                (this.komponenSub = this.komponenService.getByIdStandarHarga(P).subscribe({
                                                    next: (R) => {
                                                        var A, N, U, W, Y, Q;
                                                        if (
                                                            ((this.komponenIsLoading = !1),
                                                            R.data.length > 0 &&
                                                                ((this.komponenModel = R.data.find((ea) => {
                                                                    var ta, sa, la, E;
                                                                    return (
                                                                        ea.id_standar_harga == (null === (ta = this.rincianBelanja) || void 0 === ta ? void 0 : ta.id_standar_harga) &&
                                                                        (null != (null === (sa = this.rincianBelanja) || void 0 === sa ? void 0 : sa.kode_standar_harga)
                                                                            ? ea.kode_standar_harga == (null === (la = this.rincianBelanja) || void 0 === la ? void 0 : la.kode_standar_harga)
                                                                            : ea.harga == (null === (E = this.rincianBelanja) || void 0 === E ? void 0 : E.harga_satuan))
                                                                    );
                                                                })),
                                                                (this.komponenModel = null == this.komponenModel ? R.data[0] : this.komponenModel),
                                                                (this.komponenModel.harga = Number(null === (A = this.rincianBelanja) || void 0 === A ? void 0 : A.harga_satuan)),
                                                                this.komponenModel))
                                                        ) {
                                                            this.onChangeKomponen();
                                                            var $ = "";
                                                            switch (null === (N = this.komponenModel) || void 0 === N ? void 0 : N.kelompok) {
                                                                case 1:
                                                                    $ = "SSH";
                                                                    break;
                                                                case 2:
                                                                    $ = "HSPK";
                                                                    break;
                                                                case 3:
                                                                    $ = "ASB";
                                                                    break;
                                                                case 4:
                                                                    $ = "SBU";
                                                            }
                                                            const ea =
                                                                "" == (null === (U = this.komponenModel) || void 0 === U ? void 0 : U.tipe_standar_harga)
                                                                    ? $
                                                                    : null === (W = this.komponenModel) || void 0 === W
                                                                    ? void 0
                                                                    : W.tipe_standar_harga;
                                                            null === (Q = null === (Y = this.rincianBelanjaForm) || void 0 === Y ? void 0 : Y.get("komponenkel")) || void 0 === Q || Q.setValue(ea);
                                                        }
                                                    },
                                                    error: (R) => {
                                                        this.komponenIsLoading = !1;
                                                    },
                                                }));
                                            const Z = new FormData();
                                            Z.append("id_daerah", String(null === (f = this.rincianBelanja) || void 0 === f ? void 0 : f.id_daerah)),
                                                Z.append("tahun", String(null === (y = this.rincianBelanja) || void 0 === y ? void 0 : y.tahun)),
                                                (this.penerimaBantuanIsLoading = !0),
                                                (this.penerimaBantuanSub = this.penerimaBantuanService.viewByIdRinciSubBl(String(null === (B = this.rincianBelanja) || void 0 === B ? void 0 : B.id_rinci_sub_bl), Z).subscribe({
                                                    next: (R) => {
                                                        var A, N, U, W, Y, Q, $, ea, ta, sa, la, E, ua, ra, oa, da, pa, na;
                                                        if (((this.penerimaBantuanModel = R.data[0]), this.penerimaBantuanModel)) {
                                                            if (
                                                                ((this.penerimaBantuanUser = {}),
                                                                (this.penerimaBantuanUser.nama_teks = null === (A = this.penerimaBantuanModel) || void 0 === A ? void 0 : A.lokus_akun),
                                                                (this.penerimaBantuanUser.id_profil = null === (N = this.penerimaBantuanModel) || void 0 === N ? void 0 : N.id_profil),
                                                                0 != R.data[0].id_profil)
                                                            ) {
                                                                const V = new FormData();
                                                                V.append("id_daerah", String(this.konfigurasiService.getIdDaerah())),
                                                                    V.append("id_profil", String(this.penerimaBantuanUser.id_profil)),
                                                                    this.userService.getProfile(V).subscribe({
                                                                        next: (H) => {
                                                                            var ia, Ta, M, Ia, Ba, Da;
                                                                            (this.penerimaBantuanIsLoading = !1),
                                                                                H.data &&
                                                                                    ((this.penerimaBantuanUser.nama_teks = null === (ia = H.data[0]) || void 0 === ia ? void 0 : ia.nama_teks),
                                                                                    null === (M = null === (Ta = this.rincianBelanjaForm) || void 0 === Ta ? void 0 : Ta.get("uraian_penerima")) ||
                                                                                        void 0 === M ||
                                                                                        M.setValue(null === (Ia = H.data[0]) || void 0 === Ia ? void 0 : Ia.nama_teks),
                                                                                    null === (Ba = this.rincianBelanjaForm) ||
                                                                                        void 0 === Ba ||
                                                                                        Ba.patchValue({ uraian_penerima: null === (Da = H.data[0]) || void 0 === Da ? void 0 : Da.nama_teks }));
                                                                        },
                                                                        error: (H) => {
                                                                            this.searchCamatIsLoading = !1;
                                                                        },
                                                                    });
                                                            } else
                                                                (this.penerimaBantuanIsLoading = !1),
                                                                    null === (W = null === (U = this.rincianBelanjaForm) || void 0 === U ? void 0 : U.get("uraian_penerima")) ||
                                                                        void 0 === W ||
                                                                        W.setValue(null === (Y = this.penerimaBantuanUser) || void 0 === Y ? void 0 : Y.nama_teks),
                                                                    null === (Q = this.rincianBelanjaForm) || void 0 === Q || Q.patchValue({ uraian_penerima: null === ($ = this.penerimaBantuanUser) || void 0 === $ ? void 0 : $.nama_teks });
                                                            0 != (null === (ea = this.penerimaBantuanModel) || void 0 === ea ? void 0 : ea.id_prop) &&
                                                                ((this.searchProvinsiIsLoading = !0),
                                                                this.daerahService.view(String(null === (ta = this.penerimaBantuanModel) || void 0 === ta ? void 0 : ta.id_prop)).subscribe({
                                                                    next: (V) => {
                                                                        var H;
                                                                        (this.searchProvinsiIsLoading = !1),
                                                                            V.data[0] && ((this.provModel = V.data[0]), null === (H = this.rincianBelanjaForm) || void 0 === H || H.patchValue({ id_prov: this.provModel }));
                                                                    },
                                                                    error: (V) => {
                                                                        this.searchProvinsiIsLoading = !1;
                                                                    },
                                                                })),
                                                                0 != (null === (sa = this.penerimaBantuanModel) || void 0 === sa ? void 0 : sa.id_kokab) &&
                                                                    ((this.searchKabkotIsLoading = !0),
                                                                    this.daerahService.view(String(null === (la = this.penerimaBantuanModel) || void 0 === la ? void 0 : la.id_kokab)).subscribe({
                                                                        next: (V) => {
                                                                            var H;
                                                                            (this.searchKabkotIsLoading = !1),
                                                                                V.data[0] && ((this.kabkotModel = V.data[0]), null === (H = this.rincianBelanjaForm) || void 0 === H || H.patchValue({ id_kabkot: this.kabkotModel }));
                                                                        },
                                                                        error: (V) => {
                                                                            this.searchKabkotIsLoading = !1;
                                                                        },
                                                                    })),
                                                                0 != (null === (E = this.penerimaBantuanModel) || void 0 === E ? void 0 : E.id_camat) &&
                                                                    ((this.searchCamatIsLoading = !0),
                                                                    this.kecamatanService.view(null === (ua = this.penerimaBantuanModel) || void 0 === ua ? void 0 : ua.id_camat, this.konfigurasiService.getTahun()).subscribe({
                                                                        next: (V) => {
                                                                            var H;
                                                                            (this.searchCamatIsLoading = !1),
                                                                                V.data[0] && ((this.camatModel = V.data[0]), null === (H = this.rincianBelanjaForm) || void 0 === H || H.patchValue({ id_camat: this.camatModel }));
                                                                        },
                                                                        error: (V) => {
                                                                            this.searchCamatIsLoading = !1;
                                                                        },
                                                                    })),
                                                                0 != (null === (ra = this.penerimaBantuanModel) || void 0 === ra ? void 0 : ra.id_lurah) &&
                                                                    ((this.searchLurahIsLoading = !0),
                                                                    this.kelurahanService
                                                                        .view(String(this.konfigurasiService.getTahun()), String(null === (oa = this.penerimaBantuanModel) || void 0 === oa ? void 0 : oa.id_lurah))
                                                                        .subscribe({
                                                                            next: (V) => {
                                                                                var H;
                                                                                (this.searchLurahIsLoading = !1),
                                                                                    V.data[0] && ((this.lurahModel = V.data[0]), null === (H = this.rincianBelanjaForm) || void 0 === H || H.patchValue({ id_lurah: this.lurahModel }));
                                                                            },
                                                                            error: (V) => {
                                                                                this.searchLurahIsLoading = !1;
                                                                            },
                                                                        })),
                                                                null === (pa = null === (da = this.rincianBelanjaForm) || void 0 === da ? void 0 : da.get("penerimaBantuankel")) ||
                                                                    void 0 === pa ||
                                                                    pa.setValue(null === (na = R.data[0]) || void 0 === na ? void 0 : na.tipe_standar_harga);
                                                        } else this.penerimaBantuanIsLoading = !1;
                                                    },
                                                    error: (R) => {
                                                        this.penerimaBantuanIsLoading = !1;
                                                    },
                                                }));
                                            const J = new FormData();
                                            J.append("id_daerah", String(null === (F = this.subBelanja) || void 0 === F ? void 0 : F.id_daerah)),
                                                J.append("tahun", String(null === (c = this.subBelanja) || void 0 === c ? void 0 : c.tahun)),
                                                J.append("id_sub_bl", String(null === (b = this.subBelanja) || void 0 === b ? void 0 : b.id_sub_bl)),
                                                (this.paketBelanjaIsLoading = !0),
                                                (this.paketBelanjaSub = this.paketBelanjaService.view(String(null === (I = this.rincianBelanja) || void 0 === I ? void 0 : I.id_subs_sub_bl), J).subscribe({
                                                    next: (R) => {
                                                        var A, N;
                                                        (this.paketBelanjaIsLoading = !1),
                                                            R.data[0] &&
                                                                ((this.paketBelanja = R.data[0]),
                                                                (this.paketModel = this.paketBelanja),
                                                                null === (A = this.rincianBelanjaForm) || void 0 === A || A.patchValue({ is_paket: null === (N = this.paketBelanja) || void 0 === N ? void 0 : N.is_paket }),
                                                                this.loadRincianBelanjaPaketList(!0));
                                                    },
                                                    error: (R) => {
                                                        this.paketBelanjaListIsLoading = !1;
                                                    },
                                                }));
                                            const w = new FormData();
                                            w.append("id_daerah", String(null === (x = this.rincianBelanja) || void 0 === x ? void 0 : x.id_daerah)),
                                                (this.keteranganIsLoading = !0),
                                                (this.keteranganSub = this.keteranganBelanjaService.view(String((null === (q = this.rincianBelanja) || void 0 === q ? void 0 : q.id_ket_sub_bl) || 0), w).subscribe({
                                                    next: (R) => {
                                                        var A, N;
                                                        (this.keteranganIsLoading = !1),
                                                            (this.keteranganModel = R.data[0]),
                                                            null === (A = this.rincianBelanjaForm) || void 0 === A || A.patchValue({ keterangan: null === (N = this.keteranganModel) || void 0 === N ? void 0 : N.id_ket_sub_bl });
                                                    },
                                                    error: (R) => {
                                                        this.keteranganIsLoading = !1;
                                                    },
                                                }));
                                        }
                                    },
                                    error: (r) => {
                                        this.rincianBelanjaIsLoading = !1;
                                    },
                                });
                        } else this.loadSumberDana();
                        (this.subGiatIsLoading = !0),
                            this.subGiatService.view((null === (o = this.subBelanja) || void 0 === o ? void 0 : o.id_sub_giat) || 0, (null === (l = this.subBelanja) || void 0 === l ? void 0 : l.tahun) || 0).subscribe({
                                next: (_) => {
                                    if (((this.subGiatIsLoading = !1), _.data[0])) {
                                        let r = _.data[0].kode_sub_giat;
                                        "X" == r.split(".")[0] && "XX" == r.split(".")[0] && (this.isBidangUrusan = !0);
                                    }
                                },
                                error: (_) => {
                                    this.subGiatIsLoading = !1;
                                },
                            });
                    }
                    loadRincianBelanjaPaketList(t = !1) {
                        var e, n, s, o;
                        const l = new FormData();
                        l.append("id_daerah", String(null === (e = this.subBelanja) || void 0 === e ? void 0 : e.id_daerah)),
                            l.append("tahun", String(null === (n = this.subBelanja) || void 0 === n ? void 0 : n.tahun)),
                            l.append("id_sub_bl", String(null === (s = this.subBelanja) || void 0 === s ? void 0 : s.id_sub_bl)),
                            l.append("is_paket", String(null === (o = this.rincianBelanjaForm) || void 0 === o ? void 0 : o.value.is_paket)),
                            (this.paketBelanjaListIsLoading = !0),
                            (this.paketBelanjaListSub = this.paketBelanjaService.findByIdSubBl(l).subscribe({
                                next: (_) => {
                                    var r, u;
                                    (this.paketBelanjaListIsLoading = !1),
                                        (this.paketBelanjaList = _.data),
                                        ("edit" == this.mode || "view" === this.mode) &&
                                            t &&
                                            (null === (r = this.rincianBelanjaForm) || void 0 === r || r.patchValue({ uraian_is_paket: null === (u = this.paketBelanja) || void 0 === u ? void 0 : u.id_subs_sub_bl }));
                                },
                                error: (_) => {
                                    this.paketBelanjaListIsLoading = !1;
                                },
                            }));
                    }
                    loadKeterangan() {
                        var t, e, n;
                        const s = new FormData();
                        s.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                            s.append("id_daerah", String((null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getIdDaerah()) || 0)),
                            s.append("id_unit", String(null === (e = this.subBelanja) || void 0 === e ? void 0 : e.id_unit)),
                            s.append("id_sub_giat", String(null === (n = this.subBelanja) || void 0 === n ? void 0 : n.id_sub_giat)),
                            s.append("kondisi_rincian", String("true")),
                            s.append("length", "100000"),
                            (this.keteranganIsLoading = !0),
                            (this.keteranganSub = this.keteranganBelanjaService.find(s).subscribe({
                                next: (o) => {
                                    (this.keteranganIsLoading = !1),
                                        o.data.sort((l, _) => (String(l.ket_bl_teks.toLowerCase()).trim() < String(_.ket_bl_teks.toLowerCase()).trim() ? -1 : 1)),
                                        (this.keteranganList = o.data),
                                        this.loadSatuan();
                                },
                                error: (o) => {
                                    this.keteranganIsLoading = !1;
                                },
                            }));
                    }
                    loadSumberDana(t = 0) {
                        var e, n, s;
                        const o = new FormData();
                        o.append("id_daerah", String(null === (e = this.subBelanja) || void 0 === e ? void 0 : e.id_daerah)),
                            o.append("tahun", String(null === (n = this.subBelanja) || void 0 === n ? void 0 : n.tahun)),
                            o.append("id_sub_bl", String(null === (s = this.subBelanja) || void 0 === s ? void 0 : s.id_sub_bl)),
                            (this.sumberDanaIsLoading = !0),
                            (this.sumberDanaSub = this.renjaDanaBelanjaService.getByIdSubBl(o).subscribe({
                                next: (l) => {
                                    var _;
                                    (this.sumberDanaIsLoading = !1), (this.sumberDanaList = l.data), t && (null === (_ = this.rincianBelanjaForm) || void 0 === _ || _.controls.sumberDana.setValue(t)), this.onChangeDana();
                                },
                                error: (l) => {
                                    this.sumberDanaIsLoading = !1;
                                },
                            }));
                    }
                    loadSatuan() {
                        const t = new FormData();
                        t.append("length", "1000"),
                            (this.satuanIsLoading = !0),
                            (this.satuanSub = this.satuanService.list(t).subscribe({
                                next: (e) => {
                                    (this.satuanIsLoading = !1), (this.satuanList = e.data.data), this.loadRincianBelanja();
                                },
                                error: (e) => {
                                    this.satuanIsLoading = !1;
                                },
                            }));
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(
                            a.Y36(aa.Kz),
                            a.Y36(aa.FF),
                            a.Y36(Na._W),
                            a.Y36(Ra.W),
                            a.Y36(ce.f),
                            a.Y36(pe),
                            a.Y36($a),
                            a.Y36(Xn.y),
                            a.Y36(lt),
                            a.Y36(it.b),
                            a.Y36(tt.b),
                            a.Y36(nt.E),
                            a.Y36(_t.w),
                            a.Y36(pt.O),
                            a.Y36(rt),
                            a.Y36(a.sBO),
                            a.Y36(ai),
                            a.Y36(at),
                            a.Y36(st.X),
                            a.Y36(ct.K)
                        );
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-rincian-belanja-form"]],
                        viewQuery: function (t, e) {
                            if ((1 & t && (a.Gf(ti, 7), a.Gf(ei, 7), a.Gf(ni, 7), a.Gf(ii, 7), a.Gf(si, 7), a.Gf(oi, 7), a.Gf(li, 7), a.Gf(ri, 7), a.Gf(di, 7), a.Gf(ui, 7), a.Gf(_i, 7), a.Gf(pi, 7), a.Gf(ci, 7)), 2 & t)) {
                                let n;
                                a.iGM((n = a.CRH())) && (e.satuanInstance = n.first),
                                    a.iGM((n = a.CRH())) && (e.satuanInstance2 = n.first),
                                    a.iGM((n = a.CRH())) && (e.satuanInstance3 = n.first),
                                    a.iGM((n = a.CRH())) && (e.satuanInstance4 = n.first),
                                    a.iGM((n = a.CRH())) && (e.paketInstance = n.first),
                                    a.iGM((n = a.CRH())) && (e.akunInstance = n.first),
                                    a.iGM((n = a.CRH())) && (e.komponenInstance = n.first),
                                    a.iGM((n = a.CRH())) && (e.keteranganInstance = n.first),
                                    a.iGM((n = a.CRH())) && (e.bidangUrusanInstance = n.first),
                                    a.iGM((n = a.CRH())) && (e.provInstance = n.first),
                                    a.iGM((n = a.CRH())) && (e.kabkotInstance = n.first),
                                    a.iGM((n = a.CRH())) && (e.camatInstance = n.first),
                                    a.iGM((n = a.CRH())) && (e.lurahInstance = n.first);
                            }
                        },
                        decls: 7,
                        vars: 3,
                        consts: [
                            [1, "modal-header"],
                            [1, "fw-bolder", "m-0"],
                            ["type", "button", "aria-label", "Close", 1, "btn-close", 3, "click"],
                            [1, "card", "mb-3"],
                            ["class", "d-flex justify-content-center mt-20 mb-20", 4, "ngIf"],
                            ["class", "collapse show", 4, "ngIf"],
                            [1, "d-flex", "justify-content-center", "mt-20", "mb-20"],
                            [1, "spinner-border"],
                            [1, "collapse", "show"],
                            ["novalidate", "", "class", "form", 3, "formGroup", "submit", 4, "ngIf"],
                            ["novalidate", "", 1, "form", 3, "formGroup", "submit"],
                            [1, "card-body", "border-top", "p-9"],
                            [1, "row", "mb-6"],
                            ["for", "jenis_bl", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [1, "col-lg-8", "fv-row"],
                            ["id", "jenis_bl", "formControlName", "jenis_bl", 1, "form-control", "select2", 3, "change"],
                            ["value", ""],
                            ["value", "BTL-GAJI"],
                            ["value", "BARJAS-MODAL"],
                            ["value", "BUNGA"],
                            ["value", "SUBSIDI"],
                            ["value", "HIBAH-BRG"],
                            ["value", "HIBAH"],
                            ["value", "BANSOS-BRG"],
                            ["value", "BANSOS"],
                            ["value", "BAGI-HASIL"],
                            ["value", "BANKEU"],
                            ["value", "BANKEU-KHUSUS"],
                            ["value", "BTT"],
                            ["value", "BOS"],
                            ["value", "BLUD"],
                            ["value", "TANAH"],
                            ["class", "row mb-6", 4, "ngIf"],
                            ["class", "row mb-2", 4, "ngIf"],
                            [1, "card-footer", "d-flex", "justify-content-between", "py-5", "px-9"],
                            [1, "btn", "btn-outline-danger", 3, "click"],
                            [2, "display", "inline-block", 3, "ngbTooltip"],
                            ["type", "submit", "class", "btn btn-success", 3, "disabled", 4, "ngIf"],
                            ["for", "akun-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [1, "position-relative", "is-loading"],
                            [
                                "id",
                                "akun-autocomplete",
                                "type",
                                "text",
                                "formControlName",
                                "rekening_akun",
                                "placeholder",
                                "Rekening / Akun...",
                                "maxlength",
                                "555",
                                "tooltipClass",
                                "custom-tooltip-class",
                                1,
                                "form-control",
                                3,
                                "ngClass",
                                "ngModel",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "disabled",
                                "ngbTooltip",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["akunInstance", "ngbTypeahead"],
                            ["class", "spinner-border spinner-border-sm mt-1", 4, "ngIf"],
                            [1, "spinner-border", "spinner-border-sm", "mt-1"],
                            ["for", "is_paket", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            ["id", "is_paket", "formControlName", "is_paket", "name", "jenis_subtitle", 1, "form-select", 3, "ngModelChange"],
                            ["value", "1", 3, "selected"],
                            ["value", "2", 3, "selected"],
                            ["for", "paket-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            ["id", "uraian_is_paket", "formControlName", "uraian_is_paket", "name", "uraian_is_paket", 1, "form-select"],
                            [3, "value", 4, "ngFor", "ngForOf"],
                            ["class", "text-primary", "role", "button", 3, "click", 4, "ngIf"],
                            [3, "value"],
                            ["role", "button", 1, "text-primary", 3, "click"],
                            ["for", "sumberDana-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            ["id", "sumberDana", "formControlName", "sumberDana", "name", "jenis_subtitle", 1, "form-select", 3, "ngModelChange"],
                            [1, "row", "mb-2"],
                            ["for", "uraian_penerima", 1, "col-lg-4", "col-form-label", "fs-6", "pb-2", "fw-bolder", "text-dark"],
                            ["for", "uraian_penerima", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            ["formControlName", "uraian_penerima", "id", "uraian_penerima", "type", "text", "placeholder", "Nama Penerima...", 1, "form-control"],
                            ["for", "penerima-bantuan-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [1, "col-lg-7", "fv-row"],
                            ["id", "uraian_penerima", "formControlName", "uraian_penerima", "type", "text", "placeholder", "Penerima Bantuan", 1, "form-control"],
                            [1, "col-lg-1", "fv-row"],
                            ["class", "btn btn-icon btn-light-primary btn-lg", "ngbTooltip", "Pilih Penerima Bantuan", 3, "click", 4, "ngIf"],
                            ["ngbTooltip", "Pilih Penerima Bantuan", 1, "btn", "btn-icon", "btn-light-primary", "btn-lg", 3, "click"],
                            [1, "svg-icon", "svg-icon-3", 3, "inlineSVG"],
                            ["for", "prov-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [
                                "id",
                                "prov-autocomplete",
                                "type",
                                "text",
                                "formControlName",
                                "id_prov",
                                "placeholder",
                                "Provinsi",
                                "maxlength",
                                "40",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["provInstance", "ngbTypeahead"],
                            ["for", "kabkot-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [
                                "id",
                                "kabkot-autocomplete",
                                "type",
                                "text",
                                "formControlName",
                                "id_kabkot",
                                "placeholder",
                                "Kab/kot",
                                "maxlength",
                                "40",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["kabkotInstance", "ngbTypeahead"],
                            ["for", "camat-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [
                                "id",
                                "camat-autocomplete",
                                "type",
                                "text",
                                "formControlName",
                                "id_camat",
                                "placeholder",
                                "Kecamatan",
                                "maxlength",
                                "40",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["camatInstance", "ngbTypeahead"],
                            ["for", "lurah-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [
                                "id",
                                "lurah-autocomplete",
                                "type",
                                "text",
                                "formControlName",
                                "id_lurah",
                                "placeholder",
                                "Kelurahan / Desa",
                                "maxlength",
                                "40",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["lurahInstance", "ngbTypeahead"],
                            ["for", "komponenkel", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            ["formControlName", "komponenkel", "required", "", 1, "form-control", "select2"],
                            ["value", "SSH"],
                            ["value", "SBU"],
                            ["value", "HSPK"],
                            ["value", "ASB"],
                            ["for", "komponen-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            ["id", "komponen", "formControlName", "komponen", "type", "text", "placeholder", "Komponen", 1, "form-control"],
                            ["class", "btn btn-icon btn-light-primary btn-lg", "ngbTooltip", "Pilih Komponen", 3, "click", 4, "ngIf"],
                            ["ngbTooltip", "Pilih Komponen", 1, "btn", "btn-icon", "btn-light-primary", "btn-lg", 3, "click"],
                            ["for", "tkdn_komponen", 1, "col-lg-4", "col-form-label", "fw-bold", "fs-6"],
                            ["id", "tkdn_komponen", "formControlName", "tkdn_komponen", "type", "text", "placeholder", "TKDN", 1, "form-control"],
                            ["for", "spesifikasi_komponen", 1, "col-lg-4", "col-form-label", "fw-bold", "fs-6"],
                            ["id", "spesifikasi_komponen", "formControlName", "spesifikasi_komponen", "type", "text", "placeholder", "Spesifikasi", 1, "form-control"],
                            ["for", "satuan", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            ["formControlName", "satuan", "id", "satuan", "type", "text", "placeholder", "Satuan", 1, "form-control"],
                            ["for", "harga_satuan", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [
                                "formControlName",
                                "harga_satuan",
                                "id",
                                "harga_satuan",
                                "type",
                                "text",
                                "placeholder",
                                "Harga Satuan",
                                "maxlength",
                                "26",
                                "mask",
                                "separator.2",
                                "thousandSeparator",
                                ",",
                                "prefix",
                                "Rp ",
                                1,
                                "form-control",
                                3,
                                "allowNegativeNumbers",
                                "ngModelChange",
                            ],
                            ["for", "bidang-urusan-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [1, "col"],
                            ["id", "keterangan", "formControlName", "keterangan", "name", "keterangan", 1, "form-select"],
                            ["for", "pajak", 1, "col-lg-4", "col-form-label", "fw-bold", "fs-6"],
                            ["id", "test", 1, "col-lg-8", "fv-row", "pt-4"],
                            [1, "form-check", "form-switch", "form-switch-lg"],
                            ["formControlName", "pajak", "type", "checkbox", "id", "flexSwitchCheckDefault", 1, "form-check-input", 3, "ngModelChange"],
                            ["for", "koefisien", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [1, "row", "mb-1"],
                            [1, "col-lg-6", "mb-3"],
                            ["formControlName", "vol_1", "id", "vol_1", "type", "number", "min", "0", "placeholder", "Volume 1", "maxlength", "20", 1, "form-control", 3, "ngModelChange"],
                            [1, "col-lg-6", "mb-5", "mb-lg-3"],
                            [
                                "id",
                                "sat_1",
                                "type",
                                "text",
                                "formControlName",
                                "sat_1",
                                "placeholder",
                                "Satuan 1",
                                "maxlength",
                                "40",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["satuanInstance", "ngbTypeahead"],
                            ["formControlName", "vol_2", "id", "vol_2", "type", "number", "min", "0", "placeholder", "Volume 2", "maxlength", "20", 1, "form-control", 3, "ngModelChange"],
                            [
                                "id",
                                "sat_2",
                                "type",
                                "text",
                                "formControlName",
                                "sat_2",
                                "placeholder",
                                "Satuan 2",
                                "maxlength",
                                "40",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["satuanInstance2", "ngbTypeahead"],
                            ["formControlName", "vol_3", "id", "vol_3", "type", "number", "min", "0", "placeholder", "Volume 3", "maxlength", "20", 1, "form-control", 3, "ngModelChange"],
                            [
                                "id",
                                "sat_3",
                                "type",
                                "text",
                                "formControlName",
                                "sat_3",
                                "placeholder",
                                "Satuan 3",
                                "maxlength",
                                "40",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["satuanInstance3", "ngbTypeahead"],
                            ["formControlName", "vol_4", "id", "vol_4", "type", "number", "min", "0", "placeholder", "Volume 4", "maxlength", "20", 1, "form-control", 3, "ngModelChange"],
                            [
                                "id",
                                "sat_4",
                                "type",
                                "text",
                                "formControlName",
                                "sat_4",
                                "placeholder",
                                "Satuan 4",
                                "maxlength",
                                "40",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["satuanInstance4", "ngbTypeahead"],
                            ["formControlName", "volume", "id", "volume", "type", "text", "placeholder", "Total Volume", "maxlength", "20", 1, "form-control"],
                            ["formControlName", "koefisien", "type", "text", "placeholder", "Koefisien (Keterangan Jumlah)", "maxlength", "255", 1, "form-control"],
                            ["for", "total_harga", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [
                                "formControlName",
                                "total_harga",
                                "id",
                                "total_harga",
                                "type",
                                "text",
                                "placeholder",
                                "Total Belanja",
                                "maxlength",
                                "26",
                                "mask",
                                "separator.2",
                                "thousandSeparator",
                                ",",
                                "prefix",
                                "Rp ",
                                1,
                                "form-control",
                                3,
                                "allowNegativeNumbers",
                            ],
                            ["class", "form-text text-danger error-description", 4, "ngIf"],
                            ["class", "form-text text-info", 4, "ngIf"],
                            [1, "form-text", "text-danger", "error-description"],
                            [1, "form-text", "text-info"],
                            ["for", "typeahead-bidang-urusan", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [
                                "id",
                                "typeahead-bidang-urusan",
                                "type",
                                "text",
                                "maxlength",
                                "255",
                                "required",
                                "",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngModelOptions",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "disabled",
                                "placeholder",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["bidangUrusanInstance", "ngbTypeahead"],
                            ["type", "submit", 1, "btn", "btn-success", 3, "disabled"],
                            [4, "ngIf"],
                            ["clas", "indicator-progress"],
                            [1, "spinner-border", "spinner-border-sm", "align-middle", "ms-2"],
                        ],
                        template: function (t, e) {
                            1 & t &&
                                (a.TgZ(0, "div", 0)(1, "h3", 1),
                                a._uU(2),
                                a.qZA(),
                                a.TgZ(3, "button", 2),
                                a.NdJ("click", function () {
                                    return e.activeModal.dismiss("Cross click");
                                }),
                                a.qZA()(),
                                a.TgZ(4, "div", 3),
                                a.YNc(5, hi, 2, 0, "div", 4),
                                a.YNc(6, vs, 2, 1, "div", 5),
                                a.qZA()),
                                2 & t &&
                                    (a.xp6(2),
                                    a.Oqu(e.pageTitle),
                                    a.xp6(3),
                                    a.Q6J(
                                        "ngIf",
                                        "edit" === e.mode &&
                                            (e.rincianBelanjaIsLoading ||
                                                e.akunIsLoading ||
                                                e.komponenIsLoading ||
                                                e.satuanIsLoading ||
                                                e.keteranganIsLoading ||
                                                e.paketBelanjaIsLoading ||
                                                e.sumberDanaIsLoading ||
                                                e.penerimaBantuanIsLoading ||
                                                e.setupUnitIsLoading ||
                                                e.subGiatIsLoading)
                                    ),
                                    a.xp6(1),
                                    a.Q6J(
                                        "ngIf",
                                        !(
                                            "add" !== e.mode &&
                                            (e.rincianBelanjaIsLoading ||
                                                e.akunIsLoading ||
                                                e.komponenIsLoading ||
                                                e.satuanIsLoading ||
                                                e.keteranganIsLoading ||
                                                e.paketBelanjaIsLoading ||
                                                e.sumberDanaIsLoading ||
                                                e.penerimaBantuanIsLoading ||
                                                e.setupUnitIsLoading ||
                                                e.subGiatIsLoading)
                                        )
                                    ));
                        },
                        directives: [j.O5, p._Y, p.JL, p.sg, p.EJ, p.JJ, p.u, p.YN, p.Kr, p.Fj, aa.dR, p.nD, j.mk, aa._L, j.sg, Ma.d$, p.Q7, ot.hx, p.Wl, p.wV, p.qQ, p.On],
                        styles: [
                            ".form-check-input[_ngcontent-%COMP%]{clear:left}.form-switch.form-switch-sm[_ngcontent-%COMP%]{margin-bottom:.5rem}.form-switch.form-switch-sm[_ngcontent-%COMP%]   .form-check-input[_ngcontent-%COMP%]{height:1rem;width:1.75rem;border-radius:2rem}.form-switch.form-switch-md[_ngcontent-%COMP%]{margin-bottom:1rem}.form-switch.form-switch-md[_ngcontent-%COMP%]   .form-check-input[_ngcontent-%COMP%]{height:1.5rem;width:2.75rem;border-radius:3rem}.form-switch.form-switch-lg[_ngcontent-%COMP%]{margin-bottom:1.5rem}.form-switch.form-switch-lg[_ngcontent-%COMP%]   .form-check-input[_ngcontent-%COMP%]{height:2rem;width:3.75rem;border-radius:4rem}.form-switch.form-switch-xl[_ngcontent-%COMP%]{margin-bottom:2rem}.form-switch.form-switch-xl[_ngcontent-%COMP%]   .form-check-input[_ngcontent-%COMP%]{height:2.5rem;width:4.75rem;border-radius:5rem}",
                        ],
                    })),
                    i
                );
            })();
            class he {}
            class ht {}
            var ge = D(27847),
                me = D(5151),
                be = D(11099),
                vt = D(24148),
                kt = D(57889);
            let ve = (() => {
                    class i {
                        constructor(t) {
                            (this.http = t), (this.API_URL = `${Ka.N.apiUrlRenja}`);
                        }
                        list(t) {
                            return this.http.post(this.API_URL + "/label_bl/list", t);
                        }
                        add(t) {
                            return this.http.post(this.API_URL + "/label_bl/add", t);
                        }
                        view(t, e) {
                            return this.http.post(this.API_URL + `/label_bl/view/${t}`, e);
                        }
                        update(t) {
                            return this.http.post(this.API_URL + "/label_bl/update", t);
                        }
                        getByIdSubBl(t) {
                            return this.http.post(this.API_URL + "/label_bl/get_by_id_sub_bl", t);
                        }
                        simpanLabelPusat(t) {
                            return this.http.post(this.API_URL + "/label_bl/simpandata", t);
                        }
                    }
                    return (
                        (i.ɵfac = function (t) {
                            return new (t || i)(a.LFG(Pa.eN));
                        }),
                        (i.ɵprov = a.Yz7({ token: i, factory: i.ɵfac, providedIn: "root" })),
                        i
                    );
                })(),
                ft = (() => {
                    class i {
                        constructor(t) {
                            (this.http = t), (this.API_URL = `${Ka.N.apiUrlRenja}`);
                        }
                        list(t) {
                            return this.http.post(this.API_URL + "/tag_bl/list", t);
                        }
                        add(t) {
                            return this.http.post(this.API_URL + "/tag_bl/add", t);
                        }
                        view(t, e) {
                            return this.http.post(this.API_URL + `/tag_bl/view/${t}`, e);
                        }
                        update(t) {
                            return this.http.post(this.API_URL + "/tag_bl/update", t);
                        }
                        getByIdSubBl(t) {
                            return this.http.post(this.API_URL + "/tag_bl/get_by_id_sub_bl", t);
                        }
                    }
                    return (
                        (i.ɵfac = function (t) {
                            return new (t || i)(a.LFG(Pa.eN));
                        }),
                        (i.ɵprov = a.Yz7({ token: i, factory: i.ɵfac, providedIn: "root" })),
                        i
                    );
                })(),
                ke = (() => {
                    class i {
                        constructor(t) {
                            (this.http = t), (this.API_URL = `${Ka.N.apiUrlRenja}`);
                        }
                        list(t) {
                            return this.http.post(this.API_URL + "/detil_lokasi_bl/list", t);
                        }
                        add(t) {
                            return this.http.post(this.API_URL + "/detil_lokasi_bl/add", t);
                        }
                        view(t, e) {
                            return this.http.post(this.API_URL + `/detil_lokasi_bl/view/${t}`, e);
                        }
                        update(t) {
                            return this.http.post(this.API_URL + "/detil_lokasi_bl/update", t);
                        }
                        getByIdSubBl(t) {
                            return this.http.post(this.API_URL + "/detil_lokasi_bl/get_by_id_sub_bl", t);
                        }
                    }
                    return (
                        (i.ɵfac = function (t) {
                            return new (t || i)(a.LFG(Pa.eN));
                        }),
                        (i.ɵprov = a.Yz7({ token: i, factory: i.ɵfac, providedIn: "root" })),
                        i
                    );
                })();
            var fe = D(91049),
                Se = D(11335);
            let je = (() => {
                class i {
                    constructor(t) {
                        (this.http = t), (this.API_URL = `${Ka.N.apiUrlRenja}`);
                    }
                    list(t) {
                        return this.http.post(this.API_URL + "/output_bl/list", t);
                    }
                    add(t) {
                        return this.http.post(this.API_URL + "/output_bl/add", t);
                    }
                    view(t, e) {
                        return this.http.post(this.API_URL + `/output_bl/view/${t}`, e);
                    }
                    update(t) {
                        return this.http.post(this.API_URL + "/output_bl/update", t);
                    }
                    getByIdSubBl(t) {
                        return this.http.post(this.API_URL + "/output_bl/get_by_id_sub_bl", t);
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.LFG(Pa.eN));
                    }),
                    (i.ɵprov = a.Yz7({ token: i, factory: i.ɵfac, providedIn: "root" })),
                    i
                );
            })();
            var za = D(77562),
                Te = D(47525);
            const ks = ["labelGiatInstance"];
            function fs(i, d) {
                1 & i && a._UZ(0, "div", 8);
            }
            function Ss(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 9),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().onRemoveTagBelanja();
                        }),
                        a._uU(1, " X "),
                        a.qZA();
                }
                if (2 & i) {
                    const t = a.oxw();
                    a.Q6J("disabled", t.isDeleting || t.labelGiatViewIsLoading);
                }
            }
            const js = function () {
                return { standalone: !0 };
            };
            let Ts = (() => {
                class i {
                    constructor(t, e, n) {
                        (this.konfigurasiService = t),
                            (this.labelGiatService = e),
                            (this.tagBelanjaService = n),
                            (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))),
                            (this.removeTagBelanja = new a.vpe()),
                            (this.labelGiatChanged = new a.vpe()),
                            (this.labelGiatFocus$ = new z.x()),
                            (this.labelGiatClick$ = new z.x()),
                            (this.labelGiatSearchIsLoading = !1),
                            (this.labelGiatFormatter = (s) => s.nama_label),
                            (this.isDeleting = !1),
                            (this.labelGiatViewIsLoading = !1),
                            (this.labelGiatSearch = (s) => {
                                const o = s.pipe((0, ha.b)(500)),
                                    l = this.labelGiatClick$.pipe(
                                        (0, ga.h)(() => {
                                            var r;
                                            return !(null === (r = this.labelGiatInstance) || void 0 === r ? void 0 : r.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(o, this.labelGiatFocus$, l).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((r) => {
                                        var u;
                                        const k = new FormData();
                                        return (
                                            k.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                            k.append("id_daerah", String((null === (u = this.konfigurasiService) || void 0 === u ? void 0 : u.getIdDaerah()) || 0)),
                                            k.append("search[value]", r),
                                            (this.labelGiatSearchIsLoading = !0),
                                            this.labelGiatService.find(k).pipe(
                                                (0, ka.U)((m) => (null == m ? void 0 : m.data)),
                                                (0, fa.b)(() => (this.labelGiatSearchIsLoading = !1)),
                                                (0, Sa.K)((m) => ((this.labelGiatSearchIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            });
                    }
                    ngOnInit() {
                        this.loadLabelGiat();
                    }
                    onRemoveTagBelanja() {
                        var t, e;
                        if (this.tagBelanja.id_tag_bl) {
                            const n = new FormData();
                            n.append("id_tag_bl", String(this.tagBelanja.id_tag_bl)),
                                n.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                                n.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                n.append("id_unit", String(0)),
                                n.append("id_label_giat", String(this.tagBelanja.id_label_giat)),
                                n.append("id_daerah_log", null === (t = this.userSession) || void 0 === t ? void 0 : t.daerah_id),
                                n.append("id_user_log", null === (e = this.userSession) || void 0 === e ? void 0 : e.user_id),
                                n.append("id_sub_bl", "0"),
                                (this.isDeleting = !0),
                                this.tagBelanjaService.update(n).subscribe({
                                    next: () => {
                                        (this.isDeleting = !1), this.removeTagBelanja.emit();
                                    },
                                    error: (s) => {
                                        this.isDeleting = !1;
                                    },
                                });
                        } else this.removeTagBelanja.emit();
                    }
                    onLabelGiatChange() {
                        this.labelGiatChanged.emit(this.labelGiatModel);
                    }
                    loadLabelGiat() {
                        var t, e;
                        (null === (t = this.tagBelanja) || void 0 === t ? void 0 : t.id_label_giat) &&
                            ((this.labelGiatViewIsLoading = !0),
                            this.labelGiatService.view(String(null === (e = this.tagBelanja) || void 0 === e ? void 0 : e.id_label_giat), String(this.konfigurasiService.getTahun()), String(this.konfigurasiService.getIdDaerah())).subscribe({
                                next: (n) => {
                                    (this.labelGiatViewIsLoading = !1), (this.labelGiatModel = null == n ? void 0 : n.data[0]);
                                },
                                error: (n) => {
                                    this.labelGiatViewIsLoading = !1;
                                },
                            }));
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(Ra.W), a.Y36(vt.P), a.Y36(ft));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-tag-autocomplete"]],
                        viewQuery: function (t, e) {
                            if ((1 & t && a.Gf(ks, 7), 2 & t)) {
                                let n;
                                a.iGM((n = a.CRH())) && (e.labelGiatInstance = n.first);
                            }
                        },
                        inputs: { mode: "mode", tagBelanja: "tagBelanja" },
                        outputs: { removeTagBelanja: "removeTagBelanja", labelGiatChanged: "labelGiatChanged" },
                        decls: 8,
                        vars: 10,
                        consts: [
                            [1, "row", "mb-1"],
                            [1, "col-10"],
                            [1, "position-relative", "is-loading"],
                            [
                                "id",
                                "bidang-urusan-autocomplete",
                                "type",
                                "text",
                                "maxlength",
                                "255",
                                "required",
                                "",
                                "placeholder",
                                "Label Kegiatan",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngModelOptions",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "disabled",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["labelGiatInstance", "ngbTypeahead"],
                            ["class", "spinner-border spinner-border-sm mt-1", 4, "ngIf"],
                            [1, "col-2"],
                            ["class", "btn btn-sm btn-danger", "type", "button", 3, "disabled", "click", 4, "ngIf"],
                            [1, "spinner-border", "spinner-border-sm", "mt-1"],
                            ["type", "button", 1, "btn", "btn-sm", "btn-danger", 3, "disabled", "click"],
                        ],
                        template: function (t, e) {
                            1 & t &&
                                (a.TgZ(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "input", 3, 4),
                                a.NdJ("ngModelChange", function (s) {
                                    return (e.labelGiatModel = s);
                                })("focus", function (s) {
                                    return e.labelGiatFocus$.next(s.target.value);
                                })("click", function (s) {
                                    return e.labelGiatClick$.next(s.target.value);
                                })("ngModelChange", function () {
                                    return e.onLabelGiatChange();
                                }),
                                a.qZA(),
                                a.YNc(5, fs, 1, 0, "div", 5),
                                a.qZA()(),
                                a.TgZ(6, "div", 6),
                                a.YNc(7, Ss, 2, 1, "button", 7),
                                a.qZA()()),
                                2 & t &&
                                    (a.xp6(3),
                                    a.Q6J("ngModel", e.labelGiatModel)("ngModelOptions", a.DdM(9, js))("ngbTypeahead", e.labelGiatSearch)("inputFormatter", e.labelGiatFormatter)("resultFormatter", e.labelGiatFormatter)("editable", !1)(
                                        "disabled",
                                        e.isDeleting || e.labelGiatViewIsLoading || "view" == e.mode
                                    ),
                                    a.xp6(2),
                                    a.Q6J("ngIf", e.labelGiatSearchIsLoading),
                                    a.xp6(2),
                                    a.Q6J("ngIf", "view" != e.mode));
                        },
                        directives: [p.Fj, aa.dR, p.nD, p.Q7, p.JJ, p.On, j.O5],
                        styles: [""],
                    })),
                    i
                );
            })();
            const Is = ["sumberDanaInstance"];
            function Bs(i, d) {
                1 & i && a._UZ(0, "div", 10);
            }
            function xs(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 11),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().onRemoveSumberDana();
                        }),
                        a._uU(1, " X "),
                        a.qZA();
                }
                if (2 & i) {
                    const t = a.oxw();
                    a.Q6J("disabled", t.isDeleting || t.sumberDanaViewIsLoading);
                }
            }
            const Cs = function () {
                    return { standalone: !0 };
                },
                ys = function (i) {
                    return { "is-invalid": i };
                };
            let Ls = (() => {
                class i {
                    constructor(t, e, n, s, o) {
                        (this.konfigurasiService = t),
                            (this.sumberDanaService = e),
                            (this.renjaDanaService = n),
                            (this.toastr = s),
                            (this.renjaRincianService = o),
                            (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))),
                            (this.removeDanaBelanja = new a.vpe()),
                            (this.danaBelanjaChanged = new a.vpe()),
                            (this.sumberDanaValid = new a.vpe()),
                            (this.sumberDanaFocus$ = new z.x()),
                            (this.sumberDanaClick$ = new z.x()),
                            (this.sumberDanaSearchIsLoading = !1),
                            (this.sumberDanaFormatter = (l) => `${l.kode_dana} ${l.nama_dana}`),
                            (this.isDeleting = !1),
                            (this.sumberDanaViewIsLoading = !1),
                            (this.danaBelanjaViewIsLoading = !1),
                            (this.initialAnggaranValue = 0),
                            (this.tempPagu = 0),
                            (this.sumberDanaSearch = (l) => {
                                const _ = l.pipe((0, ha.b)(500)),
                                    r = this.sumberDanaClick$.pipe(
                                        (0, ga.h)(() => {
                                            var k;
                                            return !(null === (k = this.sumberDanaInstance) || void 0 === k ? void 0 : k.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(_, this.sumberDanaFocus$, r).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((k) => {
                                        var m;
                                        const v = new FormData();
                                        return (
                                            v.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                            v.append("id_daerah", String((null === (m = this.konfigurasiService) || void 0 === m ? void 0 : m.getIdDaerah()) || 0)),
                                            v.append("search[value]", k),
                                            (this.sumberDanaSearchIsLoading = !0),
                                            this.sumberDanaService.find(v).pipe(
                                                (0, ka.U)((g) => (null == g ? void 0 : g.data)),
                                                (0, fa.b)(() => (this.sumberDanaSearchIsLoading = !1)),
                                                (0, Sa.K)((g) => ((this.sumberDanaSearchIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            });
                    }
                    ngOnInit() {
                        this.loadSumberDana();
                    }
                    checkRincian() {
                        var t, e;
                        if (this.danaBelanja.id_dana_sub_bl) {
                            const n = new FormData();
                            n.append("id_dana_sub_bl", String(this.danaBelanja.id_dana_sub_bl)),
                                n.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                                n.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                n.append("id_unit", String(0)),
                                n.append("id_dana", String(this.danaBelanja.id_dana)),
                                n.append("id_daerah_log", null === (t = this.userSession) || void 0 === t ? void 0 : t.daerah_id),
                                n.append("id_user_log", null === (e = this.userSession) || void 0 === e ? void 0 : e.user_id),
                                n.append("id_sub_bl", String(this.danaBelanja.id_sub_bl)),
                                this.renjaRincianService.getDataBySumberDana(n).subscribe({
                                    next: (s) => {
                                        this.tempPagu = s.data;
                                    },
                                    error: (s) => {},
                                });
                        }
                    }
                    onSumberDanaChanged() {
                        var t, e, n;
                        if (this.tempPagu <= this.danaBelanja.pagu_dana && this.tempPagu >= 0)
                            (this.danaBelanja.id_dana = Number(null === (t = this.sumberDanaModel) || void 0 === t ? void 0 : t.id_dana)),
                                (this.danaBelanja.nama_dana = String(null === (e = this.sumberDanaModel) || void 0 === e ? void 0 : e.nama_dana)),
                                (this.danaBelanja.kode_dana = String(null === (n = this.sumberDanaModel) || void 0 === n ? void 0 : n.kode_dana)),
                                this.danaBelanjaChanged.emit(this.danaBelanja),
                                this.sumberDanaValid.emit(!0);
                        else {
                            this.sumberDanaValid.emit(!1);
                            let s = new j.H9("id-ID").transform(String(this.tempPagu >= 0 ? this.tempPagu : 0), "", "", "1.2-2");
                            this.tempPagu > 0 && this.toastr.error("Pagu Sumber Dana kurang Dari Total Pagu di Rincian. (Rp. " + s + ")", "Error!");
                        }
                    }
                    onRemoveSumberDana() {
                        var t, e;
                        if (this.danaBelanja.id_dana_sub_bl) {
                            const n = new FormData();
                            n.append("id_dana_sub_bl", String(this.danaBelanja.id_dana_sub_bl)),
                                n.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                                n.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                n.append("id_unit", String(0)),
                                n.append("id_dana", String(this.danaBelanja.id_dana)),
                                n.append("id_daerah_log", null === (t = this.userSession) || void 0 === t ? void 0 : t.daerah_id),
                                n.append("id_user_log", null === (e = this.userSession) || void 0 === e ? void 0 : e.user_id),
                                n.append("id_sub_bl", String(this.danaBelanja.id_sub_bl)),
                                (this.isDeleting = !0),
                                this.renjaDanaService.delete(n).subscribe({
                                    next: (s) => {
                                        this.removeDanaBelanja.emit(), this.toastr.success("Data berhasil dihapus", "Sukses");
                                    },
                                    error: (s) => {
                                        this.toastr.error(`${s.error.message}`, "Error!");
                                    },
                                });
                        } else this.removeDanaBelanja.emit();
                    }
                    loadSumberDana() {
                        var t, e;
                        (null === (t = this.danaBelanja) || void 0 === t ? void 0 : t.id_dana) &&
                            ((this.sumberDanaViewIsLoading = !0),
                            this.sumberDanaService.view(String(null === (e = this.danaBelanja) || void 0 === e ? void 0 : e.id_dana), String(this.konfigurasiService.getTahun())).subscribe({
                                next: (n) => {
                                    (this.sumberDanaViewIsLoading = !1), (this.sumberDanaModel = null == n ? void 0 : n.data[0]);
                                },
                                error: (n) => {
                                    this.sumberDanaViewIsLoading = !1;
                                },
                            }));
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(Ra.W), a.Y36(kt.W), a.Y36(at), a.Y36(Na._W), a.Y36($a));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-dana-autocomplete"]],
                        viewQuery: function (t, e) {
                            if ((1 & t && a.Gf(Is, 7), 2 & t)) {
                                let n;
                                a.iGM((n = a.CRH())) && (e.sumberDanaInstance = n.first);
                            }
                        },
                        inputs: { mode: "mode", danaBelanja: "danaBelanja" },
                        outputs: { removeDanaBelanja: "removeDanaBelanja", danaBelanjaChanged: "danaBelanjaChanged", sumberDanaValid: "sumberDanaValid" },
                        decls: 10,
                        vars: 17,
                        consts: [
                            [1, "row", "mb-1"],
                            [1, "col-6"],
                            [1, "position-relative", "is-loading"],
                            [
                                "id",
                                "bidang-urusan-autocomplete",
                                "type",
                                "text",
                                "maxlength",
                                "255",
                                "required",
                                "",
                                "placeholder",
                                "Sumber Dana",
                                "tooltipClass",
                                "custom-tooltip-class",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngModelOptions",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "disabled",
                                "ngClass",
                                "ngbTooltip",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["sumberDanaInstance", "ngbTypeahead"],
                            ["class", "spinner-border spinner-border-sm mt-1", 4, "ngIf"],
                            [1, "col-4"],
                            [
                                "id",
                                "pagu",
                                "type",
                                "text",
                                "placeholder",
                                "Pagu",
                                "maxlength",
                                "26",
                                "mask",
                                "separator.2",
                                "thousandSeparator",
                                ",",
                                "prefix",
                                "Rp ",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "allowNegativeNumbers",
                                "disabled",
                                "ngModelChange",
                                "input",
                                "click",
                            ],
                            [1, "col-2"],
                            ["class", "btn btn-sm btn-danger", "type", "button", 3, "disabled", "click", 4, "ngIf"],
                            [1, "spinner-border", "spinner-border-sm", "mt-1"],
                            ["type", "button", 1, "btn", "btn-sm", "btn-danger", 3, "disabled", "click"],
                        ],
                        template: function (t, e) {
                            1 & t &&
                                (a.TgZ(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "input", 3, 4),
                                a.NdJ("ngModelChange", function (s) {
                                    return (e.sumberDanaModel = s);
                                })("focus", function (s) {
                                    return e.sumberDanaFocus$.next(s.target.value);
                                })("click", function (s) {
                                    return e.sumberDanaClick$.next(s.target.value);
                                })("ngModelChange", function () {
                                    return e.onSumberDanaChanged();
                                }),
                                a.qZA(),
                                a.YNc(5, Bs, 1, 0, "div", 5),
                                a.qZA()(),
                                a.TgZ(6, "div", 6)(7, "input", 7),
                                a.NdJ("ngModelChange", function (s) {
                                    return (e.danaBelanja.pagu_dana = s);
                                })("input", function () {
                                    return e.onSumberDanaChanged();
                                })("click", function () {
                                    return e.checkRincian();
                                }),
                                a.qZA()(),
                                a.TgZ(8, "div", 8),
                                a.YNc(9, xs, 2, 1, "button", 9),
                                a.qZA()()),
                                2 & t &&
                                    (a.xp6(3),
                                    a.Q6J("ngModel", e.sumberDanaModel)("ngModelOptions", a.DdM(14, Cs))("ngbTypeahead", e.sumberDanaSearch)("inputFormatter", e.sumberDanaFormatter)("resultFormatter", e.sumberDanaFormatter)("editable", !1)(
                                        "disabled",
                                        e.isDeleting || e.sumberDanaViewIsLoading || "view" == e.mode
                                    )("ngClass", a.VKq(15, ys, 1 == e.danaBelanja.is_locked))("ngbTooltip", 1 == e.danaBelanja.is_locked ? "Sumber Dana Belum di Mutakhirkan" : ""),
                                    a.xp6(2),
                                    a.Q6J("ngIf", e.sumberDanaSearchIsLoading),
                                    a.xp6(2),
                                    a.Q6J("ngModel", e.danaBelanja.pagu_dana)("allowNegativeNumbers", !1)("disabled", e.isDeleting || e.sumberDanaViewIsLoading || "view" == e.mode),
                                    a.xp6(2),
                                    a.Q6J("ngIf", "view" != e.mode));
                        },
                        directives: [p.Fj, aa.dR, p.nD, p.Q7, p.JJ, p.On, j.mk, aa._L, j.O5, ot.hx],
                        styles: [".custom-tooltip-class[_ngcontent-%COMP%]{width:400px;background-color:red!important}"],
                    })),
                    i
                );
            })();
            const ws = ["skpdInstance"],
                Ds = ["bidangUrusanInstance"],
                Rs = ["labelPusatInstance"],
                As = ["labelProvinsiInstance"],
                Fs = ["labelKokabInstance"],
                Us = ["subGiatInstance"];
            function Zs(i, d) {
                1 & i && (a.TgZ(0, "div", 6), a._UZ(1, "div", 7), a.qZA());
            }
            function Ps(i, d) {
                1 & i && a._UZ(0, "div", 75);
            }
            function Ns(i, d) {
                1 & i && a._UZ(0, "div", 75);
            }
            const et = function () {
                return { standalone: !0 };
            };
            function Ms(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 20)(1, "label", 76),
                        a._uU(2, "Prioritas Pembangunan Pusat"),
                        a.qZA(),
                        a.TgZ(3, "div", 14)(4, "div", 15)(5, "input", 77, 78),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(3).labelPusatModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(3).labelPusatFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(3).labelPusatClick$.next(n.target.value);
                        }),
                        a.qZA(),
                        a.YNc(7, Ns, 1, 0, "div", 18),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(5),
                        a.Q6J("ngModel", t.labelPusatModel)("ngModelOptions", a.DdM(8, et))("ngbTypeahead", t.labelPusatSearch)("inputFormatter", t.labelPusatFormatter)("resultFormatter", t.labelPusatFormatter)("editable", !1)(
                            "disabled",
                            t.isSaving || "view" == t.mode
                        ),
                        a.xp6(2),
                        a.Q6J("ngIf", t.labelPusatSearchIsLoading);
                }
            }
            function Ks(i, d) {
                1 & i && a._UZ(0, "div", 75);
            }
            function Js(i, d) {
                1 & i && a._UZ(0, "div", 75);
            }
            function qs(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 20)(1, "label", 79),
                        a._uU(2, "Prioritas Pembangunan Kota/Kabupaten"),
                        a.qZA(),
                        a.TgZ(3, "div", 14)(4, "div", 15)(5, "input", 80, 81),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(3).labelKokabModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(3).labelKokabFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(3).labelKokabClick$.next(n.target.value);
                        }),
                        a.qZA(),
                        a.YNc(7, Js, 1, 0, "div", 18),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(5),
                        a.Q6J("ngModel", t.labelKokabModel)("ngModelOptions", a.DdM(8, et))("ngbTypeahead", t.labelKokabSearch)("inputFormatter", t.labelKokabFormatter)("resultFormatter", t.labelKokabFormatter)("editable", !1)(
                            "disabled",
                            t.isSaving || "view" == t.mode
                        ),
                        a.xp6(2),
                        a.Q6J("ngIf", t.labelKokabSearchIsLoading);
                }
            }
            function Ys(i, d) {
                1 & i && a._UZ(0, "div", 75);
            }
            function Ws(i, d) {
                1 & i && a._UZ(0, "div", 75);
            }
            function Gs(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 12)(1, "label", 82),
                        a._uU(2, "Bidang Urusan"),
                        a.qZA(),
                        a.TgZ(3, "div", 14)(4, "div", 15)(5, "input", 83, 84),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(3).bidangUrusanModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(3).bidangUrusanFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(3).bidangUrusanClick$.next(n.target.value);
                        }),
                        a.qZA(),
                        a.YNc(7, Ws, 1, 0, "div", 18),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(5),
                        a.s9C("placeholder", t.bidangUrusanModel ? "Bidang Urusan..." : "Pilih Sub Unit terlebih dahulu"),
                        a.Q6J("ngModel", t.bidangUrusanModel)("ngModelOptions", a.DdM(9, et))("ngbTypeahead", t.bidangUrusanSearch)("inputFormatter", t.bidangUrusanFormatter)("resultFormatter", t.bidangUrusanFormatter)("editable", !1)(
                            "disabled",
                            t.isSaving || "view" == t.mode
                        ),
                        a.xp6(2),
                        a.Q6J("ngIf", t.bidangUrusanSearchIsLoading);
                }
            }
            function Qs(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 85),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(3).addTagBelanja();
                        }),
                        a._uU(1, " + Tag Belanja "),
                        a.qZA();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.Q6J("disabled", t.tagBelanjaList.length >= 5);
                }
            }
            function Os(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div")(1, "app-renja-tag-autocomplete", 86),
                        a.NdJ("removeTagBelanja", function () {
                            const s = a.CHM(t).index;
                            return a.oxw(3).onRemoveTagBelanja(s);
                        })("labelGiatChanged", function (n) {
                            const o = a.CHM(t).index;
                            return a.oxw(3).onLabelGiatChanged(o, n);
                        }),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = d.index,
                        e = a.oxw(3);
                    a.xp6(1), a.Q6J("mode", e.mode)("tagBelanja", e.tagBelanjaList[t]);
                }
            }
            function Es(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 85),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(3).addDanaBelanja();
                        }),
                        a._uU(1, " + Sumber Dana "),
                        a.qZA();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.Q6J("disabled", t.danaBelanjaList.length >= 5);
                }
            }
            function Hs(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div")(1, "app-renja-dana-autocomplete", 87),
                        a.NdJ("removeDanaBelanja", function () {
                            const s = a.CHM(t).index;
                            return a.oxw(3).onRemoveDanaBelanja(s);
                        })("danaBelanjaChanged", function (n) {
                            const o = a.CHM(t).index;
                            return a.oxw(3).onDanaBelanjaChanged(o, n);
                        })("sumberDanaValid", function (n) {
                            return a.CHM(t), a.oxw(3).onSumberDanaValid(n);
                        }),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = d.index,
                        e = a.oxw(3);
                    a.xp6(1), a.Q6J("mode", e.mode)("danaBelanja", e.danaBelanjaList[t]);
                }
            }
            function $s(i, d) {
                if ((1 & i && (a.TgZ(0, "option", 88), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit,
                        e = a.oxw(3);
                    a.Q6J("value", t.id_lokasi)("selected", t.id_lokasi == (null == e.renjaSubBelanja ? null : e.renjaSubBelanja.id_lokasi)), a.xp6(1), a.hij(" ", t.nama_lokasi, " ");
                }
            }
            function zs(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 85),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(3).addLokasiKegiatan();
                        }),
                        a._uU(1, " + Lokasi Kegiatan "),
                        a.qZA();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.Q6J("disabled", t.lokasiKegiatanList.length >= 20);
                }
            }
            function Vs(i, d) {
                if ((1 & i && (a.TgZ(0, "option", 97), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.Q6J("value", t.id_daerah), a.xp6(1), a.hij(" ", t.nama_daerah, " ");
                }
            }
            function Xs(i, d) {
                if ((1 & i && (a.TgZ(0, "option", 97), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.Q6J("value", t.id_camat), a.xp6(1), a.hij(" ", t.camat_teks, " ");
                }
            }
            function ao(i, d) {
                if ((1 & i && (a.TgZ(0, "option", 97), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.Q6J("value", t.id_lurah), a.xp6(1), a.hij(" ", t.lurah_teks, " ");
                }
            }
            function to(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 98),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw().index;
                            return a.oxw(3).removeLokasiKegiatan(n);
                        }),
                        a._uU(1, " X "),
                        a.qZA();
                }
            }
            function eo(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div")(1, "div", 89)(2, "div", 90)(3, "select", 91),
                        a.NdJ("change", function (n) {
                            const o = a.CHM(t).index;
                            return a.oxw(3).onKotaKabupatenChange(n.target.value, o);
                        }),
                        a.TgZ(4, "option", 37),
                        a._uU(5, "Semua Kota/Kabupaten"),
                        a.qZA(),
                        a.YNc(6, Vs, 2, 2, "option", 92),
                        a.qZA()(),
                        a.TgZ(7, "div", 69)(8, "select", 93),
                        a.NdJ("change", function (n) {
                            const o = a.CHM(t).index;
                            return a.oxw(3).onKecamatanChange(n.target.value, o);
                        }),
                        a.TgZ(9, "option", 37),
                        a._uU(10, "Semua Kecamatan"),
                        a.qZA(),
                        a.YNc(11, Xs, 2, 2, "option", 92),
                        a.qZA()(),
                        a.TgZ(12, "div", 69)(13, "select", 94)(14, "option", 37),
                        a._uU(15, "Semua Kelurahan/Desa"),
                        a.qZA(),
                        a.YNc(16, ao, 2, 2, "option", 92),
                        a.qZA()(),
                        a.TgZ(17, "div", 95),
                        a.YNc(18, to, 2, 0, "button", 96),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = d.index,
                        e = a.oxw(3);
                    a.xp6(1),
                        a.Q6J("formGroupName", t),
                        a.xp6(2),
                        a.MGl("id", "kota-kabupaten-kegiatan-", t, ""),
                        a.Q6J("disabled", "view" == e.mode),
                        a.xp6(3),
                        a.Q6J("ngForOf", e.kotaKabupatenList),
                        a.xp6(2),
                        a.MGl("id", "kecamatan-kegiatan-", t, ""),
                        a.Q6J("disabled", "view" == e.mode),
                        a.xp6(3),
                        a.Q6J("ngForOf", e.kecamatanList[e.lokasiKegiatanList.at(t).value.id_kab_kota]),
                        a.xp6(2),
                        a.MGl("id", "kelurahan-desa-kegiatan-", t, ""),
                        a.Q6J("disabled", "view" == e.mode),
                        a.xp6(3),
                        a.Q6J("ngForOf", e.kelurahanDesaList[e.lokasiKegiatanList.at(t).value.id_camat]),
                        a.xp6(2),
                        a.Q6J("ngIf", "view" != e.mode);
                }
            }
            function no(i, d) {
                1 & i && (a.ynx(0), a._uU(1, "Simpan"), a.BQk());
            }
            function io(i, d) {
                1 & i && (a.ynx(0), a.TgZ(1, "span", 101), a._uU(2), a._UZ(3, "span", 102), a.qZA(), a.BQk()), 2 & i && (a.xp6(1), a.Udp("display", "block"), a.xp6(1), a.hij(" Menyimpan...", " ", " "));
            }
            function so(i, d) {
                if ((1 & i && (a.TgZ(0, "button", 99), a.YNc(1, no, 2, 0, "ng-container", 100), a.YNc(2, io, 4, 3, "ng-container", 100), a.qZA()), 2 & i)) {
                    const t = a.oxw(3);
                    a.Q6J("disabled", !t.skpdModel || !t.subGiatModel || t.subBelanjaForm.invalid || t.isSaving || !t.sumberDanaValid), a.xp6(1), a.Q6J("ngIf", !t.isSaving), a.xp6(1), a.Q6J("ngIf", t.isSaving);
                }
            }
            function oo(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "form", 10),
                        a.NdJ("submit", function () {
                            return a.CHM(t), a.oxw(2).onSubmit();
                        }),
                        a.TgZ(1, "div", 11)(2, "div", 12)(3, "label", 13),
                        a._uU(4, "SKPD atau Sub Unit"),
                        a.qZA(),
                        a.TgZ(5, "div", 14)(6, "div", 15)(7, "input", 16, 17),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(2).skpdModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(2).skpdFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(2).skpdClick$.next(n.target.value);
                        })("ngModelChange", function () {
                            return a.CHM(t), a.oxw(2).skpdChange();
                        }),
                        a.qZA(),
                        a.YNc(9, Ps, 1, 0, "div", 18),
                        a.qZA()()(),
                        a.YNc(10, Ms, 8, 9, "div", 19),
                        a.TgZ(11, "div", 20)(12, "label", 21),
                        a._uU(13, "Prioritas Pembangunan Provinsi"),
                        a.qZA(),
                        a.TgZ(14, "div", 14)(15, "div", 15)(16, "input", 22, 23),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(2).labelProvinsiModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(2).labelProvinsiFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(2).labelProvinsiClick$.next(n.target.value);
                        }),
                        a.qZA(),
                        a.YNc(18, Ks, 1, 0, "div", 18),
                        a.qZA()()(),
                        a.YNc(19, qs, 8, 9, "div", 19),
                        a.TgZ(20, "div", 12)(21, "label", 24),
                        a._uU(22, "Sub Kegiatan"),
                        a.qZA(),
                        a.TgZ(23, "div", 14)(24, "div", 15)(25, "input", 25, 26),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw(2).subGiatModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw(2).subGiatFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw(2).subGiatClick$.next(n.target.value);
                        })("ngModelChange", function () {
                            return a.CHM(t), a.oxw(2).onChangeSubGiat();
                        }),
                        a.qZA(),
                        a.YNc(27, Ys, 1, 0, "div", 18),
                        a.qZA()()(),
                        a.YNc(28, Gs, 8, 10, "div", 27),
                        a.TgZ(29, "div", 12)(30, "label", 28),
                        a._uU(31, "Label (Tag) Sub Kegiatan"),
                        a.qZA(),
                        a.TgZ(32, "div", 14)(33, "div")(34, "div", 29)(35, "div", 30),
                        a.YNc(36, Qs, 2, 1, "button", 31),
                        a.qZA()(),
                        a.YNc(37, Os, 2, 2, "div", 32),
                        a.qZA()()(),
                        a.TgZ(38, "div", 12)(39, "label", 33),
                        a._uU(40, "Sumber Dana"),
                        a.qZA(),
                        a.TgZ(41, "div", 14)(42, "div")(43, "div", 29)(44, "div", 30),
                        a.YNc(45, Es, 2, 1, "button", 31),
                        a.qZA()(),
                        a.YNc(46, Hs, 2, 2, "div", 32),
                        a.qZA()()(),
                        a.TgZ(47, "div", 20)(48, "label", 34),
                        a._uU(49, "Lokasi Pelaksanaan Kegiatan"),
                        a.qZA(),
                        a.TgZ(50, "div", 35)(51, "select", 36)(52, "option", 37),
                        a._uU(53, "Pilih Lokasi Pelaksanaan Kegiatan..."),
                        a.qZA(),
                        a.YNc(54, $s, 2, 3, "option", 38),
                        a.qZA()()(),
                        a.TgZ(55, "div", 12)(56, "label", 39),
                        a._uU(57, "Rincian Lokasi"),
                        a.qZA(),
                        a.TgZ(58, "div", 14)(59, "div", 40)(60, "div", 29)(61, "div", 30),
                        a.YNc(62, zs, 2, 1, "button", 31),
                        a.qZA()(),
                        a.YNc(63, eo, 19, 11, "div", 32),
                        a.qZA()()(),
                        a.TgZ(64, "div", 12)(65, "label", 41),
                        a._uU(66, "Waktu Pelaksanaan"),
                        a.qZA(),
                        a.TgZ(67, "div", 35)(68, "div", 42)(69, "div", 43)(70, "select", 44)(71, "option", 37),
                        a._uU(72, "Pilih Bulan..."),
                        a.qZA(),
                        a.TgZ(73, "option", 45),
                        a._uU(74, "Januari"),
                        a.qZA(),
                        a.TgZ(75, "option", 46),
                        a._uU(76, "Februari"),
                        a.qZA(),
                        a.TgZ(77, "option", 47),
                        a._uU(78, "Maret"),
                        a.qZA(),
                        a.TgZ(79, "option", 48),
                        a._uU(80, "April"),
                        a.qZA(),
                        a.TgZ(81, "option", 49),
                        a._uU(82, "Mei"),
                        a.qZA(),
                        a.TgZ(83, "option", 50),
                        a._uU(84, "Juni"),
                        a.qZA(),
                        a.TgZ(85, "option", 51),
                        a._uU(86, "Juli"),
                        a.qZA(),
                        a.TgZ(87, "option", 52),
                        a._uU(88, "Agustus"),
                        a.qZA(),
                        a.TgZ(89, "option", 53),
                        a._uU(90, "September"),
                        a.qZA(),
                        a.TgZ(91, "option", 54),
                        a._uU(92, "Oktober"),
                        a.qZA(),
                        a.TgZ(93, "option", 55),
                        a._uU(94, "November"),
                        a.qZA(),
                        a.TgZ(95, "option", 56),
                        a._uU(96, "Desember"),
                        a.qZA()()(),
                        a.TgZ(97, "div", 57)(98, "span", 58)(99, "strong"),
                        a._uU(100, "S/D"),
                        a.qZA()()(),
                        a.TgZ(101, "div", 43)(102, "select", 59)(103, "option", 37),
                        a._uU(104, "Pilih Bulan..."),
                        a.qZA(),
                        a.TgZ(105, "option", 45),
                        a._uU(106, "Januari"),
                        a.qZA(),
                        a.TgZ(107, "option", 46),
                        a._uU(108, "Februari"),
                        a.qZA(),
                        a.TgZ(109, "option", 47),
                        a._uU(110, "Maret"),
                        a.qZA(),
                        a.TgZ(111, "option", 48),
                        a._uU(112, "April"),
                        a.qZA(),
                        a.TgZ(113, "option", 49),
                        a._uU(114, "Mei"),
                        a.qZA(),
                        a.TgZ(115, "option", 50),
                        a._uU(116, "Juni"),
                        a.qZA(),
                        a.TgZ(117, "option", 51),
                        a._uU(118, "Juli"),
                        a.qZA(),
                        a.TgZ(119, "option", 52),
                        a._uU(120, "Agustus"),
                        a.qZA(),
                        a.TgZ(121, "option", 53),
                        a._uU(122, "September"),
                        a.qZA(),
                        a.TgZ(123, "option", 54),
                        a._uU(124, "Oktober"),
                        a.qZA(),
                        a.TgZ(125, "option", 55),
                        a._uU(126, "November"),
                        a.qZA(),
                        a.TgZ(127, "option", 56),
                        a._uU(128, "Desember"),
                        a.qZA()()()()()(),
                        a.TgZ(129, "div", 12)(130, "label", 60),
                        a._uU(131, "Anggaran Sub Kegiatan"),
                        a.qZA(),
                        a.TgZ(132, "div", 35),
                        a._UZ(133, "input", 61),
                        a.qZA()(),
                        a.TgZ(134, "div", 12)(135, "label", 62),
                        a._uU(136, "Anggaran N+1 Sub Kegiatan"),
                        a.qZA(),
                        a.TgZ(137, "div", 35),
                        a._UZ(138, "input", 63),
                        a.qZA()(),
                        a.TgZ(139, "div", 12)(140, "label", 64),
                        a._uU(141, "Anggaran N+2 Sub Kegiatan"),
                        a.qZA(),
                        a.TgZ(142, "div", 35),
                        a._UZ(143, "input", 65),
                        a.qZA()(),
                        a.TgZ(144, "div", 12)(145, "label", 66),
                        a._uU(146, "Indikator Keluaran Sub Kegiatan"),
                        a.qZA(),
                        a.TgZ(147, "div", 35)(148, "div", 67)(149, "div", 30),
                        a._UZ(150, "input", 68),
                        a.qZA(),
                        a.TgZ(151, "div", 69),
                        a._UZ(152, "input", 70),
                        a.qZA(),
                        a.TgZ(153, "div", 69),
                        a._UZ(154, "input", 71),
                        a.qZA()()()()(),
                        a.TgZ(155, "div", 72)(156, "span", 73),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).activeModal.close("Close click");
                        }),
                        a._uU(157, " Tutup "),
                        a.qZA(),
                        a.YNc(158, so, 3, 3, "button", 74),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = a.oxw(2);
                    a.Q6J("formGroup", t.subBelanjaForm),
                        a.xp6(7),
                        a.Q6J("ngModel", t.skpdModel)("ngModelOptions", a.DdM(45, et))("ngbTypeahead", t.skpdSearch)("inputFormatter", t.skpdFormatter)("resultFormatter", t.skpdFormatter),
                        a.xp6(2),
                        a.Q6J("ngIf", t.skpdSearchIsLoading),
                        a.xp6(1),
                        a.Q6J("ngIf", t.daerah.is_pusat),
                        a.xp6(6),
                        a.Q6J("ngModel", t.labelProvinsiModel)("ngModelOptions", a.DdM(46, et))("ngbTypeahead", t.labelProvinsiSearch)("inputFormatter", t.labelProvinsiFormatter)("resultFormatter", t.labelProvinsiFormatter)("editable", !1)(
                            "disabled",
                            t.isSaving || "view" == t.mode
                        ),
                        a.xp6(2),
                        a.Q6J("ngIf", t.labelProvinsiSearchIsLoading),
                        a.xp6(1),
                        a.Q6J("ngIf", 0 == t.daerah.is_prop),
                        a.xp6(6),
                        a.Q6J("ngModel", t.subGiatModel)("ngModelOptions", a.DdM(47, et))("ngbTypeahead", t.subGiatSearch)("inputFormatter", t.subGiatFormatter)("resultFormatter", t.subGiatFormatter)("editable", !1)(
                            "disabled",
                            t.isSaving || !t.skpdModel || "view" == t.mode
                        ),
                        a.xp6(2),
                        a.Q6J("ngIf", t.subGiatSearchIsLoading),
                        a.xp6(1),
                        a.Q6J("ngIf", 1 == t.nilai_is_xx),
                        a.xp6(8),
                        a.Q6J("ngIf", "view" != t.mode),
                        a.xp6(1),
                        a.Q6J("ngForOf", t.tagBelanjaList),
                        a.xp6(8),
                        a.Q6J("ngIf", "view" != t.mode),
                        a.xp6(1),
                        a.Q6J("ngForOf", t.danaBelanjaList),
                        a.xp6(5),
                        a.Q6J("disabled", "view" == t.mode),
                        a.xp6(3),
                        a.Q6J("ngForOf", t.lokasiList),
                        a.xp6(8),
                        a.Q6J("ngIf", "view" != t.mode),
                        a.xp6(1),
                        a.Q6J("ngForOf", t.lokasiKegiatanList.controls),
                        a.xp6(7),
                        a.Q6J("disabled", "view" == t.mode),
                        a.xp6(32),
                        a.Q6J("disabled", "view" == t.mode),
                        a.xp6(31),
                        a.Q6J("disabled", !0)("allowNegativeNumbers", !1),
                        a.xp6(5),
                        a.Q6J("allowNegativeNumbers", !1)("disabled", "view" == t.mode),
                        a.xp6(5),
                        a.Q6J("allowNegativeNumbers", !1)("disabled", "view" == t.mode),
                        a.xp6(7),
                        a.Q6J("disabled", !0),
                        a.xp6(4),
                        a.Q6J("disabled", !0),
                        a.xp6(4),
                        a.Q6J("ngIf", "view" != t.mode);
                }
            }
            function lo(i, d) {
                if ((1 & i && (a.TgZ(0, "div", 8), a.YNc(1, oo, 159, 48, "form", 9), a.qZA()), 2 & i)) {
                    const t = a.oxw();
                    a.xp6(1), a.Q6J("ngIf", t.subBelanjaForm && t.daerah);
                }
            }
            let St = (() => {
                class i {
                    constructor(t, e, n, s, o, l, _, r, u, k, m, v, g, C, h, f, y, B, F, c, b, I, x, q) {
                        (this.activatedRoute = t),
                            (this.activeModal = e),
                            (this.toastr = n),
                            (this.konfigurasiService = s),
                            (this.subBelanjaService = o),
                            (this.labelPusatService = l),
                            (this.labelProvinsiService = _),
                            (this.labelKokabService = r),
                            (this.labelKegiatanService = u),
                            (this.sumberDanaService = k),
                            (this.bidangUrusanService = m),
                            (this.daerahService = v),
                            (this.labelBelanjaService = g),
                            (this.danaBelanjaService = C),
                            (this.tagBelanjaService = h),
                            (this.detilLokasiService = f),
                            (this.kecamatanService = y),
                            (this.kelurahanService = B),
                            (this.renstraKegiatanService = F),
                            (this.bidangUrusanOrganisasiService = c),
                            (this.indikatorKeluaranService = b),
                            (this.skpdService = I),
                            (this.renstraCascadingService = x),
                            (this.subGiatService = q),
                            (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))),
                            (this.pageTitle = "Tambah Sub Kegiatan Belanja"),
                            (this.mode = "add"),
                            (this.sumberDanaValid = !0),
                            (this.id_tahap = 0),
                            (this.skpdFocus$ = new z.x()),
                            (this.skpdClick$ = new z.x()),
                            (this.skpdSearchIsLoading = !1),
                            (this.skpdFormatter = (T) => T.nama_skpd),
                            (this.bidangUrusanFocus$ = new z.x()),
                            (this.bidangUrusanClick$ = new z.x()),
                            (this.bidangUrusanSearchIsLoading = !1),
                            (this.bidangUrusanFormatter = (T) => T.nama_bidang_urusan),
                            (this.labelPusatFocus$ = new z.x()),
                            (this.labelPusatClick$ = new z.x()),
                            (this.labelPusatSearchIsLoading = !1),
                            (this.labelPusatFormatter = (T) => T.nama_label),
                            (this.labelProvinsiFocus$ = new z.x()),
                            (this.labelProvinsiClick$ = new z.x()),
                            (this.labelProvinsiSearchIsLoading = !1),
                            (this.labelProvinsiFormatter = (T) => T.nama_label),
                            (this.labelKokabFocus$ = new z.x()),
                            (this.labelKokabClick$ = new z.x()),
                            (this.labelKokabSearchIsLoading = !1),
                            (this.labelKokabFormatter = (T) => T.nama_label),
                            (this.subGiatFocus$ = new z.x()),
                            (this.subGiatClick$ = new z.x()),
                            (this.subGiatSearchIsLoading = !1),
                            (this.subGiatFormatter = (T) => `${T.kode_sub_giat} ${T.nama_sub_giat}`),
                            (this.subUnitList = []),
                            (this.urusanList = []),
                            (this.bidangUrusanList = []),
                            (this.subGiatList = []),
                            (this.lokasiList = []),
                            (this.labelGiatMasterList = []),
                            (this.sumberDanaMasterList = []),
                            (this.subGiatMasterList = []),
                            (this.labelBelanjaList = []),
                            (this.kotaKabupatenList = []),
                            (this.kecamatanList = [[]]),
                            (this.kelurahanDesaList = [[]]),
                            (this.id_sub_giat = ""),
                            (this.nama_daerah = ""),
                            (this.nama_unit = ""),
                            (this.nama_skpd = ""),
                            (this.nama_sub_skpd = ""),
                            (this.nama_urusan = ""),
                            (this.nama_bidang_urusan = ""),
                            (this.nama_program = ""),
                            (this.nama_giat = ""),
                            (this.nama_sub_giat = ""),
                            (this.nama_pptk = ""),
                            (this.nama_urusan_pusat = ""),
                            (this.nama_bidang_urusan_pusat = ""),
                            (this.nama_dana = ""),
                            (this.nama_lokasi = ""),
                            (this.nama_jadwal_murni = ""),
                            (this.kua_murni = 0),
                            (this.kua_pak = 0),
                            (this.kode_daerah = ""),
                            (this.kode_unit = ""),
                            (this.kode_skpd = ""),
                            (this.kode_sub_skpd = ""),
                            (this.kode_urusan_pusat = ""),
                            (this.kode_urusan = ""),
                            (this.kode_bidang_urusan_pusat = ""),
                            (this.kode_bidang_urusan = ""),
                            (this.kode_program = ""),
                            (this.kode_giat = ""),
                            (this.kode_sub_giat = ""),
                            (this.kode_dana = ""),
                            (this.subGiatIsLoading = !1),
                            (this.subGiatMasterIsLoading = !1),
                            (this.isSaving = !1),
                            (this.urusanIsLoading = !1),
                            (this.bidangUrusanIsLoading = !1),
                            (this.prioritasProvinsiIsLoading = !1),
                            (this.prioritasKokabIsLoading = !1),
                            (this.labelKegiatanIsLoading = !1),
                            (this.sumberDanaIsLoading = !1),
                            (this.lokasiIsLoading = !1),
                            (this.prioritasPusatIsLoading = !1),
                            (this.id_kab_kota_list = []),
                            (this.id_camat_list = []),
                            (this.id_desa_list = []),
                            (this.subBelanjaIsLoading = !1),
                            (this.labelBelanjaIsLoading = !1),
                            (this.tagBelanjaIsLoading = !1),
                            (this.danaBelanjaIsLoading = !1),
                            (this.detilLokasiIsLoading = !1),
                            (this.kotaKabupatenIsLoading = !1),
                            (this.urusanListIsLoading = !1),
                            (this.bidangUrusanOrganisasiIsLoading = !1),
                            (this.indikatorKeluaranIsLoading = !1),
                            (this.skpdIsLoading = !1),
                            (this.kecamatanIsLoadingArray = []),
                            (this.kelurahanDesaIsLoadingArray = []),
                            (this.isInitialized = !1),
                            (this.cekTahapRenstraIsLoading = !1),
                            (this.labelPusatIsLoading = !1),
                            (this.labelProvinsiIsLoading = !1),
                            (this.labelKokabIsLoading = !1),
                            (this.renstraKegiatanIsLoading = !1),
                            (this.tagBelanjaList = []),
                            (this.danaBelanjaList = []),
                            (this.danaBelanjaModelList = []),
                            (this.skpdSearch = (T) => {
                                const P = T.pipe((0, ha.b)(500)),
                                    Z = this.skpdClick$.pipe(
                                        (0, ga.h)(() => {
                                            var w;
                                            return !(null === (w = this.skpdInstance) || void 0 === w ? void 0 : w.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(P, this.skpdFocus$, Z).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((w) => {
                                        const R = new Pa.LE()
                                            .set("tahun", String(this.konfigurasiService.getTahun() || 0))
                                            .set("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0))
                                            .set("id_unit", this.queryParams.id_skpd)
                                            .set("search", w);
                                        return (
                                            (this.skpdSearchIsLoading = !0),
                                            this.skpdService.findByTahunDaerahUnit(R).pipe(
                                                (0, ka.U)((A) => (null == A ? void 0 : A.data)),
                                                (0, fa.b)(() => (this.skpdSearchIsLoading = !1)),
                                                (0, Sa.K)((A) => ((this.skpdSearchIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.bidangUrusanSearch = (T) => {
                                const P = T.pipe((0, ha.b)(500)),
                                    Z = this.bidangUrusanClick$.pipe(
                                        (0, ga.h)(() => {
                                            var w;
                                            return !(null === (w = this.bidangUrusanInstance) || void 0 === w ? void 0 : w.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(P, this.bidangUrusanFocus$, Z).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((w) => {
                                        var R, A;
                                        const N = new FormData();
                                        return (
                                            N.append("id_skpd", String((null === (R = this.skpdModel) || void 0 === R ? void 0 : R.id_skpd) || 0)),
                                            N.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                            N.append("id_daerah", String((null === (A = this.konfigurasiService) || void 0 === A ? void 0 : A.getIdDaerah()) || 0)),
                                            N.append("search[value]", w),
                                            (this.bidangUrusanSearchIsLoading = !0),
                                            this.bidangUrusanService.findByIdSkpd(N).pipe(
                                                (0, ka.U)((U) => (console.log(U.data[0]), (this.bidangUrusanModel = U.data[0]), console.log(this.bidangUrusanModel), null == U ? void 0 : U.data)),
                                                (0, fa.b)(() => (this.bidangUrusanSearchIsLoading = !1)),
                                                (0, Sa.K)((U) => ((this.bidangUrusanSearchIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.labelPusatSearch = (T) => {
                                const P = T.pipe((0, ha.b)(500)),
                                    Z = this.labelPusatClick$.pipe(
                                        (0, ga.h)(() => {
                                            var w;
                                            return !(null === (w = this.labelPusatInstance) || void 0 === w ? void 0 : w.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(P, this.labelPusatFocus$, Z).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((w) => {
                                        var R, A;
                                        const N = new FormData();
                                        return (
                                            N.append("id_skpd", String((null === (R = this.skpdModel) || void 0 === R ? void 0 : R.id_skpd) || 0)),
                                            N.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                            N.append("id_daerah", String((null === (A = this.konfigurasiService) || void 0 === A ? void 0 : A.getIdDaerah()) || 0)),
                                            N.append("search[value]", w),
                                            (this.labelPusatSearchIsLoading = !0),
                                            this.labelPusatService.find(N).pipe(
                                                (0, ka.U)((U) => (null == U ? void 0 : U.data)),
                                                (0, fa.b)(() => (this.labelPusatSearchIsLoading = !1)),
                                                (0, Sa.K)((U) => ((this.labelPusatSearchIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.labelProvinsiSearch = (T) => {
                                const P = T.pipe((0, ha.b)(500)),
                                    Z = this.labelProvinsiClick$.pipe(
                                        (0, ga.h)(() => {
                                            var w;
                                            return !(null === (w = this.labelProvinsiInstance) || void 0 === w ? void 0 : w.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(P, this.labelProvinsiFocus$, Z).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((w) => {
                                        var R, A, N, U;
                                        const W =
                                                1 == (null === (R = this.daerah) || void 0 === R ? void 0 : R.is_prop)
                                                    ? null === (A = this.daerah) || void 0 === A
                                                        ? void 0
                                                        : A.id_daerah
                                                    : null === (N = this.daerah) || void 0 === N
                                                    ? void 0
                                                    : N.id_prop,
                                            Y = new FormData();
                                        return (
                                            Y.append("id_skpd", String((null === (U = this.skpdModel) || void 0 === U ? void 0 : U.id_skpd) || 0)),
                                            Y.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                            Y.append("id_daerah", String(W || 0)),
                                            Y.append("search[value]", w),
                                            (this.labelProvinsiSearchIsLoading = !0),
                                            this.labelProvinsiService.find(Y).pipe(
                                                (0, ka.U)((Q) => (null == Q ? void 0 : Q.data)),
                                                (0, fa.b)(() => (this.labelProvinsiSearchIsLoading = !1)),
                                                (0, Sa.K)((Q) => ((this.labelProvinsiSearchIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.labelKokabSearch = (T) => {
                                const P = T.pipe((0, ha.b)(500)),
                                    Z = this.labelKokabClick$.pipe(
                                        (0, ga.h)(() => {
                                            var w;
                                            return !(null === (w = this.labelKokabInstance) || void 0 === w ? void 0 : w.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(P, this.labelKokabFocus$, Z).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((w) => {
                                        var R, A;
                                        const N = new FormData();
                                        return (
                                            N.append("id_skpd", String((null === (R = this.skpdModel) || void 0 === R ? void 0 : R.id_skpd) || 0)),
                                            N.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                            N.append("id_daerah", String((null === (A = this.konfigurasiService) || void 0 === A ? void 0 : A.getIdDaerah()) || 0)),
                                            N.append("search[value]", w),
                                            (this.labelKokabSearchIsLoading = !0),
                                            this.labelKokabService.find(N).pipe(
                                                (0, ka.U)((U) => (null == U ? void 0 : U.data)),
                                                (0, fa.b)(() => (this.labelKokabSearchIsLoading = !1)),
                                                (0, Sa.K)((U) => ((this.labelKokabSearchIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            }),
                            (this.subGiatSearch = (T) => {
                                const P = T.pipe((0, ha.b)(500)),
                                    Z = this.subGiatClick$.pipe(
                                        (0, ga.h)(() => {
                                            var w;
                                            return !(null === (w = this.subGiatInstance) || void 0 === w ? void 0 : w.isPopupOpen());
                                        })
                                    );
                                return (0, ma.T)(P, this.subGiatFocus$, Z).pipe(
                                    (0, ba.x)(),
                                    (0, va.w)((w) => {
                                        var R, A, N;
                                        new Pa.LE()
                                            .set("tahun", String(this.konfigurasiService.getTahun() || 0))
                                            .set("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0))
                                            .set("id_unit", String((null === (R = this.skpdModel) || void 0 === R ? void 0 : R.id_skpd) || 0))
                                            .set("search", w);
                                        const W = new FormData();
                                        return (
                                            W.append("id_unit", String((null === (A = this.skpdModel) || void 0 === A ? void 0 : A.id_skpd) || 0)),
                                            W.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                            W.append("id_daerah", String((null === (N = this.konfigurasiService) || void 0 === N ? void 0 : N.getIdDaerah()) || 0)),
                                            W.append("search", w),
                                            (this.subGiatSearchIsLoading = !0),
                                            this.subGiatService.findByTahunDaerahUnitPost(W).pipe(
                                                (0, ka.U)((Y) => (null == Y ? void 0 : Y.data)),
                                                (0, fa.b)(() => (this.subGiatSearchIsLoading = !1)),
                                                (0, Sa.K)((Y) => ((this.subGiatSearchIsLoading = !1), (0, ja.of)([])))
                                            )
                                        );
                                    })
                                );
                            });
                    }
                    ngOnInit() {
                        this.activatedRoute.queryParams.subscribe((t) => {
                            var e, n, s;
                            (this.queryParams = t), this.buildForm(), this.loadDaerahProvinsi(), this.loadSubBelanja(), this.cekTahapRenstra(), this.loadDaerah();
                            const o = new FormData();
                            o.append("id_daerah", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) || 0)),
                                o.append("tahun", String((null === (n = this.konfigurasiService) || void 0 === n ? void 0 : n.getTahun()) || 0)),
                                this.loadLabelGiatList(o),
                                this.loadLokasiList(o),
                                this.loadSumberDanaList(o),
                                this.onKotaKabupatenChange(String(null === (s = this.konfigurasiService) || void 0 === s ? void 0 : s.getIdDaerah()), 0);
                        });
                    }
                    ngOnDestroy() {
                        var t, e, n, s, o, l;
                        null === (t = this.subBelanjaSub) || void 0 === t || t.unsubscribe(),
                            null === (e = this.daerahSub) || void 0 === e || e.unsubscribe(),
                            null === (n = this.daerahProvinsiSub) || void 0 === n || n.unsubscribe(),
                            null === (s = this.detilLokasiSub) || void 0 === s || s.unsubscribe(),
                            null === (o = this.kecamatanSub) || void 0 === o || o.unsubscribe(),
                            null === (l = this.kelurahanDesaSub) || void 0 === l || l.unsubscribe();
                    }
                    addTagBelanja() {
                        this.tagBelanjaList.push(new ht());
                    }
                    onRemoveTagBelanja(t) {
                        this.tagBelanjaList.splice(t, 1);
                    }
                    addDanaBelanja() {
                        this.danaBelanjaList.push(new he());
                    }
                    onRemoveDanaBelanja(t) {
                        this.danaBelanjaList.splice(t, 1);
                    }
                    onDanaBelanjaChanged(t, e) {
                        (this.danaBelanjaList[t] = e), this.updateAnggaranSubGiat();
                    }
                    onSumberDanaValid(t) {
                        this.sumberDanaValid = t;
                    }
                    get lokasiKegiatanList() {
                        var t;
                        return null === (t = this.subBelanjaForm) || void 0 === t ? void 0 : t.get("lokasi_kegiatan_list");
                    }
                    addLokasiKegiatan() {
                        this.lokasiKegiatanList.push(
                            new p.cw({ id_detil_lokasi: new p.NI(""), id_kab_kota: new p.NI("", [p.kI.maxLength(255)]), id_camat: new p.NI("", [p.kI.maxLength(255)]), id_lurah: new p.NI("", [p.kI.maxLength(255)]) })
                        );
                    }
                    removeLokasiKegiatan(t) {
                        var e, n, s, o, l, _, r, u, k;
                        if (this.lokasiKegiatanList.at(t).value.id_detil_lokasi) {
                            const m = new FormData();
                            m.append("id_detil_lokasi", String(this.lokasiKegiatanList.at(t).value.id_detil_lokasi)),
                                m.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                m.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                                m.append("id_unit", String((null === (n = null === (e = this.subBelanjaForm) || void 0 === e ? void 0 : e.get("id_unit")) || void 0 === n ? void 0 : n.value) || 0)),
                                m.append("id_bl", "0"),
                                m.append("id_sub_bl", "0"),
                                m.append("id_kab_kota", String(this.lokasiKegiatanList.at(t).value.id_kab_kota)),
                                m.append("id_camat", String(this.lokasiKegiatanList.at(t).value.id_camat)),
                                m.append("id_lurah", String(this.lokasiKegiatanList.at(t).value.id_lurah)),
                                m.append("id_skpd", String(null === (s = this.renjaSubBelanja) || void 0 === s ? void 0 : s.id_skpd)),
                                m.append("id_sub_skpd", String(null === (o = this.renjaSubBelanja) || void 0 === o ? void 0 : o.id_sub_skpd)),
                                m.append("id_program", String(null === (l = this.renjaSubBelanja) || void 0 === l ? void 0 : l.id_program)),
                                m.append("id_giat", String(null === (_ = this.renjaSubBelanja) || void 0 === _ ? void 0 : _.id_giat)),
                                m.append("id_sub_giat", String(null === (r = this.renjaSubBelanja) || void 0 === r ? void 0 : r.id_sub_giat)),
                                m.append("nama_daerah", ""),
                                m.append("nama_unit", ""),
                                m.append("nama_kab_kota", ""),
                                m.append("nama_camat", ""),
                                m.append("nama_lurah", ""),
                                m.append("id_daerah_log", null === (u = this.userSession) || void 0 === u ? void 0 : u.daerah_id),
                                m.append("id_user_log", null === (k = this.userSession) || void 0 === k ? void 0 : k.user_id),
                                this.lokasiKegiatanList.disable(),
                                this.detilLokasiService.update(m).subscribe({
                                    next: () => {
                                        this.lokasiKegiatanList.removeAt(t), this.lokasiKegiatanList.enable();
                                    },
                                    error: (v) => {
                                        this.lokasiKegiatanList.enable();
                                    },
                                });
                        } else this.lokasiKegiatanList.removeAt(t);
                    }
                    get indikatorKeluaranList() {
                        var t;
                        return null === (t = this.subBelanjaForm) || void 0 === t ? void 0 : t.get("indikator_keluaran_list");
                    }
                    addIndikatorKeluaran() {
                        this.indikatorKeluaranList.push(new p.cw({ id_output_bl: new p.NI(""), tolok_ukur: new p.NI("", [p.kI.maxLength(500)]), target: new p.NI("", [p.kI.maxLength(20)]), satuan: new p.NI("", [p.kI.maxLength(20)]) }));
                    }
                    removeIndikatorKeluaran(t) {
                        var e, n, s, o, l, _, r, u, k, m;
                        if (this.indikatorKeluaranList.at(t).value.id_output_bl) {
                            const v = new FormData();
                            v.append("id_output_bl", String(this.indikatorKeluaranList.at(t).value.id_output_bl)),
                                v.append("id_bl", "0"),
                                v.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                v.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                                v.append("id_unit", String((null === (n = null === (e = this.subBelanjaForm) || void 0 === e ? void 0 : e.get("id_unit")) || void 0 === n ? void 0 : n.value) || 0)),
                                v.append("id_sub_bl", "0"),
                                v.append("tolok_ukur", String(this.indikatorKeluaranList.at(t).value.tolok_ukur)),
                                v.append("target", String(this.indikatorKeluaranList.at(t).value.target)),
                                v.append("satuan", String(this.indikatorKeluaranList.at(t).value.satuan)),
                                v.append("target_teks", ""),
                                v.append("tolok_ukur_sub", ""),
                                v.append("target_sub", ""),
                                v.append("satuan_sub", ""),
                                v.append("target_sub_teks", ""),
                                v.append("id_sub_bl", String(null === (s = this.renjaSubBelanja) || void 0 === s ? void 0 : s.id_sub_bl)),
                                v.append("id_skpd", String(null === (o = this.renjaSubBelanja) || void 0 === o ? void 0 : o.id_skpd)),
                                v.append("id_sub_skpd", String(null === (l = this.renjaSubBelanja) || void 0 === l ? void 0 : l.id_sub_skpd)),
                                v.append("id_program", String(null === (_ = this.renjaSubBelanja) || void 0 === _ ? void 0 : _.id_program)),
                                v.append("id_giat", String(null === (r = this.renjaSubBelanja) || void 0 === r ? void 0 : r.id_giat)),
                                v.append("id_sub_giat", String(null === (u = this.renjaSubBelanja) || void 0 === u ? void 0 : u.id_sub_giat)),
                                v.append("id_daerah_log", null === (k = this.userSession) || void 0 === k ? void 0 : k.daerah_id),
                                v.append("id_user_log", null === (m = this.userSession) || void 0 === m ? void 0 : m.user_id),
                                this.indikatorKeluaranList.disable(),
                                this.indikatorKeluaranService.update(v).subscribe({
                                    next: () => {
                                        this.indikatorKeluaranList.removeAt(t), this.indikatorKeluaranList.enable();
                                    },
                                    error: (g) => {
                                        this.indikatorKeluaranList.enable();
                                    },
                                });
                        } else this.indikatorKeluaranList.removeAt(t);
                    }
                    onKotaKabupatenChange(t, e) {
                        var n;
                        (this.id_kab_kota_list[t] = t), null === (n = this.lokasiKegiatanList.at(e).get("id_camat")) || void 0 === n || n.setValue(""), this.loadKecamatanList(t, e);
                    }
                    onKecamatanChange(t, e) {
                        var n;
                        (this.id_camat_list[t] = t), null === (n = this.lokasiKegiatanList.at(e).get("id_lurah")) || void 0 === n || n.setValue(""), this.loadKelurahanDesaList(t, e);
                    }
                    onKelurahanDesaChange(t) {
                        this.id_desa_list[t] = t;
                    }
                    onChangeSubGiat() {
                        var t, e, n, s;
                        null === (e = null === (t = this.subBelanjaForm) || void 0 === t ? void 0 : t.get("indikator_keluaran_list")) || void 0 === e || e.patchValue({ tolok_ukur: "", satuan: "" }),
                            void 0 !== this.subGiatModel &&
                                ((this.nilai_is_xx = "X.XX" == this.subGiatModel.kode_sub_giat.substring(0, 4) ? 1 : 0),
                                null === (s = null === (n = this.subBelanjaForm) || void 0 === n ? void 0 : n.get("indikator_keluaran_list")) ||
                                    void 0 === s ||
                                    s.patchValue({ tolok_ukur: this.subGiatModel.indikator, satuan: this.subGiatModel.satuan }));
                    }
                    skpdChange() {
                        this.bidangUrusanModel = void 0;
                    }
                    onSubmit() {
                        var t, e, n, s, o, l, _, r, u, k, m, v, g, C, h, f, y, B, F, c, b, I, x, q, T, P, Z, J, w, R, A, N, U, W, Y, Q, $, ea, ta, sa, la, E, ua, ra, oa, da, pa, na, V, H, ia, Ta;
                        if (!this.subGiatModel || (null === (t = this.subBelanjaForm) || void 0 === t ? void 0 : t.invalid)) return void alert("Mohon semua kolom form diisi");
                        (this.isSaving = !0), null === (e = this.subBelanjaForm) || void 0 === e || e.disable();
                        const M = new FormData();
                        M.append("id_unit", String((null === (n = this.skpdModel) || void 0 === n ? void 0 : n.id_unit) || 0)),
                            M.append("id_skpd", String((null === (s = this.skpdModel) || void 0 === s ? void 0 : s.id_unit) || 0)),
                            M.append("id_sub_skpd", String((null === (o = this.skpdModel) || void 0 === o ? void 0 : o.id_skpd) || 0)),
                            M.append("id_pptk", "0"),
                            console.log(this.bidangUrusanModel),
                            console.log(this.subGiatModel),
                            M.append("id_urusan_pusat", String((null === (l = this.renjaSubBelanja) || void 0 === l ? void 0 : l.id_urusan) || 0)),
                            M.append("id_bidang_urusan_pusat", String((null === (_ = this.renjaSubBelanja) || void 0 === _ ? void 0 : _.id_bidang_urusan) || 0)),
                            null != (null === (r = this.bidangUrusanModel) || void 0 === r ? void 0 : r.id_urusan)
                                ? (M.append("id_urusan", String((null === (u = this.bidangUrusanModel) || void 0 === u ? void 0 : u.id_urusan) || 0)),
                                  M.append("id_bidang_urusan", String((null === (k = this.bidangUrusanModel) || void 0 === k ? void 0 : k.id_bidang_urusan) || 0)))
                                : (M.append("id_urusan", String((null === (m = this.subGiatModel) || void 0 === m ? void 0 : m.id_urusan) || 0)),
                                  M.append("id_bidang_urusan", String((null === (v = this.subGiatModel) || void 0 === v ? void 0 : v.id_bidang_urusan) || 0))),
                            M.append("id_program", String((null === (g = this.subGiatModel) || void 0 === g ? void 0 : g.id_program) || 0)),
                            M.append("id_giat", String((null === (C = this.subGiatModel) || void 0 === C ? void 0 : C.id_giat) || 0)),
                            M.append("id_bl", "0"),
                            M.append("id_sub_giat", String((null === (h = this.subGiatModel) || void 0 === h ? void 0 : h.id_sub_giat) || 0)),
                            M.append("no_sub_giat", ""),
                            M.append("pagu", String((null === (f = this.subBelanjaForm) || void 0 === f ? void 0 : f.value.pagu) || 0)),
                            M.append("pagu_n_depan", String((null === (y = this.subBelanjaForm) || void 0 === y ? void 0 : y.value.pagu_n_depan) || 0)),
                            M.append("pagu_n2_depan", String((null === (B = this.subBelanjaForm) || void 0 === B ? void 0 : B.value.pagu_n2_depan) || 0)),
                            M.append("id_dana", String((null === (F = this.renjaSubBelanja) || void 0 === F ? void 0 : F.id_dana) || 0)),
                            M.append("id_lokasi", String((null === (c = this.subBelanjaForm) || void 0 === c ? void 0 : c.value.id_lokasi) || 0)),
                            M.append("waktu_awal", String((null === (b = this.subBelanjaForm) || void 0 === b ? void 0 : b.value.waktu_awal) || 0)),
                            M.append("waktu_akhir", String((null === (I = this.subBelanjaForm) || void 0 === I ? void 0 : I.value.waktu_akhir) || 0)),
                            M.append("pagu_indikatif", String((null === (x = this.renjaSubBelanja) || void 0 === x ? void 0 : x.pagu_indikatif) || 0)),
                            M.append("output_teks", (null === (q = this.subBelanjaForm) || void 0 === q ? void 0 : q.value.output_teks) || ""),
                            M.append("pagu_n2_lalu", String((null === (T = this.renjaSubBelanja) || void 0 === T ? void 0 : T.pagu_n2_lalu) || 0)),
                            M.append("pagu_n_lalu", String((null === (P = this.renjaSubBelanja) || void 0 === P ? void 0 : P.pagu_n_lalu) || 0)),
                            M.append("rkpd_murni", String((null === (Z = this.renjaSubBelanja) || void 0 === Z ? void 0 : Z.rkpd_murni) || 0)),
                            M.append("rkpd_pak", String((null === (J = this.renjaSubBelanja) || void 0 === J ? void 0 : J.rkpd_pak) || 0)),
                            M.append("nama_daerah", this.nama_daerah || ""),
                            M.append("nama_unit", (null === (w = this.skpdModel) || void 0 === w ? void 0 : w.nama_skpd) || ""),
                            M.append("nama_skpd", (null === (R = this.skpdModel) || void 0 === R ? void 0 : R.nama_skpd) || ""),
                            M.append("nama_sub_skpd", (null === (A = this.skpdModel) || void 0 === A ? void 0 : A.nama_skpd) || ""),
                            M.append("nama_urusan", this.nama_urusan || ""),
                            M.append("nama_bidang_urusan", (null === (N = this.bidangUrusanModel) || void 0 === N ? void 0 : N.nama_bidang_urusan) || ""),
                            M.append("nama_program", this.nama_program || ""),
                            M.append("nama_giat", this.nama_giat || ""),
                            M.append("nama_sub_giat", this.nama_sub_giat || ""),
                            M.append("nama_dana", this.nama_dana || ""),
                            M.append("nama_lokasi", this.nama_lokasi || ""),
                            M.append("nama_jadwal_murni", this.nama_jadwal_murni || ""),
                            M.append("kua_murni", String(this.kua_murni || 0)),
                            M.append("kua_pak", String(this.kua_pak || 0)),
                            M.append("kode_daerah", this.kode_daerah || ""),
                            M.append("kode_unit", this.kode_unit || ""),
                            M.append("kode_skpd", this.kode_skpd || ""),
                            M.append("kode_sub_skpd", this.kode_sub_skpd || ""),
                            M.append("kode_urusan_pusat", this.kode_urusan_pusat || ""),
                            M.append("kode_urusan", this.kode_urusan || ""),
                            M.append("kode_bidang_urusan_pusat", this.kode_bidang_urusan_pusat || ""),
                            M.append("kode_bidang_urusan", this.kode_bidang_urusan || ""),
                            M.append("kode_program", this.kode_program || ""),
                            M.append("kode_giat", this.kode_giat || ""),
                            M.append("kode_sub_giat", (null === (U = this.subGiatModel) || void 0 === U ? void 0 : U.kode_sub_giat) || ""),
                            M.append("kode_dana", this.kode_dana || ""),
                            M.append("level_id", null === (W = this.userSession) || void 0 === W ? void 0 : W.level_id),
                            M.append("id_daerah_log", null === (Y = this.userSession) || void 0 === Y ? void 0 : Y.daerah_id),
                            M.append("id_user_log", null === (Q = this.userSession) || void 0 === Q ? void 0 : Q.user_id);
                        let Ia = Math.floor(1e6 * Math.random()),
                            Ba = Math.floor(1e6 * Math.random()),
                            Da =
                                Number(Ia) +
                                Number(null === ($ = this.userSession) || void 0 === $ ? void 0 : $.user_id) +
                                Number(null === (ea = this.subGiatModel) || void 0 === ea ? void 0 : ea.id_sub_giat) +
                                Number(null === (ta = this.konfigurasiService) || void 0 === ta ? void 0 : ta.getTahun()),
                            Fa =
                                Number(null === (sa = this.subGiatModel) || void 0 === sa ? void 0 : sa.id_sub_giat) +
                                Number(null === (la = this.subGiatModel) || void 0 === la ? void 0 : la.id_sub_giat) +
                                Number(null === (E = this.skpdModel) || void 0 === E ? void 0 : E.id_skpd),
                            Ua =
                                Number(null === (ua = this.subGiatModel) || void 0 === ua ? void 0 : ua.id_sub_giat) +
                                Number(null === (ra = this.skpdModel) || void 0 === ra ? void 0 : ra.id_skpd) +
                                Number(null === (oa = this.skpdModel) || void 0 === oa ? void 0 : oa.id_skpd),
                            Za = String(this.makeid(15) + "." + String(Da) + "." + String(Ia) + "." + String(Fa) + "." + String(Ba) + "." + String(Ua) + "." + String(Ia + Ba));
                        M.append("token", Za),
                            "add" === this.mode
                                ? (M.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                                  M.append("tahun", String((null === (da = this.konfigurasiService) || void 0 === da ? void 0 : da.getTahun()) || 0)),
                                  M.append("created_user", String((null === (pa = this.userSession) || void 0 === pa ? void 0 : pa.user_id) || 0)),
                                  (this.subBelanjaSub = this.subBelanjaService.add(M).subscribe({
                                      next: (Ca) => {
                                          (this.isSaving = !1),
                                              this.activeModal.close(Ca),
                                              (this.id_sub_bl = Ca.id_sub_bl),
                                              this.toastr.success("Data berhasil disimpan", "Sukses"),
                                              this.createLabelBelanja(),
                                              this.submitTagBelanja(),
                                              this.submitSumberDana(),
                                              this.submitDetilLokasi(),
                                              this.submitIndikatorKeluaran();
                                      },
                                      error: (Ca) => {
                                          var ya;
                                          (this.isSaving = !1), null === (ya = this.subBelanjaForm) || void 0 === ya || ya.enable(), this.toastr.error(Ca.error.message, "Error");
                                      },
                                  })))
                                : "edit" === this.mode &&
                                  (M.append("id_sub_bl", String((null === (na = this.renjaSubBelanja) || void 0 === na ? void 0 : na.id_sub_bl) || 0)),
                                  M.append("id_unik", String((null === (V = this.renjaSubBelanja) || void 0 === V ? void 0 : V.id_unik) || 0)),
                                  M.append("id_daerah", String((null === (H = this.renjaSubBelanja) || void 0 === H ? void 0 : H.id_daerah) || 0)),
                                  M.append("tahun", String((null === (ia = this.renjaSubBelanja) || void 0 === ia ? void 0 : ia.tahun) || 0)),
                                  M.append("updated_user", String((null === (Ta = this.userSession) || void 0 === Ta ? void 0 : Ta.user_id) || 0)),
                                  (this.subBelanjaSub = this.subBelanjaService.update(M).subscribe({
                                      next: (Ca) => {
                                          (this.isSaving = !1),
                                              this.activeModal.close(Ca),
                                              this.toastr.success("Data berhasil disimpan", "Sukses"),
                                              this.createLabelBelanja(),
                                              this.submitTagBelanja(),
                                              this.submitSumberDana(),
                                              this.submitDetilLokasi(),
                                              this.submitIndikatorKeluaran();
                                      },
                                      error: (Ca) => {
                                          var ya;
                                          (this.isSaving = !1), null === (ya = this.subBelanjaForm) || void 0 === ya || ya.enable(), this.toastr.error(Ca.error.message, "Error");
                                      },
                                  })));
                    }
                    loadIdBidangUrusanList() {
                        var t, e;
                        const n = new FormData();
                        n.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                            n.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                            n.append("id_unit", String((null === (e = null === (t = this.subBelanjaForm) || void 0 === t ? void 0 : t.get("id_unit")) || void 0 === e ? void 0 : e.value) || 0)),
                            (this.bidangUrusanOrganisasiIsLoading = !0),
                            this.bidangUrusanOrganisasiService.findByIdUnit(n).subscribe({
                                next: (s) => {
                                    (this.bidangUrusanOrganisasiIsLoading = !1),
                                        (this.bidangUrusanOrganisasiList = s.data.data),
                                        (this.bidangUrusanList = this.bidangUrusanList.filter((o) => this.bidangUrusanOrganisasiList.some((l) => o.id_bidang_urusan == l.id_bidang_urusan)));
                                },
                                error: (s) => {
                                    this.bidangUrusanOrganisasiIsLoading = !1;
                                },
                            });
                    }
                    updateAnggaranSubGiat() {
                        var t, e;
                        let n = 0;
                        this.danaBelanjaList.forEach((s) => {
                            n += s.pagu_dana;
                        }),
                            null === (e = null === (t = this.subBelanjaForm) || void 0 === t ? void 0 : t.get("pagu")) || void 0 === e || e.patchValue(n);
                    }
                    onLabelGiatChanged(t, e) {
                        this.tagBelanjaList[t].id_label_giat = e.id_label_giat;
                    }
                    buildForm() {
                        this.subBelanjaForm = new p.cw(
                            {
                                id_label_pusat: new p.NI("", [p.kI.maxLength(8)]),
                                id_label_prov: new p.NI("", [p.kI.maxLength(8)]),
                                id_label_kokab: new p.NI("", [p.kI.maxLength(8)]),
                                id_sub_giat: new p.NI("", [p.kI.maxLength(8)]),
                                no_sub_giat: new p.NI("", [p.kI.maxLength(3)]),
                                id_lokasi: new p.NI("", [p.kI.maxLength(8)]),
                                lokasi_kegiatan_list: new p.Oe([
                                    new p.cw({ id_detil_lokasi: new p.NI(""), id_kab_kota: new p.NI("", [p.kI.maxLength(8)]), id_camat: new p.NI("", [p.kI.maxLength(8)]), id_lurah: new p.NI("", [p.kI.maxLength(8)]) }),
                                ]),
                                indikator_keluaran_list: new p.cw({ id_output_bl: new p.NI(""), tolok_ukur: new p.NI(""), target: new p.NI("", [p.kI.maxLength(20)]), satuan: new p.NI("", [p.kI.maxLength(50)]) }),
                                waktu_awal: new p.NI("", [p.kI.required, p.kI.maxLength(8)]),
                                waktu_akhir: new p.NI("", [p.kI.required, p.kI.maxLength(8)]),
                                pagu: new p.NI("", [p.kI.maxLength(15)]),
                                pagu_n_depan: new p.NI("", [p.kI.maxLength(15)]),
                                pagu_n2_depan: new p.NI("", [p.kI.maxLength(15)]),
                                output_teks: new p.NI(""),
                            },
                            { validators: [this.checkIfEndDateAfterStartDate] }
                        );
                    }
                    loadDaerahProvinsi() {
                        this.daerahProvinsiSub = this.daerahService.view(this.konfigurasiService.getIdDaerah()).subscribe({
                            next: (t) => {
                                var e, n;
                                this.daerah = t.data[0];
                                const s = new FormData();
                                s.append("id_daerah", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) || 0)),
                                    s.append("tahun", String((null === (n = this.konfigurasiService) || void 0 === n ? void 0 : n.getTahun()) || 0)),
                                    this.loadKotaKabupatenList(s);
                            },
                            error: (t) => {},
                        });
                    }
                    createLabelBelanja() {
                        var t, e, n, s, o, l, _, r, u, k;
                        const m = new FormData();
                        m.append("id_bl", "0"),
                            m.append("tahun", this.konfigurasiService.getTahun()),
                            m.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                            m.append("id_unit", String((null === (t = this.subBelanjaForm) || void 0 === t ? void 0 : t.value.id_unit) || 0)),
                            m.append("id_label_pusat", String((null === (e = this.labelPusatModel) || void 0 === e ? void 0 : e.id_label_pusat) || 0)),
                            m.append("id_label_prov", String((null === (n = this.labelProvinsiModel) || void 0 === n ? void 0 : n.id_label_prov) || 0)),
                            m.append("id_label_kokab", String((null === (s = this.labelKokabModel) || void 0 === s ? void 0 : s.id_label_kokab) || 0)),
                            m.append("id_sub_bl", String(this.id_sub_bl || 0)),
                            m.append("id_skpd", String((null === (o = this.subBelanjaForm) || void 0 === o ? void 0 : o.value.id_skpd) || 0)),
                            m.append("id_sub_skpd", String((null === (l = this.subBelanjaForm) || void 0 === l ? void 0 : l.value.id_skpd) || 0)),
                            m.append("id_program", "0"),
                            m.append("id_giat", "0"),
                            m.append("id_sub_giat", "0"),
                            m.append("nama_daerah", ""),
                            m.append("nama_unit", ""),
                            m.append("nama_label_pusat", ""),
                            m.append("nama_label_prov", ""),
                            m.append("nama_label_kokab", ""),
                            m.append("nama_skpd", ""),
                            m.append("nama_sub_skpd", ""),
                            m.append("nama_program", ""),
                            m.append("nama_giat", ""),
                            m.append("nama_sub_giat", ""),
                            m.append("id_daerah_log", null === (_ = this.userSession) || void 0 === _ ? void 0 : _.daerah_id),
                            m.append("id_user_log", null === (r = this.userSession) || void 0 === r ? void 0 : r.user_id),
                            null == (null === (u = this.labelBelanja) || void 0 === u ? void 0 : u.id_label_bl)
                                ? (this.labelBelanjaSub = this.labelBelanjaService.add(m).subscribe({ next: (v) => {}, error: (v) => {} }))
                                : (m.append("id_label_bl", String((null === (k = this.labelBelanja) || void 0 === k ? void 0 : k.id_label_bl) || 0)),
                                  (this.labelBelanjaSub = this.labelBelanjaService.update(m).subscribe({ next: (v) => {}, error: (v) => {} })));
                    }
                    updateLabelBelanja() {
                        var t, e, n, s, o, l, _, r;
                        const u = new FormData();
                        u.append("id_label_bl", String(this.labelBelanja.id_label_bl || 0)),
                            u.append("id_bl", "0"),
                            u.append("tahun", this.konfigurasiService.getTahun()),
                            u.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                            u.append("id_unit", String((null === (t = this.subBelanjaForm) || void 0 === t ? void 0 : t.value.id_unit) || 0)),
                            u.append("id_label_pusat", String((null === (e = this.labelPusatModel) || void 0 === e ? void 0 : e.id_label_pusat) || 0)),
                            u.append("id_label_prov", String((null === (n = this.labelProvinsiModel) || void 0 === n ? void 0 : n.id_label_prov) || 0)),
                            u.append("id_label_kokab", String((null === (s = this.labelKokabModel) || void 0 === s ? void 0 : s.id_label_kokab) || 0)),
                            u.append("id_sub_bl", String(this.id_sub_bl || 0)),
                            u.append("id_skpd", String((null === (o = this.subBelanjaForm) || void 0 === o ? void 0 : o.value.id_skpd) || 0)),
                            u.append("id_sub_skpd", String((null === (l = this.subBelanjaForm) || void 0 === l ? void 0 : l.value.id_skpd) || 0)),
                            u.append("id_program", "0"),
                            u.append("id_giat", "0"),
                            u.append("id_sub_giat", "0"),
                            u.append("nama_daerah", ""),
                            u.append("nama_unit", ""),
                            u.append("nama_label_pusat", ""),
                            u.append("nama_label_prov", ""),
                            u.append("nama_label_kokab", ""),
                            u.append("nama_skpd", ""),
                            u.append("nama_sub_skpd", ""),
                            u.append("nama_program", ""),
                            u.append("nama_giat", ""),
                            u.append("nama_sub_giat", ""),
                            u.append("id_daerah_log", null === (_ = this.userSession) || void 0 === _ ? void 0 : _.daerah_id),
                            u.append("id_user_log", null === (r = this.userSession) || void 0 === r ? void 0 : r.user_id),
                            (this.labelBelanjaSub = this.labelBelanjaService.update(u).subscribe({ next: (k) => {}, error: (k) => {} }));
                    }
                    submitTagBelanja() {
                        this.tagBelanjaList.forEach((t) => {
                            var e, n, s, o, l;
                            const _ = new FormData();
                            _.append("tahun", this.konfigurasiService.getTahun()),
                                _.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                _.append("id_bl", "0"),
                                _.append("id_sub_bl", String(this.id_sub_bl || 0)),
                                _.append("id_unit", String((null === (e = this.subBelanjaForm) || void 0 === e ? void 0 : e.value.id_unit) || 0)),
                                _.append("id_label_giat", t.id_label_giat || 0),
                                _.append("id_skpd", String((null === (n = this.subBelanjaForm) || void 0 === n ? void 0 : n.value.id_skpd) || 0)),
                                _.append("id_sub_skpd", String((null === (s = this.subBelanjaForm) || void 0 === s ? void 0 : s.value.id_skpd) || 0)),
                                _.append("id_program", "0"),
                                _.append("id_giat", "0"),
                                _.append("id_sub_giat", "0"),
                                _.append("nama_daerah", ""),
                                _.append("nama_unit", ""),
                                _.append("nama_label_giat", ""),
                                _.append("id_daerah_log", null === (o = this.userSession) || void 0 === o ? void 0 : o.daerah_id),
                                _.append("id_user_log", null === (l = this.userSession) || void 0 === l ? void 0 : l.user_id),
                                t.id_tag_bl
                                    ? (_.append("id_tag_bl", t.id_tag_bl), this.tagBelanjaService.update(_).subscribe({ next: (r) => {}, error: (r) => {} }))
                                    : this.tagBelanjaService.add(_).subscribe({ next: (r) => {}, error: (r) => {} });
                        });
                    }
                    submitSumberDana() {
                        console.log(this.danaBelanjaList),
                            this.danaBelanjaList.forEach((t) => {
                                var e, n, s, o, l;
                                const _ = new FormData();
                                console.log(t),
                                    _.append("tahun", this.konfigurasiService.getTahun()),
                                    _.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                    _.append("id_unit", String((null === (e = this.subBelanjaForm) || void 0 === e ? void 0 : e.value.id_unit) || 0)),
                                    _.append("id_bl", "0"),
                                    _.append("id_sub_bl", String(this.id_sub_bl || 0)),
                                    _.append("id_dana", t.id_dana),
                                    _.append("nama_dana", t.nama_dana),
                                    _.append("kode_dana", t.kode_dana),
                                    _.append("id_skpd", String((null === (n = this.subBelanjaForm) || void 0 === n ? void 0 : n.value.id_skpd) || 0)),
                                    _.append("id_sub_skpd", String((null === (s = this.subBelanjaForm) || void 0 === s ? void 0 : s.value.id_skpd) || 0)),
                                    _.append("id_program", "0"),
                                    _.append("id_giat", "0"),
                                    _.append("id_sub_giat", "0"),
                                    _.append("pagu_dana", t.pagu_dana || 0),
                                    _.append("id_daerah_log", null === (o = this.userSession) || void 0 === o ? void 0 : o.daerah_id),
                                    _.append("id_user_log", null === (l = this.userSession) || void 0 === l ? void 0 : l.user_id),
                                    console.log(_),
                                    t.id_dana_sub_bl
                                        ? (_.append("id_dana_sub_bl", t.id_dana_sub_bl),
                                          this.danaBelanjaService.update(_).subscribe({
                                              next: (r) => {},
                                              error: (r) => {
                                                  this.toastr.error(r.error.message, "Sumber Dana Error");
                                              },
                                          }))
                                        : this.danaBelanjaService.add(_).subscribe({
                                              next: (r) => {},
                                              error: (r) => {
                                                  this.toastr.error(r.error.message, "Sumber Dana Error");
                                              },
                                          });
                            });
                    }
                    submitDetilLokasi() {
                        var t;
                        null === (t = this.subBelanjaForm) ||
                            void 0 === t ||
                            t.value.lokasi_kegiatan_list.forEach((e) => {
                                var n, s, o, l, _;
                                const r = new FormData();
                                r.append("tahun", this.konfigurasiService.getTahun()),
                                    r.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                    r.append("id_unit", String((null === (n = this.subBelanjaForm) || void 0 === n ? void 0 : n.value.id_unit) || 0)),
                                    r.append("id_bl", "0"),
                                    r.append("id_sub_bl", String(this.id_sub_bl || 0)),
                                    r.append("id_kab_kota", String(e.id_kab_kota || 0)),
                                    r.append("id_camat", String(e.id_camat || 0)),
                                    r.append("id_lurah", String(e.id_lurah || 0)),
                                    r.append("id_skpd", String((null === (s = this.subBelanjaForm) || void 0 === s ? void 0 : s.value.id_skpd) || 0)),
                                    r.append("id_sub_skpd", String((null === (o = this.subBelanjaForm) || void 0 === o ? void 0 : o.value.id_skpd) || 0)),
                                    r.append("id_program", "0"),
                                    r.append("id_giat", "0"),
                                    r.append("id_sub_giat", "0"),
                                    r.append("nama_daerah", ""),
                                    r.append("nama_unit", ""),
                                    r.append("nama_kab_kota", ""),
                                    r.append("nama_camat", ""),
                                    r.append("nama_lurah", ""),
                                    r.append("id_daerah_log", null === (l = this.userSession) || void 0 === l ? void 0 : l.daerah_id),
                                    r.append("id_user_log", null === (_ = this.userSession) || void 0 === _ ? void 0 : _.user_id),
                                    e.id_detil_lokasi
                                        ? (r.append("id_detil_lokasi", e.id_detil_lokasi), this.detilLokasiService.update(r).subscribe({ next: (u) => {}, error: (u) => {} }))
                                        : this.detilLokasiService.add(r).subscribe({ next: (u) => {}, error: (u) => {} });
                            });
                    }
                    submitIndikatorKeluaran() {
                        var t, e, n, s, o, l, _, r, u, k, m, v, g, C, h, f, y, B, F, c, b;
                        const I = new FormData();
                        I.append("id_daerah_log", null === (t = this.userSession) || void 0 === t ? void 0 : t.daerah_id),
                            I.append("id_user_log", null === (e = this.userSession) || void 0 === e ? void 0 : e.user_id),
                            I.append("id_bl", "0"),
                            I.append("tahun", this.konfigurasiService.getTahun()),
                            I.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                            I.append("id_unit", String((null === (n = this.skpdModel) || void 0 === n ? void 0 : n.id_skpd) || 0)),
                            I.append("tolak_ukur", String((null === (o = null === (s = this.subBelanjaForm) || void 0 === s ? void 0 : s.get("indikator_keluaran_list")) || void 0 === o ? void 0 : o.value.tolok_ukur) || 0)),
                            I.append("target", String((null === (_ = null === (l = this.subBelanjaForm) || void 0 === l ? void 0 : l.get("indikator_keluaran_list")) || void 0 === _ ? void 0 : _.value.target) || 0)),
                            I.append("satuan", String((null === (u = null === (r = this.subBelanjaForm) || void 0 === r ? void 0 : r.get("indikator_keluaran_list")) || void 0 === u ? void 0 : u.value.satuan) || 0)),
                            I.append("target_teks", ""),
                            I.append("tolok_ukur_sub", ""),
                            I.append("target_sub", "0"),
                            I.append("satuan_sub", ""),
                            I.append("target_sub_teks", ""),
                            I.append("id_sub_bl", String(this.id_sub_bl || 0)),
                            I.append("id_skpd", String((null === (k = this.skpdModel) || void 0 === k ? void 0 : k.id_skpd) || 0)),
                            I.append("id_sub_skpd", String((null === (m = this.skpdModel) || void 0 === m ? void 0 : m.id_skpd) || 0)),
                            I.append("id_program", String((null === (v = this.subGiatModel) || void 0 === v ? void 0 : v.id_program) || 0)),
                            I.append("id_giat", String((null === (g = this.subGiatModel) || void 0 === g ? void 0 : g.id_giat) || 0)),
                            I.append("id_sub_giat", String((null === (C = this.subGiatModel) || void 0 === C ? void 0 : C.id_sub_giat) || 0)),
                            I.append("nama_daerah", this.nama_daerah || ""),
                            I.append("nama_unit", (null === (h = this.skpdModel) || void 0 === h ? void 0 : h.nama_skpd) || ""),
                            I.append("nama_skpd", (null === (f = this.skpdModel) || void 0 === f ? void 0 : f.nama_skpd) || ""),
                            I.append("nama_sub_skpd", (null === (y = this.skpdModel) || void 0 === y ? void 0 : y.nama_skpd) || ""),
                            I.append("nama_program", this.nama_program || ""),
                            I.append("nama_giat", this.nama_giat || ""),
                            I.append("nama_sub_giat", this.nama_sub_giat || ""),
                            I.append("kode_daerah", ""),
                            I.append("kode_unit", ""),
                            I.append("kode_skpd", ""),
                            I.append("kode_sub_skpd", ""),
                            I.append("kode_program", ""),
                            I.append("kode_giat", ""),
                            I.append("kode_sub_giat", ""),
                            (null === (F = null === (B = this.subBelanjaForm) || void 0 === B ? void 0 : B.get("indikator_keluaran_list")) || void 0 === F ? void 0 : F.value.id_output_bl)
                                ? (I.append("id_output_bl", null === (b = null === (c = this.subBelanjaForm) || void 0 === c ? void 0 : c.get("indikator_keluaran_list")) || void 0 === b ? void 0 : b.value.id_output_bl),
                                  this.indikatorKeluaranService.update(I).subscribe({ next: (x) => {}, error: (x) => {} }))
                                : this.indikatorKeluaranService.add(I).subscribe({ next: (x) => {}, error: (x) => {} });
                    }
                    loadDaerah() {
                        this.daerahSub = this.daerahService.view(this.konfigurasiService.getIdDaerah()).subscribe((t) => {
                            this.nama_daerah = t.data[0].nama_daerah;
                        });
                    }
                    loadSubBelanja() {
                        var t, e;
                        if ("edit" === this.mode || "view" === this.mode) {
                            "edit" === this.mode ? (this.pageTitle = "Ubah Sub Kegiatan Belanja") : "view" === this.mode && (this.pageTitle = "Lihat Sub Kegiatan Belanja");
                            const n = new FormData();
                            n.append("id_daerah", String((null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getIdDaerah()) || 0)),
                                n.append("tahun", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getTahun()) || 0)),
                                (this.subBelanjaIsLoading = !0),
                                (this.subBelanjaSub = this.subBelanjaService.view(String(this.id_sub_bl), n).subscribe({
                                    next: (s) => {
                                        var o, l, _, r, u, k, m, v, g, C, h, f, y, B, F;
                                        (this.subBelanjaIsLoading = !1),
                                            (this.renjaSubBelanja = s.data[0]),
                                            this.renjaSubBelanja &&
                                                (this.loadSkpd(),
                                                (this.bidangUrusanIsLoading = !0),
                                                (this.bidangUrusanSub = this.bidangUrusanService.view(this.renjaSubBelanja.id_bidang_urusan, this.renjaSubBelanja.tahun).subscribe({
                                                    next: (c) => {
                                                        (this.bidangUrusanIsLoading = !1), (this.bidangUrusanModel = c.data[0]);
                                                    },
                                                    error: (c) => {
                                                        this.bidangUrusanIsLoading = !1;
                                                    },
                                                })),
                                                (this.subGiatIsLoading = !0),
                                                (this.subGiatSub = this.subGiatService.view(this.renjaSubBelanja.id_sub_giat, this.konfigurasiService.getTahun()).subscribe({
                                                    next: (c) => {
                                                        (this.subGiatIsLoading = !1), (this.subGiatModel = c.data[0]), (this.nilai_is_xx = "X.XX" == c.data[0].kode_sub_giat.substring(0, 4) ? 1 : 0);
                                                    },
                                                    error: (c) => {
                                                        this.subGiatIsLoading = !1;
                                                    },
                                                })),
                                                null === (o = this.subBelanjaForm) ||
                                                    void 0 === o ||
                                                    o.patchValue({
                                                        id_lokasi: null === (l = this.renjaSubBelanja) || void 0 === l ? void 0 : l.id_lokasi,
                                                        no_sub_giat: null === (_ = this.renjaSubBelanja) || void 0 === _ ? void 0 : _.no_sub_giat.trim(),
                                                        waktu_awal: null === (r = this.renjaSubBelanja) || void 0 === r ? void 0 : r.waktu_awal,
                                                        waktu_akhir: null === (u = this.renjaSubBelanja) || void 0 === u ? void 0 : u.waktu_akhir,
                                                        pagu: null === (k = this.renjaSubBelanja) || void 0 === k ? void 0 : k.pagu,
                                                        pagu_n_depan: null === (m = this.renjaSubBelanja) || void 0 === m ? void 0 : m.pagu_n_depan,
                                                        pagu_n2_depan: null === (v = this.renjaSubBelanja) || void 0 === v ? void 0 : v.pagu_n2_depan,
                                                        output_teks: null === (g = this.renjaSubBelanja) || void 0 === g ? void 0 : g.output_teks,
                                                    }),
                                                null === (h = null === (C = this.subBelanjaForm) || void 0 === C ? void 0 : C.get("id_lokasi")) || void 0 === h || h.disable(),
                                                null === (y = null === (f = this.subBelanjaForm) || void 0 === f ? void 0 : f.get("id_kab_kota")) || void 0 === y || y.disable(),
                                                null === (F = null === (B = this.subBelanjaForm) || void 0 === B ? void 0 : B.get("id_camat")) || void 0 === F || F.disable(),
                                                this.loadLabelBelanja(),
                                                this.loadTagBelanja(),
                                                this.loadDanaBelanja(),
                                                this.loadDetilLokasi(),
                                                this.loadIndikatorKeluaran());
                                    },
                                    error: (s) => {
                                        this.subBelanjaIsLoading = !1;
                                    },
                                }));
                        } else this.mode = "add";
                    }
                    loadSkpd() {
                        var t, e, n, s;
                        (this.skpdIsLoading = !0),
                            (this.skpdSub = this.skpdService
                                .view(
                                    (null === (t = this.renjaSubBelanja) || void 0 === t ? void 0 : t.id_sub_skpd) || (null === (e = this.queryParams) || void 0 === e ? void 0 : e.id_unit) || 0,
                                    (null === (n = this.renjaSubBelanja) || void 0 === n ? void 0 : n.tahun) || this.konfigurasiService.getTahun() || 0,
                                    (null === (s = this.renjaSubBelanja) || void 0 === s ? void 0 : s.id_daerah) || this.konfigurasiService.getIdDaerah() || 0
                                )
                                .subscribe({
                                    next: (o) => {
                                        (this.skpdIsLoading = !1), (this.skpdModel = o.data[0]);
                                    },
                                    error: (o) => {
                                        this.skpdIsLoading = !1;
                                    },
                                }));
                    }
                    loadLabelBelanja() {
                        const t = new FormData();
                        t.append("tahun", this.konfigurasiService.getTahun()),
                            t.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                            t.append("id_sub_bl", String(this.id_sub_bl || 0)),
                            (this.labelBelanjaIsLoading = !0),
                            (this.labelBelanjaSub = this.labelBelanjaService.getByIdSubBl(t).subscribe({
                                next: (e) => {
                                    var n, s, o, l, _, r, u, k, m, v, g, C, h;
                                    (this.labelBelanjaIsLoading = !1),
                                        (this.labelBelanja = null == e ? void 0 : e.data[0]),
                                        this.labelBelanja &&
                                            ((null === (n = this.daerah) || void 0 === n ? void 0 : n.is_pusat) &&
                                                ((this.labelPusatIsLoading = !0),
                                                (this.labelPusatSub = this.labelPusatService.view(String(null === (s = this.labelBelanja) || void 0 === s ? void 0 : s.id_label_pusat)).subscribe({
                                                    next: (f) => {
                                                        (this.labelPusatIsLoading = !1), (this.labelPusatModel = f.data[0]);
                                                    },
                                                    error: (f) => {
                                                        this.labelPusatIsLoading = !1;
                                                    },
                                                }))),
                                            (null === (o = this.daerah) || void 0 === o ? void 0 : o.is_prop) &&
                                                ((this.labelProvinsiIsLoading = !0),
                                                (this.labelProvinsiSub = this.labelProvinsiService
                                                    .view(
                                                        String(null === (l = this.labelBelanja) || void 0 === l ? void 0 : l.id_label_prov),
                                                        String(null === (_ = this.labelBelanja) || void 0 === _ ? void 0 : _.tahun),
                                                        String(null === (r = this.labelBelanja) || void 0 === r ? void 0 : r.id_daerah)
                                                    )
                                                    .subscribe({
                                                        next: (f) => {
                                                            (this.labelProvinsiIsLoading = !1), (this.labelProvinsiModel = f.data[0]);
                                                        },
                                                        error: (f) => {
                                                            this.labelProvinsiIsLoading = !1;
                                                        },
                                                    }))),
                                            (null === (u = this.daerah) || void 0 === u ? void 0 : u.is_pusat) ||
                                                ((this.labelProvinsiIsLoading = !0),
                                                (this.labelProvinsiSub = this.labelProvinsiService
                                                    .view(
                                                        String(null === (k = this.labelBelanja) || void 0 === k ? void 0 : k.id_label_prov),
                                                        String(null === (m = this.labelBelanja) || void 0 === m ? void 0 : m.tahun),
                                                        String(null === (v = this.userSession) || void 0 === v ? void 0 : v.id_prop)
                                                    )
                                                    .subscribe({
                                                        next: (f) => {
                                                            (this.labelProvinsiIsLoading = !1), (this.labelProvinsiModel = f.data[0]);
                                                        },
                                                        error: (f) => {
                                                            this.labelProvinsiIsLoading = !1;
                                                        },
                                                    })),
                                                (this.labelKokabIsLoading = !0),
                                                (this.labelKokabSub = this.labelKokabService
                                                    .view(
                                                        String(null === (g = this.labelBelanja) || void 0 === g ? void 0 : g.id_label_kokab),
                                                        String(null === (C = this.labelBelanja) || void 0 === C ? void 0 : C.tahun),
                                                        String(null === (h = this.labelBelanja) || void 0 === h ? void 0 : h.id_daerah)
                                                    )
                                                    .subscribe({
                                                        next: (f) => {
                                                            (this.labelKokabIsLoading = !1), (this.labelKokabModel = f.data[0]);
                                                        },
                                                        error: (f) => {
                                                            this.labelKokabIsLoading = !1;
                                                        },
                                                    }))));
                                },
                                error: (e) => {
                                    this.labelBelanjaIsLoading = !1;
                                },
                            }));
                    }
                    loadTagBelanja() {
                        var t, e, n;
                        const s = new FormData();
                        s.append("tahun", String((null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun()) || 0)),
                            s.append("id_daerah", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) || 0)),
                            s.append("id_sub_bl", String((null === (n = this.renjaSubBelanja) || void 0 === n ? void 0 : n.id_sub_bl) || 0)),
                            (this.tagBelanjaIsLoading = !0),
                            (this.tagBelanjaListSub = this.tagBelanjaService.getByIdSubBl(s).subscribe({
                                next: (o) => {
                                    (this.tagBelanjaIsLoading = !1),
                                        o.data.forEach((l) => {
                                            this.tagBelanjaList.push(Object.assign(Object.assign({}, new ht()), { id_tag_bl: l.id_tag_bl, id_label_giat: l.id_label_giat }));
                                        });
                                },
                                error: (o) => {
                                    this.tagBelanjaIsLoading = !1;
                                },
                            }));
                    }
                    loadDanaBelanja() {
                        var t, e, n;
                        const s = new FormData();
                        s.append("tahun", String((null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun()) || 0)),
                            s.append("id_daerah", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) || 0)),
                            s.append("id_sub_bl", String((null === (n = this.renjaSubBelanja) || void 0 === n ? void 0 : n.id_sub_bl) || 0)),
                            (this.danaBelanjaIsLoading = !0),
                            (this.danaBelanjaSub = this.danaBelanjaService.getByIdSubBl(s).subscribe({
                                next: (o) => {
                                    (this.danaBelanjaIsLoading = !1), (this.danaBelanjaList = o.data);
                                },
                                error: (o) => {
                                    this.danaBelanjaIsLoading = !1;
                                },
                            }));
                    }
                    loadDetilLokasi() {
                        var t, e, n;
                        const s = new FormData();
                        s.append("tahun", String((null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun()) || 0)),
                            s.append("id_daerah", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) || 0)),
                            s.append("id_sub_bl", String((null === (n = this.renjaSubBelanja) || void 0 === n ? void 0 : n.id_sub_bl) || 0)),
                            (this.detilLokasiIsLoading = !0),
                            (this.detilLokasiSub = this.detilLokasiService.getByIdSubBl(s).subscribe({
                                next: (o) => {
                                    (this.detilLokasiIsLoading = !1),
                                        (this.detilLokasiList = o.data),
                                        this.lokasiKegiatanList.clear(),
                                        o.data.forEach((l) => {
                                            const _ = new FormData();
                                            _.append("id_kab_kota", String(l.id_kab_kota)),
                                                _.append("tahun", String(this.konfigurasiService.getTahun())),
                                                _.append("length", "1000"),
                                                (this.kecamatanIsLoadingArray[l.id_kab_kota] = !0),
                                                (this.kecamatanSub = this.kecamatanService.list(_).subscribe({
                                                    next: (r) => {
                                                        (this.kecamatanIsLoadingArray[l.id_kab_kota] = !1), (this.kecamatanList[l.id_kab_kota] = r.data.data);
                                                        const u = new FormData();
                                                        u.append("id_camat", String(l.id_camat)),
                                                            u.append("tahun", String(this.konfigurasiService.getTahun())),
                                                            u.append("length", "100"),
                                                            (this.kelurahanDesaIsLoadingArray[l.id_camat] = !0),
                                                            (this.kelurahanDesaSub = this.kelurahanService.listByKecamatanAndTahun(u).subscribe({
                                                                next: (k) => {
                                                                    (this.kelurahanDesaIsLoadingArray[l.id_camat] = !1),
                                                                        (this.kelurahanDesaList[l.id_camat] = k.data.data),
                                                                        this.lokasiKegiatanList.push(
                                                                            new p.cw({
                                                                                id_detil_lokasi: new p.NI(l.id_detil_lokasi),
                                                                                id_kab_kota: new p.NI(l.id_kab_kota, [p.kI.maxLength(8)]),
                                                                                id_camat: new p.NI(l.id_camat, [p.kI.maxLength(8)]),
                                                                                id_lurah: new p.NI(l.id_lurah, [p.kI.maxLength(8)]),
                                                                            })
                                                                        );
                                                                },
                                                                error: (k) => {
                                                                    this.kelurahanDesaIsLoadingArray[l.id_camat] = !1;
                                                                },
                                                            }));
                                                    },
                                                    error: (r) => {
                                                        this.kecamatanIsLoadingArray[l.id_kab_kota] = !1;
                                                    },
                                                }));
                                        });
                                },
                                error: (o) => {
                                    this.detilLokasiIsLoading = !1;
                                },
                            }));
                    }
                    loadIndikatorKeluaran() {
                        var t, e, n;
                        const s = new FormData();
                        s.append("tahun", String((null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun()) || 0)),
                            s.append("id_daerah", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) || 0)),
                            s.append("id_sub_bl", String((null === (n = this.renjaSubBelanja) || void 0 === n ? void 0 : n.id_sub_bl) || 0)),
                            (this.indikatorKeluaranIsLoading = !0),
                            (this.indikatorKeluaranSub = this.indikatorKeluaranService.getByIdSubBl(s).subscribe({
                                next: (o) => {
                                    var l, _;
                                    this.indikatorKeluaranIsLoading = !1;
                                    const r = o.data[0];
                                    null === (_ = null === (l = this.subBelanjaForm) || void 0 === l ? void 0 : l.get("indikator_keluaran_list")) ||
                                        void 0 === _ ||
                                        _.patchValue({ tolok_ukur: r.tolak_ukur, satuan: r.satuan, target: r.target, id_output_bl: r.id_output_bl }),
                                        this.indikatorKeluaranList.push(
                                            new p.cw({
                                                id_output_bl: new p.NI(r.id_output_bl),
                                                tolok_ukur: new p.NI(r.tolak_ukur, [p.kI.maxLength(500)]),
                                                target: new p.NI(r.target, [p.kI.maxLength(20)]),
                                                satuan: new p.NI(r.satuan, [p.kI.maxLength(20)]),
                                            })
                                        );
                                },
                                error: (o) => {
                                    this.indikatorKeluaranIsLoading = !1;
                                },
                            }));
                    }
                    loadLokasiList(t) {
                        var e, n;
                        null === (n = null === (e = this.subBelanjaForm) || void 0 === e ? void 0 : e.get("id_lokasi")) || void 0 === n || n.disable(),
                            (this.lokasiListSub = this.daerahService.daerahLokasi(t).subscribe({
                                next: (s) => {
                                    var o, l;
                                    null === (l = null === (o = this.subBelanjaForm) || void 0 === o ? void 0 : o.get("id_lokasi")) || void 0 === l || l.enable(), (this.lokasiList = s.data.data);
                                },
                                error: (s) => {
                                    var o, l;
                                    null === (l = null === (o = this.subBelanjaForm) || void 0 === o ? void 0 : o.get("id_lokasi")) || void 0 === l || l.enable();
                                },
                            }));
                    }
                    loadKotaKabupatenList(t) {
                        var e, n, s, o, l, _;
                        (null === (e = this.daerah) || void 0 === e ? void 0 : e.is_prop)
                            ? ((this.kotaKabupatenIsLoading = !0),
                              (this.kotaKabupatenListSub = this.daerahService.listKabkot(String(t.get("id_daerah"))).subscribe({
                                  next: (r) => {
                                      var u, k;
                                      (this.kotaKabupatenIsLoading = !1),
                                          null === (k = null === (u = this.subBelanjaForm) || void 0 === u ? void 0 : u.get("id_daerah")) || void 0 === k || k.enable(),
                                          (this.kotaKabupatenList = r.data.sort((m, v) => m.nama_daerah.localeCompare(v.nama_daerah)));
                                  },
                                  error: (r) => {
                                      var u, k;
                                      (this.kotaKabupatenIsLoading = !1), null === (k = null === (u = this.subBelanjaForm) || void 0 === u ? void 0 : u.get("id_daerah")) || void 0 === k || k.enable();
                                  },
                              })))
                            : ((this.kotaKabupatenList = [{ id_daerah: Number(null === (n = this.daerah) || void 0 === n ? void 0 : n.id_daerah), nama_daerah: String(null === (s = this.daerah) || void 0 === s ? void 0 : s.nama_daerah) }]),
                              null === (l = null === (o = this.subBelanjaForm) || void 0 === o ? void 0 : o.get("lokasi_kegiatan_list")) ||
                                  void 0 === l ||
                                  l.patchValue([{ id_kab_kota: Number(null === (_ = this.daerah) || void 0 === _ ? void 0 : _.id_daerah), id_camat: 0, id_lurah: 0 }]));
                    }
                    loadKecamatanList(t, e) {
                        this.lokasiKegiatanList.at(e).disable();
                        const n = new FormData();
                        n.append("id_kab_kota", String(t)),
                            n.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                            n.append("length", "100"),
                            this.kecamatanService.listByKotkabAndTahun(n).subscribe({
                                next: (s) => {
                                    this.lokasiKegiatanList.at(e).enable(), (this.kecamatanList[t] = s.data.sort((o, l) => o.camat_teks.localeCompare(l.camat_teks)));
                                },
                                error: (s) => {
                                    this.lokasiKegiatanList.at(e).enable();
                                },
                            });
                    }
                    loadKelurahanDesaList(t, e) {
                        var n;
                        null === (n = this.lokasiKegiatanList.at(e)) || void 0 === n || n.disable();
                        const s = new FormData();
                        s.append("id_camat", String(t)),
                            s.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                            s.append("length", "100"),
                            this.kelurahanService.listByKecamatanAndTahun(s).subscribe({
                                next: (o) => {
                                    var l;
                                    null === (l = this.lokasiKegiatanList.at(e)) || void 0 === l || l.enable(), (this.kelurahanDesaList[t] = o.data.sort((_, r) => _.lurah_teks.localeCompare(r.lurah_teks)));
                                },
                                error: (o) => {
                                    var l;
                                    null === (l = this.lokasiKegiatanList.at(e)) || void 0 === l || l.enable();
                                },
                            });
                    }
                    loadLabelGiatList(t) {
                        this.labelGiatListSub = this.labelKegiatanService.list(t).subscribe({
                            next: (e) => {
                                this.labelGiatMasterList = e.data.data;
                            },
                            error: (e) => {},
                        });
                    }
                    loadSumberDanaList(t) {
                        t.append("length", String(1e3)),
                            (this.sumberDanaListSub = this.sumberDanaService.list(t).subscribe({
                                next: (e) => {
                                    this.sumberDanaMasterList = e.data.data;
                                },
                                error: (e) => {},
                            }));
                    }
                    checkIfEndDateAfterStartDate(t) {
                        var e, n, s, o;
                        return !(null === (e = t.get("waktu_awal")) || void 0 === e ? void 0 : e.value) ||
                            !(null === (n = t.get("waktu_akhir")) || void 0 === n ? void 0 : n.value) ||
                            Number(null === (s = t.get("waktu_akhir")) || void 0 === s ? void 0 : s.value) >= Number(null === (o = t.get("waktu_awal")) || void 0 === o ? void 0 : o.value)
                            ? null
                            : { invalidEndDate: !0 };
                    }
                    cekTahapRenstra() {
                        var t, e, n, s;
                        if (this.isInitialized) return;
                        const o = new FormData();
                        o.append("id_daerah", String(null !== (e = null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getIdDaerah()) && void 0 !== e ? e : 0)),
                            o.append("tahun", String(null !== (s = null === (n = this.konfigurasiService) || void 0 === n ? void 0 : n.getTahun()) && void 0 !== s ? s : 0)),
                            o.append("id_tahap", String(this.id_tahap || 20)),
                            (this.renstraKegiatanIsLoading = !0),
                            (this.renstraKegiatanSub = this.renstraKegiatanService.list(o).subscribe({
                                next: (l) => {
                                    (this.renstraKegiatanIsLoading = !1),
                                        l.data.length > 0
                                            ? (this.renstraCascadingService.setRenstraWasCopied(!0), (this.renstraKegiatanList = l.data), this.isInitialized || ((this.id_tahap = 20), this.renstraCascadingService.setIdTahap(this.id_tahap)))
                                            : this.isInitialized || ((this.id_tahap = 19), this.renstraCascadingService.setIdTahap(this.id_tahap), this.cekTahapRenstra()),
                                        (this.isInitialized = !0);
                                },
                                error: (l) => {
                                    this.renstraKegiatanIsLoading = !1;
                                },
                            }));
                    }
                    makeid(t) {
                        let e = "";
                        const n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
                            s = n.length;
                        let o = 0;
                        for (; o < t; ) (e += n.charAt(Math.floor(Math.random() * s))), (o += 1);
                        return e;
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(
                            a.Y36(Aa.gz),
                            a.Y36(aa.Kz),
                            a.Y36(Na._W),
                            a.Y36(Ra.W),
                            a.Y36(Wa.x),
                            a.Y36(ge.Y),
                            a.Y36(me.A),
                            a.Y36(be.c),
                            a.Y36(vt.P),
                            a.Y36(kt.W),
                            a.Y36(it.b),
                            a.Y36(nt.E),
                            a.Y36(ve),
                            a.Y36(at),
                            a.Y36(ft),
                            a.Y36(ke),
                            a.Y36(_t.w),
                            a.Y36(pt.O),
                            a.Y36(fe.O),
                            a.Y36(Se.I),
                            a.Y36(je),
                            a.Y36(za.J),
                            a.Y36(Te.V),
                            a.Y36(tt.b)
                        );
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-kegiatan-belanja-form"]],
                        viewQuery: function (t, e) {
                            if ((1 & t && (a.Gf(ws, 7), a.Gf(Ds, 7), a.Gf(Rs, 7), a.Gf(As, 7), a.Gf(Fs, 7), a.Gf(Us, 7)), 2 & t)) {
                                let n;
                                a.iGM((n = a.CRH())) && (e.skpdInstance = n.first),
                                    a.iGM((n = a.CRH())) && (e.bidangUrusanInstance = n.first),
                                    a.iGM((n = a.CRH())) && (e.labelPusatInstance = n.first),
                                    a.iGM((n = a.CRH())) && (e.labelProvinsiInstance = n.first),
                                    a.iGM((n = a.CRH())) && (e.labelKokabInstance = n.first),
                                    a.iGM((n = a.CRH())) && (e.subGiatInstance = n.first);
                            }
                        },
                        decls: 7,
                        vars: 3,
                        consts: [
                            [1, "modal-header"],
                            [1, "fw-bolder", "m-0"],
                            ["type", "button", "aria-label", "Close", 1, "btn-close", 3, "click"],
                            [1, "card", "mb-3"],
                            ["class", "d-flex justify-content-center mt-20 mb-20", 4, "ngIf"],
                            ["class", "collapse show", 4, "ngIf"],
                            [1, "d-flex", "justify-content-center", "mt-20", "mb-20"],
                            [1, "spinner-border"],
                            [1, "collapse", "show"],
                            ["novalidate", "", "class", "form", 3, "formGroup", "submit", 4, "ngIf"],
                            ["novalidate", "", 1, "form", 3, "formGroup", "submit"],
                            [1, "card-body", "border-top", "p-9"],
                            [1, "row", "mb-6"],
                            ["for", "skpd-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [1, "col"],
                            [1, "position-relative", "is-loading"],
                            [
                                "id",
                                "skpd-autocomplete",
                                "type",
                                "text",
                                "maxlength",
                                "255",
                                "required",
                                "",
                                "placeholder",
                                "SKPD atau Sub Unit...",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngModelOptions",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["skpdInstance", "ngbTypeahead"],
                            ["class", "spinner-border spinner-border-sm mt-1", 4, "ngIf"],
                            ["class", "row mb-6 align-items-center", 4, "ngIf"],
                            [1, "row", "mb-6", "align-items-center"],
                            ["for", "label-provinsi-autocomplete", 1, "col-lg-4", "col-form-label", "fw-bold", "fs-6"],
                            [
                                "id",
                                "label-provinsi-autocomplete",
                                "type",
                                "text",
                                "maxlength",
                                "255",
                                "placeholder",
                                "Prioritas Pembangunan Provinsi...",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngModelOptions",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "disabled",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["labelProvinsiInstance", "ngbTypeahead"],
                            ["for", "sub-kegiatan-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [
                                "id",
                                "renstra-sub-kegiatan-autocomplete",
                                "type",
                                "text",
                                "maxlength",
                                "255",
                                "required",
                                "",
                                "placeholder",
                                "Sub Kegiatan...",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngModelOptions",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "disabled",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["subGiatInstance", "ngbTypeahead"],
                            ["class", "row mb-6", 4, "ngIf"],
                            ["for", "tag_belanja_list", 1, "col-lg-4", "col-form-label", "fw-bold", "fs-6"],
                            [1, "row", "mb-1"],
                            [1, "col-6"],
                            ["class", "btn btn-sm btn-primary", "type", "button", 3, "disabled", "click", 4, "ngIf"],
                            [4, "ngFor", "ngForOf"],
                            ["for", "sumber_dana", 1, "col-lg-4", "col-form-label", "fw-bold", "fs-6"],
                            ["for", "label_sub_kegiatan", 1, "col-lg-4", "col-form-label", "fw-bold", "fs-6"],
                            [1, "col-lg-8", "fv-row"],
                            ["formControlName", "id_lokasi", "id", "id_lokasi", 1, "form-select", 3, "disabled"],
                            ["value", ""],
                            [3, "value", "selected", 4, "ngFor", "ngForOf"],
                            ["for", "lokasi_sub_kegiatan", 1, "col-lg-4", "col-form-label", "fw-bold", "fs-6"],
                            ["formArrayName", "lokasi_kegiatan_list"],
                            [1, "col-lg-4", "col-form-label", "fw-bold", "fs-6"],
                            [1, "row"],
                            [1, "col-5"],
                            ["formControlName", "waktu_awal", 1, "form-select", 3, "disabled"],
                            ["value", "1"],
                            ["value", "2"],
                            ["value", "3"],
                            ["value", "4"],
                            ["value", "5"],
                            ["value", "6"],
                            ["value", "7"],
                            ["value", "8"],
                            ["value", "9"],
                            ["value", "10"],
                            ["value", "11"],
                            ["value", "12"],
                            [1, "col-2", "d-flex", "justify-content-center", "align-items-center"],
                            [1, "text-center"],
                            ["formControlName", "waktu_akhir", 1, "form-select", 3, "disabled"],
                            ["for", "anggaran_sub_kegiatan", 1, "col-lg-4", "col-form-label", "fw-bold", "fs-6"],
                            [
                                "formControlName",
                                "pagu",
                                "id",
                                "anggaran_sub_kegiatan",
                                "type",
                                "text",
                                "maxlength",
                                "26",
                                "mask",
                                "separator.2",
                                "thousandSeparator",
                                ",",
                                "prefix",
                                "Rp ",
                                "readonly",
                                "",
                                1,
                                "form-control",
                                "form-control-solid",
                                3,
                                "disabled",
                                "allowNegativeNumbers",
                            ],
                            ["for", "anggaran_depan_sub_kegiatan", 1, "col-lg-4", "col-form-label", "fw-bold", "fs-6"],
                            [
                                "formControlName",
                                "pagu_n_depan",
                                "id",
                                "anggaran_depan_sub_kegiatan",
                                "type",
                                "text",
                                "maxlength",
                                "26",
                                "mask",
                                "separator.2",
                                "thousandSeparator",
                                ",",
                                "prefix",
                                "Rp ",
                                1,
                                "form-control",
                                3,
                                "allowNegativeNumbers",
                                "disabled",
                            ],
                            ["for", "anggaran_depan2_sub_kegiatan", 1, "col-lg-4", "col-form-label", "fw-bold", "fs-6"],
                            [
                                "formControlName",
                                "pagu_n2_depan",
                                "id",
                                "anggaran_depan2_sub_kegiatan",
                                "type",
                                "text",
                                "maxlength",
                                "26",
                                "mask",
                                "separator.2",
                                "thousandSeparator",
                                ",",
                                "prefix",
                                "Rp ",
                                1,
                                "form-control",
                                3,
                                "allowNegativeNumbers",
                                "disabled",
                            ],
                            ["for", "indikator_keluaran_sub_kegiatan", 1, "col-lg-4", "col-form-label", "fw-bold", "fs-6"],
                            ["formGroupName", "indikator_keluaran_list", 1, "row", "mb-1"],
                            ["formControlName", "tolok_ukur", "id", "tolok_ukur", "type", "text", "placeholder", "Tolok Ukur", "readonly", "", 1, "form-control", "form-control-solid", 3, "disabled"],
                            [1, "col-3"],
                            ["formControlName", "target", "id", "target", "type", "text", "placeholder", "Target", "maxlength", "20", 1, "form-control"],
                            ["formControlName", "satuan", "id", "satuan", "type", "text", "placeholder", "Satuan", "maxlength", "50", "readonly", "", 1, "form-control", "form-control-solid", 3, "disabled"],
                            [1, "card-footer", "d-flex", "justify-content-between", "py-5", "px-9"],
                            [1, "btn", "btn-outline-danger", 3, "click"],
                            ["type", "submit", "class", "btn btn-success", 3, "disabled", 4, "ngIf"],
                            [1, "spinner-border", "spinner-border-sm", "mt-1"],
                            ["for", "label-pusat-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [
                                "id",
                                "label-pusat-autocomplete",
                                "type",
                                "text",
                                "maxlength",
                                "255",
                                "required",
                                "",
                                "placeholder",
                                "Prioritas Pembangunan Pusat...",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngModelOptions",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "disabled",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["labelPusatInstance", "ngbTypeahead"],
                            ["for", "label-kokab-autocomplete", 1, "col-lg-4", "col-form-label", "fw-bold", "fs-6"],
                            [
                                "id",
                                "label-kokab-autocomplete",
                                "type",
                                "text",
                                "maxlength",
                                "255",
                                "placeholder",
                                "Prioritas Pembangunan Kota/Kabupaten...",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngModelOptions",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "disabled",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["labelKokabInstance", "ngbTypeahead"],
                            ["for", "bidang-urusan-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [
                                "id",
                                "bidang-urusan-autocomplete",
                                "type",
                                "text",
                                "maxlength",
                                "255",
                                "required",
                                "",
                                1,
                                "form-control",
                                3,
                                "ngModel",
                                "ngModelOptions",
                                "ngbTypeahead",
                                "inputFormatter",
                                "resultFormatter",
                                "editable",
                                "disabled",
                                "placeholder",
                                "ngModelChange",
                                "focus",
                                "click",
                            ],
                            ["bidangUrusanInstance", "ngbTypeahead"],
                            ["type", "button", 1, "btn", "btn-sm", "btn-primary", 3, "disabled", "click"],
                            [3, "mode", "tagBelanja", "removeTagBelanja", "labelGiatChanged"],
                            [3, "mode", "danaBelanja", "removeDanaBelanja", "danaBelanjaChanged", "sumberDanaValid"],
                            [3, "value", "selected"],
                            [1, "row", "mb-1", 3, "formGroupName"],
                            [1, "col-4"],
                            ["formControlName", "id_kab_kota", 1, "form-select", 3, "id", "disabled", "change"],
                            [3, "value", 4, "ngFor", "ngForOf"],
                            ["formControlName", "id_camat", 1, "form-select", 3, "id", "disabled", "change"],
                            ["formControlName", "id_lurah", 1, "form-select", 3, "id", "disabled"],
                            [1, "col-2"],
                            ["class", "btn btn-sm btn-danger", "type", "button", 3, "click", 4, "ngIf"],
                            [3, "value"],
                            ["type", "button", 1, "btn", "btn-sm", "btn-danger", 3, "click"],
                            ["type", "submit", 1, "btn", "btn-success", 3, "disabled"],
                            [4, "ngIf"],
                            ["clas", "indicator-progress"],
                            [1, "spinner-border", "spinner-border-sm", "align-middle", "ms-2"],
                        ],
                        template: function (t, e) {
                            1 & t &&
                                (a.TgZ(0, "div", 0)(1, "h3", 1),
                                a._uU(2),
                                a.qZA(),
                                a.TgZ(3, "button", 2),
                                a.NdJ("click", function () {
                                    return e.activeModal.dismiss("Cross click");
                                }),
                                a.qZA()(),
                                a.TgZ(4, "div", 3),
                                a.YNc(5, Zs, 2, 0, "div", 4),
                                a.YNc(6, lo, 2, 1, "div", 5),
                                a.qZA()),
                                2 & t &&
                                    (a.xp6(2),
                                    a.Oqu(e.pageTitle),
                                    a.xp6(3),
                                    a.Q6J("ngIf", !e.subBelanjaForm || e.subBelanjaIsLoading || e.detilLokasiIsLoading || e.kotaKabupatenIsLoading || e.danaBelanjaIsLoading || !e.daerah),
                                    a.xp6(1),
                                    a.Q6J("ngIf", e.subBelanjaForm && !e.subBelanjaIsLoading && !e.detilLokasiIsLoading && !e.kotaKabupatenIsLoading && !e.danaBelanjaIsLoading && e.daerah));
                        },
                        directives: [j.O5, p._Y, p.JL, p.sg, p.Fj, aa.dR, p.nD, p.Q7, p.JJ, p.On, j.sg, Ts, Ls, p.EJ, p.u, p.YN, p.Kr, p.CE, p.x0, ot.hx],
                        styles: [""],
                    })),
                    i
                );
            })();
            var Ie = D(76252);
            let jt = (() => {
                class i {
                    constructor(t) {
                        (this.http = t), (this.API_URL = `${Ka.N.apiUrlRenja}`);
                    }
                    list(t) {
                        return this.http.post(this.API_URL + "/staf_sub_bl/list", t);
                    }
                    add(t) {
                        return this.http.post(this.API_URL + "/staf_sub_bl/add", t);
                    }
                    view(t, e) {
                        return this.http.post(this.API_URL + `/staf_sub_bl/view/${t}`, e);
                    }
                    update(t) {
                        return this.http.post(this.API_URL + "/staf_sub_bl/update", t);
                    }
                    listOperatorBelanja(t) {
                        return this.http.post(this.API_URL + "/staf_sub_bl/list_operator_belanja", t);
                    }
                    addOperatorBelanja(t) {
                        return this.http.post(this.API_URL + "/staf_sub_bl/add_operator", t);
                    }
                    removeOperatorBelanja(t) {
                        return this.http.post(this.API_URL + "/staf_sub_bl/remove_operator", t);
                    }
                    findIdStaf(t) {
                        return this.http.post(this.API_URL + "/staf_sub_bl/find_id_staf", t);
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.LFG(Pa.eN));
                    }),
                    (i.ɵprov = a.Yz7({ token: i, factory: i.ɵfac, providedIn: "root" })),
                    i
                );
            })();
            var Be = D(21615);
            function ro(i, d) {
                1 & i && (a.TgZ(0, "div", 6), a._UZ(1, "div", 7), a.qZA());
            }
            function uo(i, d) {
                1 & i && (a.TgZ(0, "th", 33), a._uU(1, " NIP "), a.qZA());
            }
            function _o(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 34), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.xp6(1), a.hij(" ", t.nip, " ");
                }
            }
            function po(i, d) {
                1 & i && (a.TgZ(0, "th", 33), a._uU(1, " Nama User "), a.qZA());
            }
            function co(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 34), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.xp6(1), a.hij(" ", t.nama_user, " ");
                }
            }
            function ho(i, d) {
                1 & i && (a.TgZ(0, "th", 35), a._uU(1, " Aksi "), a.qZA());
            }
            function go(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "td", 36)(1, "input", 37),
                        a.NdJ("change", function (n) {
                            const o = a.CHM(t).$implicit;
                            return a.oxw(2).onCheckChange(n, o);
                        }),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = d.$implicit,
                        e = a.oxw(2);
                    a.xp6(1), a.Q6J("checked", t.is_selected)("disabled", t.is_disabled || e.isSaving);
                }
            }
            function mo(i, d) {
                1 & i && (a.TgZ(0, "th", 38), a._uU(1, " ID User "), a.qZA());
            }
            function bo(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 39), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", t.id_user, " ");
                }
            }
            function vo(i, d) {
                1 & i && a._UZ(0, "tr", 40);
            }
            function ko(i, d) {
                1 & i && a._UZ(0, "tr", 41);
            }
            const fo = function () {
                return [10];
            };
            function So(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div")(1, "div", 8),
                        a._uU(2),
                        a.qZA(),
                        a.TgZ(3, "div", 9)(4, "div", 10)(5, "div", 11)(6, "div", 12),
                        a._UZ(7, "span", 13),
                        a.TgZ(8, "input", 14),
                        a.NdJ("keyup", function (n) {
                            return a.CHM(t), a.oxw().applyFilter(n);
                        }),
                        a.qZA()()()()(),
                        a.TgZ(9, "div", 15)(10, "div", 16)(11, "table", 17),
                        a.ynx(12, 18),
                        a.YNc(13, uo, 2, 0, "th", 19),
                        a.YNc(14, _o, 2, 1, "td", 20),
                        a.BQk(),
                        a.ynx(15, 21),
                        a.YNc(16, po, 2, 0, "th", 19),
                        a.YNc(17, co, 2, 1, "td", 20),
                        a.BQk(),
                        a.ynx(18, 22),
                        a.YNc(19, ho, 2, 0, "th", 23),
                        a.YNc(20, go, 2, 2, "td", 24),
                        a.BQk(),
                        a.ynx(21, 25),
                        a.YNc(22, mo, 2, 0, "th", 26),
                        a.YNc(23, bo, 2, 2, "td", 27),
                        a.BQk(),
                        a.YNc(24, vo, 1, 0, "tr", 28),
                        a.YNc(25, ko, 1, 0, "tr", 29),
                        a.qZA(),
                        a._UZ(26, "mat-paginator", 30),
                        a.qZA()(),
                        a.TgZ(27, "div", 31)(28, "button", 32),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().activeModal.close("Close click");
                        }),
                        a._uU(29, " Tutup "),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw();
                    a.xp6(2),
                        a.hij(" Maksimal ", t.kuotaStaf, " orang dalam 1 sub kegiatan ini. "),
                        a.xp6(5),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen021.svg"),
                        a.xp6(4),
                        a.Q6J("dataSource", t.dataSource),
                        a.xp6(13),
                        a.Q6J("matHeaderRowDef", t.displayedColumns),
                        a.xp6(1),
                        a.Q6J("matRowDefColumns", t.displayedColumns),
                        a.xp6(1),
                        a.Q6J("pageSizeOptions", a.DdM(7, fo)),
                        a.xp6(2),
                        a.Q6J("disabled", t.isSaving);
                }
            }
            let jo = (() => {
                class i {
                    constructor(t, e, n, s, o, l) {
                        (this.activeModal = t),
                            (this.toastr = e),
                            (this.konfigurasiService = n),
                            (this.userHandleService = s),
                            (this.renjaStafBelanjaService = o),
                            (this.xtraStafSgtService = l),
                            (this.pageTitle = "Daftar Staf di Perangkat Daerah"),
                            (this.isSaving = !1),
                            (this.findAnggotaSkpdIsLoading = !1),
                            (this.listOperatorBelanjaIsLoading = !1),
                            (this.allDataIsLoaded = !1),
                            (this.findAnggotaSkpdIsLoaded = !1),
                            (this.listOperatorBelanjaIsLoaded = !1),
                            (this.anggotaSkpdList = []),
                            (this.stafBelanjaList = []),
                            (this.display = []),
                            (this.dataSource = new L.by(this.stafBelanjaList)),
                            (this.displayedColumns = ["nip", "nama_user", "aksi"]),
                            (this.isDeleting = !1),
                            (this.kuotaStaf = 2);
                    }
                    set paginator(t) {
                        this.dataSource.paginator = t;
                    }
                    set sort(t) {
                        this.dataSource.sort = t;
                    }
                    ngOnInit() {
                        this.loadData();
                    }
                    applyFilter(t) {
                        let e;
                        (e = t.target.value), (this.dataSource.filter = null == e ? void 0 : e.toLowerCase());
                    }
                    onCheckChange(t, e) {
                        this.display.forEach((n) => {
                            n.id_user === e.id_user && (n.is_selected = t.target.checked);
                        }),
                            (this.selectedUserCount = this.display.filter((n) => n.is_selected).length),
                            this.display.forEach(
                                this.selectedUserCount >= this.kuotaStaf
                                    ? (n) => {
                                          n.is_selected || (n.is_disabled = !0);
                                      }
                                    : (n) => {
                                          n.is_disabled = !1;
                                      }
                            ),
                            t.target.checked ? this.addStafOperator(e.id_user) : this.removeStafOperator(e.id_user);
                    }
                    loadData() {
                        var t, e, n, s, o;
                        const l = new FormData();
                        l.append("id_daerah", String(null === (t = this.subBelanja) || void 0 === t ? void 0 : t.id_daerah)),
                            l.append("id_skpd", String(null === (e = this.subBelanja) || void 0 === e ? void 0 : e.id_sub_skpd)),
                            l.append("tahun", this.konfigurasiService.getTahun()),
                            (this.findAnggotaSkpdIsLoading = !0),
                            this.userHandleService.findAnggotaSkpd(l).subscribe({
                                next: (r) => {
                                    (this.findAnggotaSkpdIsLoading = !1),
                                        (this.anggotaSkpdList = r.data),
                                        (this.findAnggotaSkpdIsLoaded = !0),
                                        (this.xtraStafSgtIsLoading = !0),
                                        (this.xtraStafSgtSub = this.xtraStafSgtService.getByDaerahAndSubGiat(this.subBelanja.id_daerah, this.subBelanja.id_sub_giat).subscribe({
                                            next: (u) => {
                                                var k, m;
                                                (this.xtraStafSgtIsLoading = !1),
                                                    (this.xtraStafSgtIsLoaded = !0),
                                                    (this.kuotaStaf = (null === (k = u.data[0]) || void 0 === k ? void 0 : k.vol_staf) || 2),
                                                    null === (m = this.xtraStafSgtSub) || void 0 === m || m.unsubscribe(),
                                                    this.buildDataSource();
                                            },
                                            error: (u) => {
                                                var k;
                                                (this.xtraStafSgtIsLoading = !1), null === (k = this.xtraStafSgtSub) || void 0 === k || k.unsubscribe();
                                            },
                                        }));
                                },
                                error: (r) => {
                                    this.findAnggotaSkpdIsLoading = !1;
                                },
                            });
                        const _ = new FormData();
                        _.append("id_daerah", String(null === (n = this.subBelanja) || void 0 === n ? void 0 : n.id_daerah)),
                            _.append("tahun", String(null === (s = this.subBelanja) || void 0 === s ? void 0 : s.tahun)),
                            _.append("id_sub_bl", String(null === (o = this.subBelanja) || void 0 === o ? void 0 : o.id_sub_bl)),
                            (this.listOperatorBelanjaIsLoading = !0),
                            this.renjaStafBelanjaService.listOperatorBelanja(_).subscribe({
                                next: (r) => {
                                    (this.listOperatorBelanjaIsLoading = !1), (this.stafBelanjaList = r.data), (this.listOperatorBelanjaIsLoaded = !0), this.buildDataSource();
                                },
                                error: (r) => {
                                    this.listOperatorBelanjaIsLoading = !1;
                                },
                            });
                    }
                    buildDataSource() {
                        var t;
                        let e = 0;
                        !this.allDataIsLoaded &&
                            this.findAnggotaSkpdIsLoaded &&
                            this.listOperatorBelanjaIsLoaded &&
                            this.xtraStafSgtIsLoaded &&
                            (null === (t = this.anggotaSkpdList) ||
                                void 0 === t ||
                                t.forEach((n) => {
                                    var s;
                                    const o = null === (s = this.stafBelanjaList) || void 0 === s ? void 0 : s.some((l) => l.id_staf === n.id_user);
                                    (this.display[e] = { is_selected: o, id_user: n.id_user, nip: n.nip, nama_user: n.nama_user }), e++;
                                }),
                            (this.dataSource.data = this.display),
                            (this.dataSource.paginator = this.paginator),
                            (this.dataSource.sort = this.sort),
                            (this.allDataIsLoaded = !0),
                            (this.selectedUserCount = this.display.filter((n) => n.is_selected).length),
                            this.display.forEach(
                                this.selectedUserCount >= this.kuotaStaf
                                    ? (n) => {
                                          n.is_selected || (n.is_disabled = !0);
                                      }
                                    : (n) => {
                                          n.is_disabled = !1;
                                      }
                            ));
                    }
                    addStafOperator(t) {
                        var e, n, s, o, l, _, r, u, k, m, v;
                        const g = new FormData();
                        g.append("tahun", String(null === (e = this.subBelanja) || void 0 === e ? void 0 : e.tahun)),
                            g.append("id_daerah", String(null === (n = this.subBelanja) || void 0 === n ? void 0 : n.id_daerah)),
                            g.append("id_unit", String(null === (s = this.subBelanja) || void 0 === s ? void 0 : s.id_unit)),
                            g.append("id_bl", String(null === (o = this.subBelanja) || void 0 === o ? void 0 : o.id_bl)),
                            g.append("id_sub_bl", String(null === (l = this.subBelanja) || void 0 === l ? void 0 : l.id_sub_bl)),
                            g.append("id_skpd", String(null === (_ = this.subBelanja) || void 0 === _ ? void 0 : _.id_skpd)),
                            g.append("id_sub_skpd", String(null === (r = this.subBelanja) || void 0 === r ? void 0 : r.id_sub_skpd)),
                            g.append("id_program", String(null === (u = this.subBelanja) || void 0 === u ? void 0 : u.id_program)),
                            g.append("id_giat", String(null === (k = this.subBelanja) || void 0 === k ? void 0 : k.id_giat)),
                            g.append("id_sub_giat", String(null === (m = this.subBelanja) || void 0 === m ? void 0 : m.id_sub_giat)),
                            g.append("id_staf", String(t)),
                            g.append("id_unik", String(null === (v = this.subBelanja) || void 0 === v ? void 0 : v.id_unik)),
                            (this.isSaving = !0),
                            this.renjaStafBelanjaService.addOperatorBelanja(g).subscribe({
                                next: (C) => {
                                    (this.isSaving = !1), this.toastr.success("Berhasil menambahkan staf operator", "Sukses");
                                },
                                error: (C) => {
                                    this.isSaving = !1;
                                    const h = C.error;
                                    h.hasOwnProperty("app-error") ? this.toastr.error(`${h.message}`, "Kesalahan") : this.toastr.error("Gagal menambahkan staf operator", "Error!");
                                },
                            });
                    }
                    removeStafOperator(t) {
                        var e, n, s;
                        const o = new FormData();
                        o.append("id_daerah", String(null === (e = this.subBelanja) || void 0 === e ? void 0 : e.id_daerah)),
                            o.append("tahun", String(null === (n = this.subBelanja) || void 0 === n ? void 0 : n.tahun)),
                            o.append("id_sub_bl", String(null === (s = this.subBelanja) || void 0 === s ? void 0 : s.id_sub_bl)),
                            o.append("id_staf", String(t)),
                            this.renjaStafBelanjaService.removeOperatorBelanja(o).subscribe({ next: (l) => {}, error: (l) => {} });
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(aa.Kz), a.Y36(Na._W), a.Y36(Ra.W), a.Y36(Ie.C), a.Y36(jt), a.Y36(Be.w));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-staf-operator"]],
                        viewQuery: function (t, e) {
                            if ((1 & t && (a.Gf(X.NW, 5), a.Gf(S.YE, 5)), 2 & t)) {
                                let n;
                                a.iGM((n = a.CRH())) && (e.paginator = n.first), a.iGM((n = a.CRH())) && (e.sort = n.first);
                            }
                        },
                        decls: 7,
                        vars: 3,
                        consts: [
                            [1, "modal-header"],
                            [1, "fw-bolder", "m-0"],
                            ["type", "button", "aria-label", "Close", 1, "btn-close", 3, "click"],
                            [1, "card", "card-xl-stretch", "mb-xl-8"],
                            ["class", "d-flex justify-content-center mt-20 mb-20", 4, "ngIf"],
                            [4, "ngIf"],
                            [1, "d-flex", "justify-content-center", "mt-20", "mb-20"],
                            [1, "spinner-border"],
                            [1, "alert", "alert-info"],
                            [1, "card-header", "border-0", "pt-3"],
                            [1, "card-title"],
                            [1, "col"],
                            [1, "d-flex", "align-items-center", "position-relative", "my-1"],
                            [1, "svg-icon", "svg-icon-1", "position-absolute", "ms-4", 3, "inlineSVG"],
                            ["type", "text", "placeholder", "Pencarian", "maxlength", "50", 1, "form-control", "form-control-solid", "w-250px", "ps-14", 3, "keyup"],
                            [1, "card-body", "py-3"],
                            [1, "table-responsive"],
                            ["mat-table", "", "matSort", "", 1, "table", "table-row-dashed", "table-row-gray-300", "align-middle", "gs-0", "gy-4", 3, "dataSource"],
                            ["matColumnDef", "nip"],
                            ["mat-header-cell", "", "mat-sort-header", "", "class", "fw-bolder text-muted pe-3", 4, "matHeaderCellDef"],
                            ["mat-cell", "", "class", "pe-3", 4, "matCellDef"],
                            ["matColumnDef", "nama_user"],
                            ["matColumnDef", "aksi"],
                            ["mat-header-cell", "", "class", "fw-bolder text-center text-muted w-80px", 4, "matHeaderCellDef"],
                            ["mat-cell", "", "class", "text-center", 4, "matCellDef"],
                            ["matColumnDef", "id_user"],
                            ["mat-header-cell", "", "class", "fw-bolder text-muted", 4, "matHeaderCellDef"],
                            ["mat-cell", "", 4, "matCellDef"],
                            ["mat-header-row", "", 4, "matHeaderRowDef"],
                            ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                            ["showFirstLastButtons", "", 3, "pageSizeOptions"],
                            [1, "card-footer", "d-flex", "justify-content-end", "py-6", "px-9"],
                            ["type", "button", "data-dismiss", "modal", "id", "tutup_formstaf", 1, "btn", "btn-default", 3, "disabled", "click"],
                            ["mat-header-cell", "", "mat-sort-header", "", 1, "fw-bolder", "text-muted", "pe-3"],
                            ["mat-cell", "", 1, "pe-3"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-center", "text-muted", "w-80px"],
                            ["mat-cell", "", 1, "text-center"],
                            ["type", "checkbox", 1, "form-check-input", 3, "checked", "disabled", "change"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-muted"],
                            ["mat-cell", ""],
                            ["mat-header-row", ""],
                            ["mat-row", ""],
                        ],
                        template: function (t, e) {
                            1 & t &&
                                (a.TgZ(0, "div", 0)(1, "h3", 1),
                                a._uU(2),
                                a.qZA(),
                                a.TgZ(3, "button", 2),
                                a.NdJ("click", function () {
                                    return e.activeModal.dismiss("Cross click");
                                }),
                                a.qZA()(),
                                a.TgZ(4, "div", 3),
                                a.YNc(5, ro, 2, 0, "div", 4),
                                a.YNc(6, So, 30, 8, "div", 5),
                                a.qZA()),
                                2 & t &&
                                    (a.xp6(2),
                                    a.Oqu(e.pageTitle),
                                    a.xp6(3),
                                    a.Q6J("ngIf", e.listOperatorBelanjaIsLoading || e.findAnggotaSkpdIsLoading || e.xtraStafSgtIsLoading),
                                    a.xp6(1),
                                    a.Q6J("ngIf", !e.listOperatorBelanjaIsLoading && !e.findAnggotaSkpdIsLoading && !e.xtraStafSgtIsLoading));
                        },
                        directives: [j.O5, Ma.d$, L.BZ, S.YE, L.w1, L.fO, L.ge, S.nU, L.Dz, L.ev, L.as, L.XQ, L.nj, L.Gk, X.NW],
                        styles: [""],
                    })),
                    i
                );
            })();
            var xe = D(51518);
            function To(i, d) {
                1 & i && (a.TgZ(0, "div", 6), a._UZ(1, "div", 7), a.qZA());
            }
            function Io(i, d) {
                1 & i && (a.TgZ(0, "th", 32), a._uU(1, " NIP "), a.qZA());
            }
            function Bo(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 33), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.xp6(1), a.hij(" ", t.nip, " ");
                }
            }
            function xo(i, d) {
                1 & i && (a.TgZ(0, "th", 32), a._uU(1, " Nama User "), a.qZA());
            }
            function Co(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 33), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.xp6(1), a.hij(" ", t.nama_user, " ");
                }
            }
            function yo(i, d) {
                1 & i && a._UZ(0, "th", 34);
            }
            function Lo(i, d) {
                1 & i && (a.ynx(0), a._UZ(1, "span", 30), a.BQk()), 2 & i && (a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen027.svg"));
            }
            function wo(i, d) {
                1 & i && (a.ynx(0), a.TgZ(1, "span", 37), a._UZ(2, "span", 38), a.qZA(), a.BQk()), 2 & i && (a.xp6(1), a.Udp("display", "block"));
            }
            function Do(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "td", 35)(1, "button", 36),
                        a.NdJ("click", function () {
                            const s = a.CHM(t).$implicit;
                            return a.oxw(2).removeStafOperator(s.id_user);
                        }),
                        a.YNc(2, Lo, 2, 1, "ng-container", 5),
                        a.YNc(3, wo, 3, 2, "ng-container", 5),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = d.$implicit,
                        e = a.oxw(2);
                    a.xp6(1), a.Q6J("disabled", e.isDeleting), a.xp6(1), a.Q6J("ngIf", !e.isDeleting || e.id_to_delete != t.id_user), a.xp6(1), a.Q6J("ngIf", e.isDeleting && e.id_to_delete == t.id_user);
                }
            }
            function Ro(i, d) {
                1 & i && a._UZ(0, "tr", 39);
            }
            function Ao(i, d) {
                1 & i && a._UZ(0, "tr", 40);
            }
            const Fo = function () {
                return [10];
            };
            function Uo(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div")(1, "div", 8),
                        a._uU(2),
                        a.qZA(),
                        a.TgZ(3, "div", 9)(4, "div", 10)(5, "div", 11)(6, "table", 12)(7, "tbody")(8, "tr")(9, "td", 13),
                        a._uU(10, "Sub Unit"),
                        a.qZA(),
                        a.TgZ(11, "td", 14),
                        a._uU(12, ":"),
                        a.qZA(),
                        a.TgZ(13, "td"),
                        a._uU(14),
                        a.qZA()(),
                        a.TgZ(15, "tr")(16, "td", 13),
                        a._uU(17, "Kegiatan"),
                        a.qZA(),
                        a.TgZ(18, "td", 14),
                        a._uU(19, ":"),
                        a.qZA(),
                        a.TgZ(20, "td"),
                        a._uU(21),
                        a.qZA()(),
                        a.TgZ(22, "tr")(23, "td", 13),
                        a._uU(24, "Sub Kegiatan"),
                        a.qZA(),
                        a.TgZ(25, "td", 14),
                        a._uU(26, ":"),
                        a.qZA(),
                        a.TgZ(27, "td"),
                        a._uU(28),
                        a.qZA()()()()()()(),
                        a._UZ(29, "hr"),
                        a.TgZ(30, "div", 15)(31, "div", 16)(32, "table", 17),
                        a.ynx(33, 18),
                        a.YNc(34, Io, 2, 0, "th", 19),
                        a.YNc(35, Bo, 2, 1, "td", 20),
                        a.BQk(),
                        a.ynx(36, 21),
                        a.YNc(37, xo, 2, 0, "th", 19),
                        a.YNc(38, Co, 2, 1, "td", 20),
                        a.BQk(),
                        a.ynx(39, 22),
                        a.YNc(40, yo, 1, 0, "th", 23),
                        a.YNc(41, Do, 4, 3, "td", 24),
                        a.BQk(),
                        a.YNc(42, Ro, 1, 0, "tr", 25),
                        a.YNc(43, Ao, 1, 0, "tr", 26),
                        a.qZA(),
                        a._UZ(44, "mat-paginator", 27),
                        a.qZA()(),
                        a.TgZ(45, "div", 28)(46, "button", 29),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().showStafOperatorModal();
                        }),
                        a._UZ(47, "span", 30),
                        a._uU(48, " Tambah User "),
                        a.qZA(),
                        a.TgZ(49, "button", 31),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().activeModal.dismiss();
                        }),
                        a._uU(50, " Tutup "),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw();
                    a.xp6(2),
                        a.hij(" Maksimal ", t.kuotaStaf, " orang dalam 1 sub kegiatan ini. "),
                        a.xp6(12),
                        a.Oqu(t.sub_unit_teks),
                        a.xp6(7),
                        a.Oqu(t.kegiatan_teks),
                        a.xp6(7),
                        a.Oqu(t.sub_kegiatan_teks),
                        a.xp6(4),
                        a.Q6J("dataSource", t.dataSource),
                        a.xp6(10),
                        a.Q6J("matHeaderRowDef", t.displayedColumns),
                        a.xp6(1),
                        a.Q6J("matRowDefColumns", t.displayedColumns),
                        a.xp6(1),
                        a.Q6J("pageSizeOptions", a.DdM(9, Fo)),
                        a.xp6(3),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/arrows/arr075.svg");
                }
            }
            let Zo = (() => {
                class i {
                    constructor(t, e, n, s, o, l, _, r, u) {
                        (this.activeModal = t),
                            (this.modal = e),
                            (this.konfigurasiService = n),
                            (this.renjaStafBelanjaService = s),
                            (this.userHandleService = o),
                            (this.perangkatDaerahService = l),
                            (this.kegiatanService = _),
                            (this.subKegiatanService = r),
                            (this.xtraStafSgtService = u),
                            (this.allDataIsLoaded = !1),
                            (this.findAnggotaSkpdIsLoaded = !1),
                            (this.listOperatorBelanjaIsLoaded = !1),
                            (this.anggotaSkpdList = []),
                            (this.stafBelanjaList = []),
                            (this.display = []),
                            (this.findAnggotaSkpdIsLoading = !1),
                            (this.pageTitle = "Pengaturan Operator pada Kegiatan"),
                            (this.sub_unit_teks = ""),
                            (this.kegiatan_teks = ""),
                            (this.sub_kegiatan_teks = ""),
                            (this.isLoading = !1),
                            (this.isSaving = !1),
                            (this.isDeleting = !1),
                            (this.stafListIsLoading = !1),
                            (this.stafCheckAccessIsLoading = !1),
                            (this.dataSource = new L.by([])),
                            (this.displayedColumns = ["nip", "nama_user", "aksi"]),
                            (this.listOperatorBelanjaIsLoading = !1),
                            (this.subUnitTeksIsLoading = !1),
                            (this.kegiatanTeksIsLoading = !1),
                            (this.subKegiatanTeksIsLoading = !1),
                            (this.kuotaStaf = 2);
                    }
                    set paginator(t) {
                        this.dataSource.paginator = t;
                    }
                    set sort(t) {
                        this.dataSource.sort = t;
                    }
                    ngOnInit() {
                        this.resetStates(), this.buildForm(), this.loadData();
                    }
                    showStafOperatorModal() {
                        const t = this.modal.open(jo, { size: "lg" });
                        (t.componentInstance.subBelanja = this.subBelanja),
                            t.result.then(
                                (e) => {
                                    this.resetStates(), this.ngOnInit();
                                },
                                (e) => {}
                            );
                    }
                    applyFilter(t) {
                        let e;
                        (e = t.target.value), (this.dataSource.filter = null == e ? void 0 : e.toLowerCase());
                    }
                    removeStafOperator(t) {
                        var e, n, s;
                        const o = new FormData();
                        o.append("id_daerah", String(null === (e = this.subBelanja) || void 0 === e ? void 0 : e.id_daerah)),
                            o.append("tahun", String(null === (n = this.subBelanja) || void 0 === n ? void 0 : n.tahun)),
                            o.append("id_sub_bl", String(null === (s = this.subBelanja) || void 0 === s ? void 0 : s.id_sub_bl)),
                            o.append("id_staf", String(t)),
                            (this.isDeleting = !0),
                            this.renjaStafBelanjaService.removeOperatorBelanja(o).subscribe({
                                next: (l) => {
                                    (this.isDeleting = !1), (this.dataSource.data = this.dataSource.data.filter((_) => _.id_user !== t));
                                },
                                error: (l) => {
                                    this.isDeleting = !1;
                                },
                            });
                    }
                    buildForm() {
                        this.stafSettingForm = new p.cw({});
                    }
                    loadData() {
                        var t, e;
                        const n = new FormData();
                        n.append("id_daerah", String(null === (t = this.subBelanja) || void 0 === t ? void 0 : t.id_daerah)),
                            n.append("id_skpd", String(null === (e = this.subBelanja) || void 0 === e ? void 0 : e.id_sub_skpd)),
                            n.append("tahun", this.konfigurasiService.getTahun()),
                            (this.findAnggotaSkpdIsLoading = !0),
                            this.userHandleService.findAnggotaSkpd(n).subscribe({
                                next: (o) => {
                                    (this.findAnggotaSkpdIsLoading = !1), (this.anggotaSkpdList = o.data), (this.findAnggotaSkpdIsLoaded = !0), this.buildDataSource();
                                },
                                error: (o) => {
                                    this.findAnggotaSkpdIsLoading = !1;
                                },
                            });
                        const s = new FormData();
                        s.append("id_daerah", String(this.subBelanja.id_daerah || 0)),
                            s.append("tahun", String(this.subBelanja.tahun || 0)),
                            s.append("id_sub_bl", String(this.subBelanja.id_sub_bl || 0)),
                            (this.listOperatorBelanjaIsLoading = !0),
                            this.renjaStafBelanjaService.listOperatorBelanja(s).subscribe({
                                next: (o) => {
                                    (this.listOperatorBelanjaIsLoading = !1),
                                        (this.stafBelanjaList = o.data),
                                        (this.listOperatorBelanjaIsLoaded = !0),
                                        (this.xtraStafSgtIsLoading = !0),
                                        (this.xtraStafSgtSub = this.xtraStafSgtService.getByDaerahAndSubGiat(this.subBelanja.id_daerah, this.subBelanja.id_sub_giat).subscribe({
                                            next: (l) => {
                                                var _;
                                                (this.xtraStafSgtIsLoading = !1),
                                                    (this.xtraStafSgtIsLoaded = !0),
                                                    (this.kuotaStaf = (null === (_ = l.data[0]) || void 0 === _ ? void 0 : _.vol_staf) || 2),
                                                    this.xtraStafSgtSub.unsubscribe(),
                                                    this.buildDataSource();
                                            },
                                            error: (l) => {
                                                (this.xtraStafSgtIsLoading = !1), this.xtraStafSgtSub.unsubscribe();
                                            },
                                        }));
                                },
                                error: (o) => {
                                    this.listOperatorBelanjaIsLoading = !1;
                                },
                            }),
                            (this.subUnitTeksIsLoading = !0),
                            this.perangkatDaerahService.view(this.subBelanja.id_sub_skpd, this.subBelanja.tahun, this.subBelanja.id_daerah).subscribe({
                                next: (o) => {
                                    var l;
                                    (this.subUnitTeksIsLoading = !1), (this.sub_unit_teks = null === (l = o.data[0]) || void 0 === l ? void 0 : l.nama_skpd);
                                },
                                error: (o) => {
                                    this.subUnitTeksIsLoading = !1;
                                },
                            }),
                            (this.kegiatanTeksIsLoading = !0),
                            this.kegiatanService.view(this.subBelanja.id_giat, this.subBelanja.tahun).subscribe({
                                next: (o) => {
                                    var l;
                                    (this.kegiatanTeksIsLoading = !1), (this.kegiatan_teks = null === (l = o.data[0]) || void 0 === l ? void 0 : l.nama_giat);
                                },
                                error: (o) => {
                                    this.kegiatanTeksIsLoading = !1;
                                },
                            }),
                            (this.subKegiatanTeksIsLoading = !0),
                            this.subKegiatanService.view(this.subBelanja.id_sub_giat, this.subBelanja.tahun).subscribe({
                                next: (o) => {
                                    var l;
                                    (this.subKegiatanTeksIsLoading = !1), (this.sub_kegiatan_teks = null === (l = o.data[0]) || void 0 === l ? void 0 : l.nama_sub_giat);
                                },
                                error: (o) => {
                                    this.subKegiatanTeksIsLoading = !1;
                                },
                            });
                    }
                    buildDataSource() {
                        var t;
                        let e = 0;
                        !this.allDataIsLoaded &&
                            this.findAnggotaSkpdIsLoaded &&
                            this.listOperatorBelanjaIsLoaded &&
                            this.xtraStafSgtIsLoaded &&
                            (null === (t = this.stafBelanjaList) ||
                                void 0 === t ||
                                t.forEach((n) => {
                                    var s;
                                    const o = null === (s = this.anggotaSkpdList) || void 0 === s ? void 0 : s.find((l) => l.id_user == n.id_staf);
                                    o && ((this.display[e] = { id_user: o.id_user, nip: o.nip, nama_user: o.nama_user }), e++);
                                }),
                            (this.dataSource.data = this.display),
                            (this.dataSource.paginator = this.paginator),
                            (this.dataSource.sort = this.sort),
                            (this.allDataIsLoaded = !0));
                    }
                    resetStates() {
                        (this.display = []), (this.allDataIsLoaded = !1), (this.findAnggotaSkpdIsLoaded = !1), (this.listOperatorBelanjaIsLoaded = !1), (this.xtraStafSgtIsLoaded = !1);
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(aa.Kz), a.Y36(aa.FF), a.Y36(Ra.W), a.Y36(jt), a.Y36(Ie.C), a.Y36(za.J), a.Y36(xe.X), a.Y36(tt.b), a.Y36(Be.w));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-staf-setting"]],
                        viewQuery: function (t, e) {
                            if ((1 & t && (a.Gf(X.NW, 5), a.Gf(S.YE, 5)), 2 & t)) {
                                let n;
                                a.iGM((n = a.CRH())) && (e.paginator = n.first), a.iGM((n = a.CRH())) && (e.sort = n.first);
                            }
                        },
                        decls: 7,
                        vars: 3,
                        consts: [
                            [1, "modal-header"],
                            [1, "fw-bolder", "m-0"],
                            ["type", "button", "aria-label", "Close", 1, "btn-close", 3, "click"],
                            [1, "card", "card-xl-stretch", "mb-xl-8"],
                            ["class", "d-flex justify-content-center mt-20 mb-20", 4, "ngIf"],
                            [4, "ngIf"],
                            [1, "d-flex", "justify-content-center", "mt-20", "mb-20"],
                            [1, "spinner-border"],
                            [1, "alert", "alert-info"],
                            [1, "card-header", "border-0", "pt-3"],
                            [1, "card-title"],
                            [1, "col"],
                            [1, "table", "table-striped", "m-b-0", "font-medium"],
                            ["width", "120"],
                            ["width", "5"],
                            [1, "card-body", "py-3"],
                            [1, "table-responsive"],
                            ["mat-table", "", "matSort", "", 1, "table", "table-row-dashed", "table-row-gray-300", "align-middle", "gs-0", "gy-4", 3, "dataSource"],
                            ["matColumnDef", "nip"],
                            ["mat-header-cell", "", "mat-sort-header", "", "class", "fw-bolder text-muted pe-3", 4, "matHeaderCellDef"],
                            ["mat-cell", "", "class", "pe-3", 4, "matCellDef"],
                            ["matColumnDef", "nama_user"],
                            ["matColumnDef", "aksi"],
                            ["mat-header-cell", "", "class", "fw-bolder text-center text-muted w-80px", 4, "matHeaderCellDef"],
                            ["mat-cell", "", "class", "text-center", 4, "matCellDef"],
                            ["mat-header-row", "", 4, "matHeaderRowDef"],
                            ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                            ["showFirstLastButtons", "", 3, "pageSizeOptions"],
                            [1, "card-footer", "d-flex", "justify-content-end", "py-6", "px-9"],
                            ["type", "button", "name", "tambah_staf_bl", "id", "tambah_staf_bl", 1, "btn", "btn-primary", 3, "click"],
                            [1, "svg-icon", "svg-icon-3", 3, "inlineSVG"],
                            ["type", "button", "data-dismiss", "modal", "id", "tutup_formstaf", 1, "btn", "btn-default", 3, "click"],
                            ["mat-header-cell", "", "mat-sort-header", "", 1, "fw-bolder", "text-muted", "pe-3"],
                            ["mat-cell", "", 1, "pe-3"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-center", "text-muted", "w-80px"],
                            ["mat-cell", "", 1, "text-center"],
                            ["ngbTooltip", "Hapus Operator", "type", "button", 1, "btn", "btn-icon", "btn-light-danger", "btn-sm", 3, "disabled", "click"],
                            ["clas", "indicator-progress"],
                            [1, "spinner-border", "spinner-border-sm", "align-middle", "ms-2"],
                            ["mat-header-row", ""],
                            ["mat-row", ""],
                        ],
                        template: function (t, e) {
                            1 & t &&
                                (a.TgZ(0, "div", 0)(1, "h3", 1),
                                a._uU(2),
                                a.qZA(),
                                a.TgZ(3, "button", 2),
                                a.NdJ("click", function () {
                                    return e.activeModal.dismiss("Cross click");
                                }),
                                a.qZA()(),
                                a.TgZ(4, "div", 3),
                                a.YNc(5, To, 2, 0, "div", 4),
                                a.YNc(6, Uo, 51, 10, "div", 5),
                                a.qZA()),
                                2 & t &&
                                    (a.xp6(2),
                                    a.Oqu(e.pageTitle),
                                    a.xp6(3),
                                    a.Q6J("ngIf", e.listOperatorBelanjaIsLoading || e.subUnitTeksIsLoading || e.kegiatanTeksIsLoading || e.subKegiatanTeksIsLoading || e.xtraStafSgtIsLoading),
                                    a.xp6(1),
                                    a.Q6J("ngIf", !(e.listOperatorBelanjaIsLoading || e.subUnitTeksIsLoading || e.kegiatanTeksIsLoading || e.subKegiatanTeksIsLoading || e.xtraStafSgtIsLoading)));
                        },
                        directives: [j.O5, L.BZ, S.YE, L.w1, L.fO, L.ge, S.nU, L.Dz, L.ev, aa._L, Ma.d$, L.as, L.XQ, L.nj, L.Gk, X.NW],
                        styles: [""],
                    })),
                    i
                );
            })();
            class Po {}
            class No {}
            let Mo = (() => {
                    class i {
                        constructor(t) {
                            (this.http = t), (this.API_URL = `${Ka.N.apiUrlRenja}`);
                        }
                        list(t) {
                            return this.http.post(this.API_URL + "/capaian_bl/list", t);
                        }
                        loadData(t) {
                            return this.http.post(this.API_URL + "/capaian_bl/load_data", t);
                        }
                        add(t) {
                            return this.http.post(this.API_URL + "/capaian_bl/add", t);
                        }
                        update(t) {
                            return this.http.post(this.API_URL + "/capaian_bl/update", t);
                        }
                    }
                    return (
                        (i.ɵfac = function (t) {
                            return new (t || i)(a.LFG(Pa.eN));
                        }),
                        (i.ɵprov = a.Yz7({ token: i, factory: i.ɵfac, providedIn: "root" })),
                        i
                    );
                })(),
                Ko = (() => {
                    class i {
                        constructor(t) {
                            (this.http = t), (this.API_URL = `${Ka.N.apiUrlRenja}`);
                        }
                        list(t) {
                            return this.http.post(this.API_URL + "/output_giat/list", t);
                        }
                        loadData(t) {
                            return this.http.post(this.API_URL + "/output_giat/load_data", t);
                        }
                        add(t) {
                            return this.http.post(this.API_URL + "/output_giat/add", t);
                        }
                        update(t) {
                            return this.http.post(this.API_URL + "/output_giat/update", t);
                        }
                    }
                    return (
                        (i.ɵfac = function (t) {
                            return new (t || i)(a.LFG(Pa.eN));
                        }),
                        (i.ɵprov = a.Yz7({ token: i, factory: i.ɵfac, providedIn: "root" })),
                        i
                    );
                })(),
                Ce = (() => {
                    class i {
                        constructor(t) {
                            (this.http = t), (this.API_URL = `${Ka.N.apiUrlRenja}`);
                        }
                        sinkronProgram(t) {
                            return this.http.post(this.API_URL + "/sinkron/getrenstraprogram", t);
                        }
                        sinkronGiat(t) {
                            return this.http.post(this.API_URL + "/sinkron/getrenstragiat", t);
                        }
                        sinkronProgramGiat(t) {
                            return this.http.post(this.API_URL + "/sinkron/getrenstraprogramgiat", t);
                        }
                    }
                    return (
                        (i.ɵfac = function (t) {
                            return new (t || i)(a.LFG(Pa.eN));
                        }),
                        (i.ɵprov = a.Yz7({ token: i, factory: i.ɵfac, providedIn: "root" })),
                        i
                    );
                })(),
                Jo = (() => {
                    class i {
                        constructor(t) {
                            (this.konfigurasiService = t), (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))), (this.removeIndikatorProgram = new a.vpe());
                        }
                        ngOnInit() {}
                        onRemoveProgramIndikator() {
                            var t, e;
                            if (this.indikatorProgram.id_capaian_bl) {
                                const n = new FormData();
                                n.append("id_capaian_bl", String(this.indikatorProgram.id_capaian_bl)),
                                    n.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                                    n.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                    n.append("id_unit", String(0)),
                                    n.append("id_daerah_log", null === (t = this.userSession) || void 0 === t ? void 0 : t.daerah_id),
                                    n.append("id_user_log", null === (e = this.userSession) || void 0 === e ? void 0 : e.user_id),
                                    this.removeIndikatorProgram.emit();
                            } else this.removeIndikatorProgram.emit();
                        }
                    }
                    return (
                        (i.ɵfac = function (t) {
                            return new (t || i)(a.Y36(Ra.W));
                        }),
                        (i.ɵcmp = a.Xpm({
                            type: i,
                            selectors: [["app-renja-indikator-program"]],
                            inputs: { mode: "mode", indikatorProgram: "indikatorProgram" },
                            outputs: { removeIndikatorProgram: "removeIndikatorProgram" },
                            decls: 10,
                            vars: 7,
                            consts: [
                                [1, "row", "mb-1"],
                                [1, "col-9"],
                                ["id", "tolak_ukur", "type", "text", "placeholder", "Tolok Ukur", "maxlength", "500", 3, "ngModel", "ngClass", "disabled", "ngModelChange"],
                                [1, "col-1"],
                                ["id", "target", "type", "text", "placeholder", "Target", "maxlength", "20", 1, "form-control", 3, "ngModel", "ngModelChange"],
                                ["id", "satuan", "type", "text", "placeholder", "Satuan", "maxlength", "20", 3, "ngModel", "ngClass", "disabled", "ngModelChange"],
                                ["type", "button", 1, "btn", "btn-sm", "btn-danger", 3, "click"],
                            ],
                            template: function (t, e) {
                                1 & t &&
                                    (a.TgZ(0, "div", 0)(1, "div", 1)(2, "input", 2),
                                    a.NdJ("ngModelChange", function (s) {
                                        return (e.indikatorProgram.tolak_ukur = s);
                                    }),
                                    a.qZA()(),
                                    a.TgZ(3, "div", 3)(4, "input", 4),
                                    a.NdJ("ngModelChange", function (s) {
                                        return (e.indikatorProgram.target = s);
                                    }),
                                    a.qZA()(),
                                    a.TgZ(5, "div", 3)(6, "input", 5),
                                    a.NdJ("ngModelChange", function (s) {
                                        return (e.indikatorProgram.satuan = s);
                                    }),
                                    a.qZA()(),
                                    a.TgZ(7, "div", 3)(8, "button", 6),
                                    a.NdJ("click", function () {
                                        return e.onRemoveProgramIndikator();
                                    }),
                                    a._uU(9, " X "),
                                    a.qZA()()()),
                                    2 & t &&
                                        (a.xp6(2),
                                        a.Q6J("ngModel", e.indikatorProgram.tolak_ukur)(
                                            "ngClass",
                                            "M-" != (null == e.indikatorProgram || null == e.indikatorProgram.kode_rpjm ? null : e.indikatorProgram.kode_rpjm.substring(0, 2)) &&
                                                null != (null == e.indikatorProgram ? null : e.indikatorProgram.kode_rpjm)
                                                ? "form-control form-control-solid"
                                                : "form-control"
                                        )(
                                            "disabled",
                                            "M-" != (null == e.indikatorProgram || null == e.indikatorProgram.kode_rpjm ? null : e.indikatorProgram.kode_rpjm.substring(0, 2)) &&
                                                null != (null == e.indikatorProgram ? null : e.indikatorProgram.kode_rpjm)
                                        ),
                                        a.xp6(2),
                                        a.Q6J("ngModel", e.indikatorProgram.target),
                                        a.xp6(2),
                                        a.Q6J("ngModel", e.indikatorProgram.satuan)(
                                            "ngClass",
                                            "M-" != (null == e.indikatorProgram || null == e.indikatorProgram.kode_rpjm ? null : e.indikatorProgram.kode_rpjm.substring(0, 2)) &&
                                                null != (null == e.indikatorProgram ? null : e.indikatorProgram.kode_rpjm)
                                                ? "form-control form-control-solid"
                                                : "form-control"
                                        )(
                                            "disabled",
                                            "M-" != (null == e.indikatorProgram || null == e.indikatorProgram.kode_rpjm ? null : e.indikatorProgram.kode_rpjm.substring(0, 2)) &&
                                                null != (null == e.indikatorProgram ? null : e.indikatorProgram.kode_rpjm)
                                        ));
                            },
                            directives: [p.Fj, p.nD, p.JJ, p.On, j.mk],
                            styles: [""],
                        })),
                        i
                    );
                })(),
                qo = (() => {
                    class i {
                        constructor(t) {
                            (this.konfigurasiService = t), (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))), (this.removeIndikatorKegiatan = new a.vpe());
                        }
                        ngOnInit() {}
                        onRemoveKegiatanIndikator() {
                            var t, e;
                            if (this.indikatorKegiatan.id_output_giat) {
                                const n = new FormData();
                                n.append("id_capaian_bl", String(this.indikatorKegiatan.id_output_giat)),
                                    n.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                                    n.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                    n.append("id_unit", String(0)),
                                    n.append("id_daerah_log", null === (t = this.userSession) || void 0 === t ? void 0 : t.daerah_id),
                                    n.append("id_user_log", null === (e = this.userSession) || void 0 === e ? void 0 : e.user_id),
                                    this.removeIndikatorKegiatan.emit();
                            } else this.removeIndikatorKegiatan.emit();
                        }
                    }
                    return (
                        (i.ɵfac = function (t) {
                            return new (t || i)(a.Y36(Ra.W));
                        }),
                        (i.ɵcmp = a.Xpm({
                            type: i,
                            selectors: [["app-renja-indikator-kegiatan"]],
                            inputs: { mode: "mode", indikatorKegiatan: "indikatorKegiatan" },
                            outputs: { removeIndikatorKegiatan: "removeIndikatorKegiatan" },
                            decls: 10,
                            vars: 7,
                            consts: [
                                [1, "row", "mb-1"],
                                [1, "col-9"],
                                ["id", "tolok_ukur", "type", "text", "placeholder", "Tolok Ukur", "maxlength", "500", 3, "ngModel", "ngClass", "disabled", "ngModelChange"],
                                [1, "col-1"],
                                ["id", "target", "type", "text", "placeholder", "Target", "maxlength", "20", 1, "form-control", 3, "ngModel", "ngModelChange"],
                                ["id", "satuan", "type", "text", "placeholder", "Satuan", "maxlength", "20", 3, "ngModel", "ngClass", "disabled", "ngModelChange"],
                                ["type", "button", 1, "btn", "btn-sm", "btn-danger", 3, "click"],
                            ],
                            template: function (t, e) {
                                1 & t &&
                                    (a.TgZ(0, "div", 0)(1, "div", 1)(2, "input", 2),
                                    a.NdJ("ngModelChange", function (s) {
                                        return (e.indikatorKegiatan.tolok_ukur = s);
                                    }),
                                    a.qZA()(),
                                    a.TgZ(3, "div", 3)(4, "input", 4),
                                    a.NdJ("ngModelChange", function (s) {
                                        return (e.indikatorKegiatan.target = s);
                                    }),
                                    a.qZA()(),
                                    a.TgZ(5, "div", 3)(6, "input", 5),
                                    a.NdJ("ngModelChange", function (s) {
                                        return (e.indikatorKegiatan.satuan = s);
                                    }),
                                    a.qZA()(),
                                    a.TgZ(7, "div", 3)(8, "button", 6),
                                    a.NdJ("click", function () {
                                        return e.onRemoveKegiatanIndikator();
                                    }),
                                    a._uU(9, " X "),
                                    a.qZA()()()),
                                    2 & t &&
                                        (a.xp6(2),
                                        a.Q6J("ngModel", e.indikatorKegiatan.tolok_ukur)(
                                            "ngClass",
                                            "M-" != (null == e.indikatorKegiatan || null == e.indikatorKegiatan.kode_rpjm ? null : e.indikatorKegiatan.kode_rpjm.substring(0, 2)) &&
                                                null != (null == e.indikatorKegiatan ? null : e.indikatorKegiatan.kode_rpjm)
                                                ? "form-control form-control-solid"
                                                : "form-control"
                                        )(
                                            "disabled",
                                            "M-" != (null == e.indikatorKegiatan || null == e.indikatorKegiatan.kode_rpjm ? null : e.indikatorKegiatan.kode_rpjm.substring(0, 2)) &&
                                                null != (null == e.indikatorKegiatan ? null : e.indikatorKegiatan.kode_rpjm)
                                        ),
                                        a.xp6(2),
                                        a.Q6J("ngModel", e.indikatorKegiatan.target),
                                        a.xp6(2),
                                        a.Q6J("ngModel", e.indikatorKegiatan.satuan)(
                                            "ngClass",
                                            "M-" != (null == e.indikatorKegiatan || null == e.indikatorKegiatan.kode_rpjm ? null : e.indikatorKegiatan.kode_rpjm.substring(0, 2)) &&
                                                null != (null == e.indikatorKegiatan ? null : e.indikatorKegiatan.kode_rpjm)
                                                ? "form-control form-control-solid"
                                                : "form-control"
                                        )(
                                            "disabled",
                                            "M-" != (null == e.indikatorKegiatan || null == e.indikatorKegiatan.kode_rpjm ? null : e.indikatorKegiatan.kode_rpjm.substring(0, 2)) &&
                                                null != (null == e.indikatorKegiatan ? null : e.indikatorKegiatan.kode_rpjm)
                                        ));
                            },
                            directives: [p.Fj, p.nD, p.JJ, p.On, j.mk],
                            styles: [""],
                        })),
                        i
                    );
                })();
            const Yo = ["skpdInstance"],
                Wo = ["bidangUrusanInstance"],
                Go = ["labelPusatInstance"],
                Qo = ["labelProvinsiInstance"],
                Oo = ["labelKokabInstance"],
                Eo = ["subGiatInstance"];
            function Ho(i, d) {
                1 & i && (a.TgZ(0, "div", 6), a._UZ(1, "div", 7), a.qZA());
            }
            function $o(i, d) {
                1 & i && a._UZ(0, "div", 46);
            }
            function zo(i, d) {
                1 & i && a._UZ(0, "div", 46);
            }
            function Vo(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div")(1, "app-renja-indikator-program", 47),
                        a.NdJ("removeIndikatorProgram", function () {
                            const s = a.CHM(t).index;
                            return a.oxw(2).onRemoveIndikatorProgram(s);
                        }),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = d.index,
                        e = a.oxw(2);
                    a.xp6(1), a.Q6J("mode", e.mode)("indikatorProgram", e.indikatorProgramList[t]);
                }
            }
            function Xo(i, d) {
                1 & i && a._UZ(0, "div", 46);
            }
            function al(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div")(1, "app-renja-indikator-kegiatan", 48),
                        a.NdJ("removeIndikatorKegiatan", function () {
                            const s = a.CHM(t).index;
                            return a.oxw(2).onRemoveIndikatorKegiatan(s);
                        }),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = d.index,
                        e = a.oxw(2);
                    a.xp6(1), a.Q6J("mode", e.mode)("indikatorKegiatan", e.indikatorKegiatanList[t]);
                }
            }
            function tl(i, d) {
                1 & i && (a.ynx(0), a._uU(1, "Simpan"), a.BQk());
            }
            function el(i, d) {
                1 & i && (a.ynx(0), a.TgZ(1, "span", 49), a._uU(2), a._UZ(3, "span", 50), a.qZA(), a.BQk()), 2 & i && (a.xp6(1), a.Udp("display", "block"), a.xp6(1), a.hij(" Menyimpan...", " ", " "));
            }
            const Tt = function () {
                return { standalone: !0 };
            };
            function nl(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 8)(1, "form", 9),
                        a.NdJ("submit", function () {
                            return a.CHM(t), a.oxw().onSubmit();
                        }),
                        a.TgZ(2, "div", 10)(3, "div", 11)(4, "label", 12),
                        a._uU(5, "SKPD atau Sub Unit"),
                        a.qZA(),
                        a.TgZ(6, "div", 13)(7, "div", 14)(8, "input", 15, 16),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw().skpdModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw().skpdFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw().skpdClick$.next(n.target.value);
                        })("ngModelChange", function () {
                            return a.CHM(t), a.oxw().skpdChange();
                        }),
                        a.qZA(),
                        a.YNc(10, $o, 1, 0, "div", 17),
                        a.qZA()()(),
                        a.TgZ(11, "div", 11)(12, "label", 18),
                        a._uU(13, "Bidang Urusan"),
                        a.qZA(),
                        a.TgZ(14, "div", 13)(15, "div", 14)(16, "input", 19, 20),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw().bidangUrusanModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw().bidangUrusanFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw().bidangUrusanClick$.next(n.target.value);
                        }),
                        a.qZA(),
                        a.YNc(18, zo, 1, 0, "div", 17),
                        a.qZA()()(),
                        a.TgZ(19, "div", 11)(20, "label", 21),
                        a._uU(21, "Program"),
                        a.qZA(),
                        a.TgZ(22, "div", 13)(23, "div", 14),
                        a._UZ(24, "input", 22),
                        a.qZA()()(),
                        a.TgZ(25, "div", 11)(26, "div", 23)(27, "label", 24)(28, "b"),
                        a._uU(29, "Indikator Program (Outcome)"),
                        a.qZA()(),
                        a.TgZ(30, "button", 25),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().getRenstraIndikatorProgram();
                        }),
                        a._uU(31, " Salin data Indikator Outcome dari Renstra "),
                        a.qZA()(),
                        a.TgZ(32, "div", 26)(33, "button", 27),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().addIndikatorProgram();
                        }),
                        a._uU(34, " + Indikator "),
                        a.qZA()(),
                        a._UZ(35, "hr"),
                        a.YNc(36, Vo, 2, 2, "div", 28),
                        a.qZA(),
                        a.TgZ(37, "div", 11)(38, "label", 21),
                        a._uU(39, "Kegiatan"),
                        a.qZA(),
                        a.TgZ(40, "div", 13)(41, "div", 14),
                        a._UZ(42, "input", 29),
                        a.qZA()()(),
                        a.TgZ(43, "div", 11)(44, "label", 21),
                        a._uU(45, "Kelompok Sasaran Kegiatan"),
                        a.qZA(),
                        a.TgZ(46, "div", 13)(47, "div", 14),
                        a._UZ(48, "input", 30),
                        a.qZA()()(),
                        a.TgZ(49, "div", 31)(50, "label", 32),
                        a._uU(51, "Prioritas Pembangunan Nasional"),
                        a.qZA(),
                        a.TgZ(52, "div", 13)(53, "div", 14)(54, "input", 33, 34),
                        a.NdJ("ngModelChange", function (n) {
                            return a.CHM(t), (a.oxw().labelPusatModel = n);
                        })("focus", function (n) {
                            return a.CHM(t), a.oxw().labelPusatFocus$.next(n.target.value);
                        })("click", function (n) {
                            return a.CHM(t), a.oxw().labelPusatClick$.next(n.target.value);
                        }),
                        a.qZA(),
                        a.YNc(56, Xo, 1, 0, "div", 17),
                        a.qZA()()(),
                        a.TgZ(57, "div", 11)(58, "div", 23)(59, "label", 24)(60, "b"),
                        a._uU(61, "Indikator Keluaran Kegiatan"),
                        a.qZA()(),
                        a.TgZ(62, "button", 25),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().getRenstraIndikatorKegiatan();
                        }),
                        a._uU(63, " Salin data Indikator Output dari Renstra "),
                        a.qZA()(),
                        a.TgZ(64, "div", 26)(65, "button", 27),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().addIndikatorKegiatan();
                        }),
                        a._uU(66, " + Indikator "),
                        a.qZA()(),
                        a._UZ(67, "hr"),
                        a.YNc(68, al, 2, 2, "div", 28),
                        a.qZA(),
                        a.TgZ(69, "div", 11)(70, "div", 35)(71, "label", 24)(72, "b"),
                        a._uU(73, "Indikator Hasil Kegiatan"),
                        a.qZA()()(),
                        a._UZ(74, "hr"),
                        a.TgZ(75, "div", 36)(76, "div", 37),
                        a._UZ(77, "input", 38),
                        a.qZA(),
                        a.TgZ(78, "div", 39),
                        a._UZ(79, "input", 40),
                        a.qZA(),
                        a.TgZ(80, "div", 39),
                        a._UZ(81, "input", 41),
                        a.qZA(),
                        a._UZ(82, "div", 39),
                        a.qZA()()(),
                        a.TgZ(83, "div", 42)(84, "span", 43),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().activeModal.close("Close click");
                        }),
                        a._uU(85, " Tutup "),
                        a.qZA(),
                        a.TgZ(86, "button", 44),
                        a.YNc(87, tl, 2, 0, "ng-container", 45),
                        a.YNc(88, el, 4, 3, "ng-container", 45),
                        a.qZA()()()();
                }
                if (2 & i) {
                    const t = a.oxw();
                    a.xp6(1),
                        a.Q6J("formGroup", t.subBelanjaForm),
                        a.xp6(7),
                        a.Q6J("ngModel", t.skpdModel)("ngModelOptions", a.DdM(28, Tt))("ngbTypeahead", t.skpdSearch)("inputFormatter", t.skpdFormatter)("resultFormatter", t.skpdFormatter),
                        a.xp6(2),
                        a.Q6J("ngIf", t.skpdSearchIsLoading),
                        a.xp6(6),
                        a.s9C("placeholder", t.bidangUrusanModel ? "Bidang Urusan..." : "Pilih Sub Unit terlebih dahulu"),
                        a.Q6J("ngModel", t.bidangUrusanModel)("ngModelOptions", a.DdM(29, Tt))("ngbTypeahead", t.bidangUrusanSearch)("inputFormatter", t.bidangUrusanFormatter)("resultFormatter", t.bidangUrusanFormatter)("editable", !1)(
                            "disabled",
                            t.isSaving || "view" == t.mode
                        ),
                        a.xp6(2),
                        a.Q6J("ngIf", t.bidangUrusanSearchIsLoading),
                        a.xp6(6),
                        a.Q6J("disabled", !0),
                        a.xp6(12),
                        a.Q6J("ngForOf", t.indikatorProgramList),
                        a.xp6(6),
                        a.Q6J("disabled", !0),
                        a.xp6(12),
                        a.Q6J("ngModel", t.labelPusatModel)("ngModelOptions", a.DdM(30, Tt))("ngbTypeahead", t.labelPusatSearch)("inputFormatter", t.labelPusatFormatter)("resultFormatter", t.labelPusatFormatter),
                        a.xp6(2),
                        a.Q6J("ngIf", t.labelPusatSearchIsLoading),
                        a.xp6(12),
                        a.Q6J("ngForOf", t.indikatorKegiatanList),
                        a.xp6(19),
                        a.Q6J("ngIf", !t.isSaving),
                        a.xp6(1),
                        a.Q6J("ngIf", t.isSaving);
                }
            }
            let il = (() => {
                    class i {
                        constructor(t, e, n, s, o, l, _, r, u, k, m, v, g, C, h, f, y, B, F, c, b, I, x, q, T, P, Z, J) {
                            (this.activatedRoute = t),
                                (this.activeModal = e),
                                (this.toastr = n),
                                (this.konfigurasiService = s),
                                (this.subBelanjaService = o),
                                (this.labelPusatService = l),
                                (this.labelProvinsiService = _),
                                (this.labelKokabService = r),
                                (this.labelKegiatanService = u),
                                (this.sumberDanaService = k),
                                (this.bidangUrusanService = m),
                                (this.daerahService = v),
                                (this.labelBelanjaService = g),
                                (this.danaBelanjaService = C),
                                (this.capaianBelanjaService = h),
                                (this.outputgiatBelanjaService = f),
                                (this.tagBelanjaService = y),
                                (this.detilLokasiService = B),
                                (this.kecamatanService = F),
                                (this.kelurahanService = c),
                                (this.renstraKegiatanService = b),
                                (this.bidangUrusanOrganisasiService = I),
                                (this.indikatorKeluaranService = x),
                                (this.skpdService = q),
                                (this.renstraCascadingService = T),
                                (this.subGiatService = P),
                                (this.sinkronRenstraService = Z),
                                (this.modal = J),
                                (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))),
                                (this.pageTitle = "Tambah Sub Kegiatan Belanja"),
                                (this.mode = "add"),
                                (this.id_tahap = 0),
                                (this.skpdFocus$ = new z.x()),
                                (this.skpdClick$ = new z.x()),
                                (this.skpdSearchIsLoading = !1),
                                (this.skpdFormatter = (w) => w.nama_skpd),
                                (this.bidangUrusanFocus$ = new z.x()),
                                (this.bidangUrusanClick$ = new z.x()),
                                (this.bidangUrusanSearchIsLoading = !1),
                                (this.bidangUrusanFormatter = (w) => w.nama_bidang_urusan),
                                (this.labelPusatFocus$ = new z.x()),
                                (this.labelPusatClick$ = new z.x()),
                                (this.labelPusatSearchIsLoading = !1),
                                (this.labelPusatFormatter = (w) => w.nama_label),
                                (this.labelProvinsiFocus$ = new z.x()),
                                (this.labelProvinsiClick$ = new z.x()),
                                (this.labelProvinsiSearchIsLoading = !1),
                                (this.labelProvinsiFormatter = (w) => w.nama_label),
                                (this.labelKokabFocus$ = new z.x()),
                                (this.labelKokabClick$ = new z.x()),
                                (this.labelKokabSearchIsLoading = !1),
                                (this.labelKokabFormatter = (w) => w.nama_label),
                                (this.subGiatFocus$ = new z.x()),
                                (this.subGiatClick$ = new z.x()),
                                (this.subGiatSearchIsLoading = !1),
                                (this.subGiatFormatter = (w) => `${w.kode_sub_giat} ${w.nama_sub_giat}`),
                                (this.subUnitList = []),
                                (this.urusanList = []),
                                (this.bidangUrusanList = []),
                                (this.subGiatList = []),
                                (this.lokasiList = []),
                                (this.labelGiatMasterList = []),
                                (this.sumberDanaMasterList = []),
                                (this.subGiatMasterList = []),
                                (this.labelBelanjaList = []),
                                (this.kotaKabupatenList = []),
                                (this.kecamatanList = [[]]),
                                (this.kelurahanDesaList = [[]]),
                                (this.id_sub_giat = ""),
                                (this.nama_daerah = ""),
                                (this.nama_unit = ""),
                                (this.nama_skpd = ""),
                                (this.nama_sub_skpd = ""),
                                (this.nama_urusan = ""),
                                (this.nama_bidang_urusan = ""),
                                (this.nama_program = ""),
                                (this.nama_giat = ""),
                                (this.nama_sub_giat = ""),
                                (this.nama_pptk = ""),
                                (this.nama_urusan_pusat = ""),
                                (this.nama_bidang_urusan_pusat = ""),
                                (this.nama_dana = ""),
                                (this.nama_lokasi = ""),
                                (this.nama_jadwal_murni = ""),
                                (this.kua_murni = 0),
                                (this.kua_pak = 0),
                                (this.kode_daerah = ""),
                                (this.kode_unit = ""),
                                (this.kode_skpd = ""),
                                (this.kode_sub_skpd = ""),
                                (this.kode_urusan_pusat = ""),
                                (this.kode_urusan = ""),
                                (this.kode_bidang_urusan_pusat = ""),
                                (this.kode_bidang_urusan = ""),
                                (this.kode_program = ""),
                                (this.kode_giat = ""),
                                (this.kode_sub_giat = ""),
                                (this.kode_dana = ""),
                                (this.subGiatIsLoading = !1),
                                (this.subGiatMasterIsLoading = !1),
                                (this.isSaving = !1),
                                (this.urusanIsLoading = !1),
                                (this.bidangUrusanIsLoading = !1),
                                (this.prioritasProvinsiIsLoading = !1),
                                (this.prioritasKokabIsLoading = !1),
                                (this.labelKegiatanIsLoading = !1),
                                (this.sumberDanaIsLoading = !1),
                                (this.lokasiIsLoading = !1),
                                (this.prioritasPusatIsLoading = !1),
                                (this.id_kab_kota_list = []),
                                (this.id_camat_list = []),
                                (this.id_desa_list = []),
                                (this.subBelanjaIsLoading = !1),
                                (this.labelBelanjaIsLoading = !1),
                                (this.tagBelanjaIsLoading = !1),
                                (this.danaBelanjaIsLoading = !1),
                                (this.detilLokasiIsLoading = !1),
                                (this.kotaKabupatenIsLoading = !1),
                                (this.urusanListIsLoading = !1),
                                (this.bidangUrusanOrganisasiIsLoading = !1),
                                (this.indikatorKeluaranIsLoading = !1),
                                (this.skpdIsLoading = !1),
                                (this.kecamatanIsLoadingArray = []),
                                (this.kelurahanDesaIsLoadingArray = []),
                                (this.isInitialized = !1),
                                (this.cekTahapRenstraIsLoading = !1),
                                (this.labelPusatIsLoading = !1),
                                (this.labelProvinsiIsLoading = !1),
                                (this.labelKokabIsLoading = !1),
                                (this.renstraKegiatanIsLoading = !1),
                                (this.tagBelanjaList = []),
                                (this.danaBelanjaList = []),
                                (this.indikatorProgramList = []),
                                (this.indikatorKegiatanList = []),
                                (this.indikatorProgramIsLoading = !1),
                                (this.indikatorKegiatanIsLoading = !1),
                                (this.danaBelanjaModelList = []),
                                (this.skpdSearch = (w) => {
                                    const R = w.pipe((0, ha.b)(500)),
                                        A = this.skpdClick$.pipe(
                                            (0, ga.h)(() => {
                                                var U;
                                                return !(null === (U = this.skpdInstance) || void 0 === U ? void 0 : U.isPopupOpen());
                                            })
                                        );
                                    return (0, ma.T)(R, this.skpdFocus$, A).pipe(
                                        (0, ba.x)(),
                                        (0, va.w)((U) => {
                                            const W = new Pa.LE()
                                                .set("tahun", String(this.konfigurasiService.getTahun() || 0))
                                                .set("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0))
                                                .set("id_unit", this.queryParams.id_skpd)
                                                .set("search", U);
                                            return (
                                                (this.skpdSearchIsLoading = !0),
                                                this.skpdService.findByTahunDaerahUnit(W).pipe(
                                                    (0, ka.U)((Y) => (null == Y ? void 0 : Y.data)),
                                                    (0, fa.b)(() => (this.skpdSearchIsLoading = !1)),
                                                    (0, Sa.K)((Y) => ((this.skpdSearchIsLoading = !1), (0, ja.of)([])))
                                                )
                                            );
                                        })
                                    );
                                }),
                                (this.bidangUrusanSearch = (w) => {
                                    const R = w.pipe((0, ha.b)(500)),
                                        A = this.bidangUrusanClick$.pipe(
                                            (0, ga.h)(() => {
                                                var U;
                                                return !(null === (U = this.bidangUrusanInstance) || void 0 === U ? void 0 : U.isPopupOpen());
                                            })
                                        );
                                    return (0, ma.T)(R, this.bidangUrusanFocus$, A).pipe(
                                        (0, ba.x)(),
                                        (0, va.w)((U) => {
                                            var W, Y;
                                            const Q = new FormData();
                                            return (
                                                Q.append("id_skpd", String((null === (W = this.skpdModel) || void 0 === W ? void 0 : W.id_skpd) || 0)),
                                                Q.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                                Q.append("id_daerah", String((null === (Y = this.konfigurasiService) || void 0 === Y ? void 0 : Y.getIdDaerah()) || 0)),
                                                Q.append("search[value]", U),
                                                (this.bidangUrusanSearchIsLoading = !0),
                                                this.bidangUrusanService.findByIdSkpd(Q).pipe(
                                                    (0, ka.U)(($) => (null == $ ? void 0 : $.data)),
                                                    (0, fa.b)(() => (this.bidangUrusanSearchIsLoading = !1)),
                                                    (0, Sa.K)(($) => ((this.bidangUrusanSearchIsLoading = !1), (0, ja.of)([])))
                                                )
                                            );
                                        })
                                    );
                                }),
                                (this.labelPusatSearch = (w) => {
                                    const R = w.pipe((0, ha.b)(500)),
                                        A = this.labelPusatClick$.pipe(
                                            (0, ga.h)(() => {
                                                var U;
                                                return !(null === (U = this.labelPusatInstance) || void 0 === U ? void 0 : U.isPopupOpen());
                                            })
                                        );
                                    return (0, ma.T)(R, this.labelPusatFocus$, A).pipe(
                                        (0, ba.x)(),
                                        (0, va.w)((U) => {
                                            var W, Y;
                                            const Q = new FormData();
                                            return (
                                                Q.append("id_skpd", String((null === (W = this.skpdModel) || void 0 === W ? void 0 : W.id_skpd) || 0)),
                                                Q.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                                Q.append("id_daerah", String((null === (Y = this.konfigurasiService) || void 0 === Y ? void 0 : Y.getIdDaerah()) || 0)),
                                                Q.append("search[value]", U),
                                                (this.labelPusatSearchIsLoading = !0),
                                                this.labelPusatService.find(Q).pipe(
                                                    (0, ka.U)(($) => (null == $ ? void 0 : $.data)),
                                                    (0, fa.b)(() => (this.labelPusatSearchIsLoading = !1)),
                                                    (0, Sa.K)(($) => ((this.labelPusatSearchIsLoading = !1), (0, ja.of)([])))
                                                )
                                            );
                                        })
                                    );
                                }),
                                (this.labelProvinsiSearch = (w) => {
                                    const R = w.pipe((0, ha.b)(500)),
                                        A = this.labelProvinsiClick$.pipe(
                                            (0, ga.h)(() => {
                                                var U;
                                                return !(null === (U = this.labelProvinsiInstance) || void 0 === U ? void 0 : U.isPopupOpen());
                                            })
                                        );
                                    return (0, ma.T)(R, this.labelProvinsiFocus$, A).pipe(
                                        (0, ba.x)(),
                                        (0, va.w)((U) => {
                                            var W, Y, Q, $;
                                            const ea =
                                                    1 == (null === (W = this.daerah) || void 0 === W ? void 0 : W.is_prop)
                                                        ? null === (Y = this.daerah) || void 0 === Y
                                                            ? void 0
                                                            : Y.id_daerah
                                                        : null === (Q = this.daerah) || void 0 === Q
                                                        ? void 0
                                                        : Q.id_prop,
                                                ta = new FormData();
                                            return (
                                                ta.append("id_skpd", String((null === ($ = this.skpdModel) || void 0 === $ ? void 0 : $.id_skpd) || 0)),
                                                ta.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                                ta.append("id_daerah", String(ea || 0)),
                                                ta.append("search[value]", U),
                                                (this.labelProvinsiSearchIsLoading = !0),
                                                this.labelProvinsiService.find(ta).pipe(
                                                    (0, ka.U)((sa) => (null == sa ? void 0 : sa.data)),
                                                    (0, fa.b)(() => (this.labelProvinsiSearchIsLoading = !1)),
                                                    (0, Sa.K)((sa) => ((this.labelProvinsiSearchIsLoading = !1), (0, ja.of)([])))
                                                )
                                            );
                                        })
                                    );
                                }),
                                (this.labelKokabSearch = (w) => {
                                    const R = w.pipe((0, ha.b)(500)),
                                        A = this.labelKokabClick$.pipe(
                                            (0, ga.h)(() => {
                                                var U;
                                                return !(null === (U = this.labelKokabInstance) || void 0 === U ? void 0 : U.isPopupOpen());
                                            })
                                        );
                                    return (0, ma.T)(R, this.labelKokabFocus$, A).pipe(
                                        (0, ba.x)(),
                                        (0, va.w)((U) => {
                                            var W, Y;
                                            const Q = new FormData();
                                            return (
                                                Q.append("id_skpd", String((null === (W = this.skpdModel) || void 0 === W ? void 0 : W.id_skpd) || 0)),
                                                Q.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                                Q.append("id_daerah", String((null === (Y = this.konfigurasiService) || void 0 === Y ? void 0 : Y.getIdDaerah()) || 0)),
                                                Q.append("search[value]", U),
                                                (this.labelKokabSearchIsLoading = !0),
                                                this.labelKokabService.find(Q).pipe(
                                                    (0, ka.U)(($) => (null == $ ? void 0 : $.data)),
                                                    (0, fa.b)(() => (this.labelKokabSearchIsLoading = !1)),
                                                    (0, Sa.K)(($) => ((this.labelKokabSearchIsLoading = !1), (0, ja.of)([])))
                                                )
                                            );
                                        })
                                    );
                                }),
                                (this.subGiatSearch = (w) => {
                                    const R = w.pipe((0, ha.b)(500)),
                                        A = this.subGiatClick$.pipe(
                                            (0, ga.h)(() => {
                                                var U;
                                                return !(null === (U = this.subGiatInstance) || void 0 === U ? void 0 : U.isPopupOpen());
                                            })
                                        );
                                    return (0, ma.T)(R, this.subGiatFocus$, A).pipe(
                                        (0, ba.x)(),
                                        (0, va.w)((U) => {
                                            var W, Y, Q;
                                            new Pa.LE()
                                                .set("tahun", String(this.konfigurasiService.getTahun() || 0))
                                                .set("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0))
                                                .set("id_unit", String((null === (W = this.skpdModel) || void 0 === W ? void 0 : W.id_skpd) || 0))
                                                .set("search", U);
                                            const ea = new FormData();
                                            return (
                                                ea.append("id_unit", String((null === (Y = this.skpdModel) || void 0 === Y ? void 0 : Y.id_skpd) || 0)),
                                                ea.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                                ea.append("id_daerah", String((null === (Q = this.konfigurasiService) || void 0 === Q ? void 0 : Q.getIdDaerah()) || 0)),
                                                ea.append("search", U),
                                                (this.subGiatSearchIsLoading = !0),
                                                this.subGiatService.findByTahunDaerahUnitPost(ea).pipe(
                                                    (0, ka.U)((ta) => (null == ta ? void 0 : ta.data)),
                                                    (0, fa.b)(() => (this.subGiatSearchIsLoading = !1)),
                                                    (0, Sa.K)((ta) => ((this.subGiatSearchIsLoading = !1), (0, ja.of)([])))
                                                )
                                            );
                                        })
                                    );
                                });
                        }
                        ngOnInit() {
                            this.activatedRoute.queryParams.subscribe((t) => {
                                var e, n;
                                (this.queryParams = t), this.buildForm(), this.loadDaerahProvinsi(), this.loadSubBelanja(), this.cekTahapRenstra(), this.loadDaerah();
                                const s = new FormData();
                                s.append("id_daerah", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) || 0)),
                                    s.append("tahun", String((null === (n = this.konfigurasiService) || void 0 === n ? void 0 : n.getTahun()) || 0));
                            });
                        }
                        ngOnDestroy() {
                            var t, e, n, s, o, l;
                            null === (t = this.subBelanjaSub) || void 0 === t || t.unsubscribe(),
                                null === (e = this.daerahSub) || void 0 === e || e.unsubscribe(),
                                null === (n = this.daerahProvinsiSub) || void 0 === n || n.unsubscribe(),
                                null === (s = this.detilLokasiSub) || void 0 === s || s.unsubscribe(),
                                null === (o = this.kecamatanSub) || void 0 === o || o.unsubscribe(),
                                null === (l = this.kelurahanDesaSub) || void 0 === l || l.unsubscribe();
                        }
                        addTagBelanja() {
                            this.tagBelanjaList.push(new ht());
                        }
                        onRemoveTagBelanja(t) {
                            this.tagBelanjaList.splice(t, 1);
                        }
                        addDanaBelanja() {
                            this.danaBelanjaList.push(new he());
                        }
                        addIndikatorProgram() {
                            this.indikatorProgramList.push(new Po());
                        }
                        addIndikatorKegiatan() {
                            this.indikatorKegiatanList.push(new No());
                        }
                        getRenstraIndikatorProgram() {
                            const t = this.modal.open(Qa.D, { size: "md" });
                            (t.componentInstance.tipe_icon = "check"),
                                (t.componentInstance.warna_icon = "warning"),
                                (t.componentInstance.isi_text = "Anda yakin akan salin data Indikator Outcome dari Renstra?"),
                                (t.componentInstance.tombol_true_text = "Ya"),
                                (t.componentInstance.tombol_false_text = "Kembali"),
                                t.result.then((e) => {
                                    var n, s, o, l, _, r, u, k, m;
                                    if (1 == e) {
                                        const v = new FormData();
                                        v.append("tahun", this.konfigurasiService.getTahun()),
                                            v.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                            v.append("id_unit", String((null === (n = this.skpdModel) || void 0 === n ? void 0 : n.id_unit) || 0)),
                                            v.append("id_skpd", String((null === (s = this.skpdModel) || void 0 === s ? void 0 : s.id_unit) || 0)),
                                            v.append("id_sub_skpd", String((null === (o = this.skpdModel) || void 0 === o ? void 0 : o.id_skpd) || 0)),
                                            v.append("id_bl", "0"),
                                            v.append("id_program", String(null === (l = this.renjaSubBelanja) || void 0 === l ? void 0 : l.id_program)),
                                            v.append("id_giat", String(null === (_ = this.renjaSubBelanja) || void 0 === _ ? void 0 : _.id_giat)),
                                            v.append("kode_program", String(null === (r = this.renjaSubBelanja) || void 0 === r ? void 0 : r.kode_program)),
                                            v.append("id_daerah_log", null === (u = this.userSession) || void 0 === u ? void 0 : u.daerah_id),
                                            v.append("id_user_log", null === (k = this.userSession) || void 0 === k ? void 0 : k.user_id),
                                            v.append("is_prop", null === (m = this.userSession) || void 0 === m ? void 0 : m.is_prop),
                                            this.sinkronRenstraService.sinkronProgram(v).subscribe({
                                                next: (g) => {
                                                    this.toastr.success("Salin data Indikator Outcome dari Renstra Berhasil", "Sukses");
                                                },
                                                error: (g) => {
                                                    this.toastr.error("Salin data Indikator Outcome dari Renstra Gagal", "Error!");
                                                },
                                            });
                                    }
                                });
                        }
                        getRenstraIndikatorKegiatan() {
                            const t = this.modal.open(Qa.D, { size: "md" });
                            (t.componentInstance.tipe_icon = "check"),
                                (t.componentInstance.warna_icon = "warning"),
                                (t.componentInstance.isi_text = "Anda yakin akan salin data Indikator Output dari Renstra?"),
                                (t.componentInstance.tombol_true_text = "Ya"),
                                (t.componentInstance.tombol_false_text = "Kembali"),
                                t.result.then((e) => {
                                    var n, s, o, l, _, r, u, k, m;
                                    if (1 == e) {
                                        const v = new FormData();
                                        v.append("tahun", this.konfigurasiService.getTahun()),
                                            v.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                            v.append("id_unit", String((null === (n = this.skpdModel) || void 0 === n ? void 0 : n.id_unit) || 0)),
                                            v.append("id_skpd", String((null === (s = this.skpdModel) || void 0 === s ? void 0 : s.id_unit) || 0)),
                                            v.append("id_sub_skpd", String((null === (o = this.skpdModel) || void 0 === o ? void 0 : o.id_skpd) || 0)),
                                            v.append("id_bl", "0"),
                                            v.append("id_program", String(null === (l = this.renjaSubBelanja) || void 0 === l ? void 0 : l.id_program)),
                                            v.append("id_giat", String(null === (_ = this.renjaSubBelanja) || void 0 === _ ? void 0 : _.id_giat)),
                                            v.append("kode_giat", String(null === (r = this.renjaSubBelanja) || void 0 === r ? void 0 : r.kode_giat)),
                                            v.append("id_daerah_log", null === (u = this.userSession) || void 0 === u ? void 0 : u.daerah_id),
                                            v.append("id_user_log", null === (k = this.userSession) || void 0 === k ? void 0 : k.user_id),
                                            v.append("is_prop", null === (m = this.userSession) || void 0 === m ? void 0 : m.is_prop),
                                            this.sinkronRenstraService.sinkronGiat(v).subscribe({
                                                next: (g) => {
                                                    this.toastr.success("Salin data Indikator Output dari Renstra berhasil", "Sukses");
                                                },
                                                error: (g) => {
                                                    this.toastr.error("Salin data Indikator Output dari Renstra Gagal", "Error!");
                                                },
                                            });
                                    }
                                });
                        }
                        onRemoveIndikatorProgram(t) {
                            this.indikatorProgramList.splice(t, 1);
                        }
                        onRemoveIndikatorKegiatan(t) {
                            this.indikatorKegiatanList.splice(t, 1);
                        }
                        onRemoveDanaBelanja(t) {
                            this.danaBelanjaList.splice(t, 1);
                        }
                        onDanaBelanjaChanged(t, e) {
                            (this.danaBelanjaList[t] = e), this.updateAnggaranSubGiat();
                        }
                        get lokasiKegiatanList() {
                            var t;
                            return null === (t = this.subBelanjaForm) || void 0 === t ? void 0 : t.get("lokasi_kegiatan_list");
                        }
                        addLokasiKegiatan() {
                            this.lokasiKegiatanList.push(
                                new p.cw({ id_detil_lokasi: new p.NI(""), id_kab_kota: new p.NI("", [p.kI.maxLength(255)]), id_camat: new p.NI("", [p.kI.maxLength(255)]), id_lurah: new p.NI("", [p.kI.maxLength(255)]) })
                            );
                        }
                        removeLokasiKegiatan(t) {
                            var e, n, s, o, l, _, r, u, k;
                            if (this.lokasiKegiatanList.at(t).value.id_detil_lokasi) {
                                const m = new FormData();
                                m.append("id_detil_lokasi", String(this.lokasiKegiatanList.at(t).value.id_detil_lokasi)),
                                    m.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                    m.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                                    m.append("id_unit", String((null === (n = null === (e = this.subBelanjaForm) || void 0 === e ? void 0 : e.get("id_unit")) || void 0 === n ? void 0 : n.value) || 0)),
                                    m.append("id_bl", "0"),
                                    m.append("id_sub_bl", "0"),
                                    m.append("id_kab_kota", String(this.lokasiKegiatanList.at(t).value.id_kab_kota)),
                                    m.append("id_camat", String(this.lokasiKegiatanList.at(t).value.id_camat)),
                                    m.append("id_lurah", String(this.lokasiKegiatanList.at(t).value.id_lurah)),
                                    m.append("id_skpd", String(null === (s = this.renjaSubBelanja) || void 0 === s ? void 0 : s.id_skpd)),
                                    m.append("id_sub_skpd", String(null === (o = this.renjaSubBelanja) || void 0 === o ? void 0 : o.id_sub_skpd)),
                                    m.append("id_program", String(null === (l = this.renjaSubBelanja) || void 0 === l ? void 0 : l.id_program)),
                                    m.append("id_giat", String(null === (_ = this.renjaSubBelanja) || void 0 === _ ? void 0 : _.id_giat)),
                                    m.append("id_sub_giat", String(null === (r = this.renjaSubBelanja) || void 0 === r ? void 0 : r.id_sub_giat)),
                                    m.append("nama_daerah", ""),
                                    m.append("nama_unit", ""),
                                    m.append("nama_kab_kota", ""),
                                    m.append("nama_camat", ""),
                                    m.append("nama_lurah", ""),
                                    m.append("id_daerah_log", null === (u = this.userSession) || void 0 === u ? void 0 : u.daerah_id),
                                    m.append("id_user_log", null === (k = this.userSession) || void 0 === k ? void 0 : k.user_id),
                                    this.lokasiKegiatanList.disable(),
                                    this.detilLokasiService.update(m).subscribe({
                                        next: () => {
                                            this.lokasiKegiatanList.removeAt(t), this.lokasiKegiatanList.enable();
                                        },
                                        error: (v) => {
                                            this.lokasiKegiatanList.enable();
                                        },
                                    });
                            } else this.lokasiKegiatanList.removeAt(t);
                        }
                        get indikatorKeluaranList() {
                            var t;
                            return null === (t = this.subBelanjaForm) || void 0 === t ? void 0 : t.get("indikator_keluaran_list");
                        }
                        addIndikatorKeluaran() {
                            this.indikatorKeluaranList.push(new p.cw({ id_output_bl: new p.NI(""), tolok_ukur: new p.NI("", [p.kI.maxLength(500)]), target: new p.NI("", [p.kI.maxLength(20)]), satuan: new p.NI("", [p.kI.maxLength(20)]) }));
                        }
                        removeIndikatorKeluaran(t) {
                            var e, n, s, o, l, _, r, u, k, m;
                            if (this.indikatorKeluaranList.at(t).value.id_output_bl) {
                                const v = new FormData();
                                v.append("id_output_bl", String(this.indikatorKeluaranList.at(t).value.id_output_bl)),
                                    v.append("id_bl", "0"),
                                    v.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                    v.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                                    v.append("id_unit", String((null === (n = null === (e = this.subBelanjaForm) || void 0 === e ? void 0 : e.get("id_unit")) || void 0 === n ? void 0 : n.value) || 0)),
                                    v.append("id_sub_bl", "0"),
                                    v.append("tolok_ukur", String(this.indikatorKeluaranList.at(t).value.tolok_ukur)),
                                    v.append("target", String(this.indikatorKeluaranList.at(t).value.target)),
                                    v.append("satuan", String(this.indikatorKeluaranList.at(t).value.satuan)),
                                    v.append("target_teks", ""),
                                    v.append("tolok_ukur_sub", ""),
                                    v.append("target_sub", ""),
                                    v.append("satuan_sub", ""),
                                    v.append("target_sub_teks", ""),
                                    v.append("id_sub_bl", String(null === (s = this.renjaSubBelanja) || void 0 === s ? void 0 : s.id_sub_bl)),
                                    v.append("id_skpd", String(null === (o = this.renjaSubBelanja) || void 0 === o ? void 0 : o.id_skpd)),
                                    v.append("id_sub_skpd", String(null === (l = this.renjaSubBelanja) || void 0 === l ? void 0 : l.id_sub_skpd)),
                                    v.append("id_program", String(null === (_ = this.renjaSubBelanja) || void 0 === _ ? void 0 : _.id_program)),
                                    v.append("id_giat", String(null === (r = this.renjaSubBelanja) || void 0 === r ? void 0 : r.id_giat)),
                                    v.append("id_sub_giat", String(null === (u = this.renjaSubBelanja) || void 0 === u ? void 0 : u.id_sub_giat)),
                                    v.append("id_daerah_log", null === (k = this.userSession) || void 0 === k ? void 0 : k.daerah_id),
                                    v.append("id_user_log", null === (m = this.userSession) || void 0 === m ? void 0 : m.user_id),
                                    this.indikatorKeluaranList.disable(),
                                    this.indikatorKeluaranService.update(v).subscribe({
                                        next: () => {
                                            this.indikatorKeluaranList.removeAt(t), this.indikatorKeluaranList.enable();
                                        },
                                        error: (g) => {
                                            this.indikatorKeluaranList.enable();
                                        },
                                    });
                            } else this.indikatorKeluaranList.removeAt(t);
                        }
                        onKotaKabupatenChange(t, e) {
                            var n;
                            (this.id_kab_kota_list[t] = t), null === (n = this.lokasiKegiatanList.at(e).get("id_camat")) || void 0 === n || n.setValue(""), this.loadKecamatanList(t, e);
                        }
                        onKecamatanChange(t, e) {
                            var n;
                            (this.id_camat_list[t] = t), null === (n = this.lokasiKegiatanList.at(e).get("id_lurah")) || void 0 === n || n.setValue(""), this.loadKelurahanDesaList(t, e);
                        }
                        onKelurahanDesaChange(t) {
                            this.id_desa_list[t] = t;
                        }
                        onChangeSubGiat() {
                            var t, e, n, s;
                            null === (e = null === (t = this.subBelanjaForm) || void 0 === t ? void 0 : t.get("indikator_keluaran_list")) || void 0 === e || e.patchValue({ tolok_ukur: "", satuan: "" }),
                                void 0 !== this.subGiatModel &&
                                    ((this.nilai_is_xx = "X.XX" == this.subGiatModel.kode_sub_giat.substring(0, 4) ? 1 : 0),
                                    null === (s = null === (n = this.subBelanjaForm) || void 0 === n ? void 0 : n.get("indikator_keluaran_list")) ||
                                        void 0 === s ||
                                        s.patchValue({ tolok_ukur: this.subGiatModel.indikator, satuan: this.subGiatModel.satuan }));
                        }
                        skpdChange() {
                            this.bidangUrusanModel = void 0;
                        }
                        onSubmit() {
                            var t, e, n, s, o, l, _, r, u, k, m, v, g, C, h, f, y, B, F, c, b, I, x, q, T, P, Z, J, w, R, A, N, U, W, Y, Q, $, ea, ta, sa, la, E, ua, ra;
                            if (!this.subGiatModel || (null === (t = this.subBelanjaForm) || void 0 === t ? void 0 : t.invalid)) return void alert("Mohon semua kolom form diisi");
                            (this.isSaving = !0), null === (e = this.subBelanjaForm) || void 0 === e || e.disable(), new FormData();
                            let da = this.indikatorProgramList.map((ia) => ia.id_capaian_bl).join(",");
                            this.indikatorProgramList.forEach((ia) => {
                                var Ta, M, Ia, Ba, Da, Fa, Ua, Za, Ca, ya;
                                const _a = new FormData();
                                _a.append("indikator_program_list", da),
                                    _a.append("tahun", this.konfigurasiService.getTahun()),
                                    _a.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                    _a.append("id_unit", String((null === (Ta = this.skpdModel) || void 0 === Ta ? void 0 : Ta.id_unit) || 0)),
                                    _a.append("id_skpd", String((null === (M = this.skpdModel) || void 0 === M ? void 0 : M.id_unit) || 0)),
                                    _a.append("id_sub_skpd", String((null === (Ia = this.skpdModel) || void 0 === Ia ? void 0 : Ia.id_skpd) || 0)),
                                    _a.append("id_bl", "0"),
                                    _a.append("id_program", String(null === (Ba = this.renjaSubBelanja) || void 0 === Ba ? void 0 : Ba.id_program)),
                                    _a.append("id_giat", String(null === (Da = this.renjaSubBelanja) || void 0 === Da ? void 0 : Da.id_giat)),
                                    _a.append("tolak_ukur", ia.tolak_ukur),
                                    _a.append("target", ia.target),
                                    _a.append("satuan", ia.satuan),
                                    _a.append("target_teks", ia.target + " " + ia.satuan),
                                    _a.append(
                                        "kode_rpjm",
                                        "M-" +
                                            String((null === (Fa = this.skpdModel) || void 0 === Fa ? void 0 : Fa.id_skpd) || 0) +
                                            "-" +
                                            String((null === (Ua = this.renjaSubBelanja) || void 0 === Ua ? void 0 : Ua.id_program) || 0) +
                                            "-" +
                                            (null === (Za = this.renjaSubBelanja) || void 0 === Za ? void 0 : Za.id_giat)
                                    ),
                                    _a.append("id_daerah_log", null === (Ca = this.userSession) || void 0 === Ca ? void 0 : Ca.daerah_id),
                                    _a.append("id_user_log", null === (ya = this.userSession) || void 0 === ya ? void 0 : ya.user_id),
                                    ia.id_capaian_bl
                                        ? (_a.append("id_capaian_bl", ia.id_capaian_bl), this.capaianBelanjaService.update(_a).subscribe({ next: (G) => {}, error: (G) => {} }))
                                        : this.capaianBelanjaService.add(_a).subscribe({ next: (G) => {}, error: (G) => {} });
                            });
                            let pa = this.indikatorKegiatanList.map((ia) => ia.id_output_giat).join(",");
                            this.indikatorKegiatanList.forEach((ia) => {
                                var Ta, M, Ia, Ba, Da, Fa, Ua, Za, Ca, ya, _a, G, qa;
                                const ca = new FormData();
                                ca.append("indikator_kegiatan_list", pa),
                                    ca.append("tahun", this.konfigurasiService.getTahun()),
                                    ca.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                    ca.append("id_unit", String((null === (Ta = this.skpdModel) || void 0 === Ta ? void 0 : Ta.id_unit) || 0)),
                                    ca.append("id_skpd", String((null === (M = this.skpdModel) || void 0 === M ? void 0 : M.id_unit) || 0)),
                                    ca.append("id_sub_skpd", String((null === (Ia = this.skpdModel) || void 0 === Ia ? void 0 : Ia.id_skpd) || 0)),
                                    ca.append("id_bl", "0"),
                                    ca.append("id_program", String(null === (Ba = this.renjaSubBelanja) || void 0 === Ba ? void 0 : Ba.id_program)),
                                    ca.append("id_giat", String(null === (Da = this.renjaSubBelanja) || void 0 === Da ? void 0 : Da.id_giat)),
                                    ca.append("tolak_ukur", ia.tolok_ukur),
                                    ca.append("target", ia.target),
                                    ca.append("satuan", ia.satuan),
                                    ca.append("target_teks", ia.target + " " + ia.satuan),
                                    ca.append(
                                        "kode_rpjm",
                                        "M-" +
                                            String((null === (Fa = this.skpdModel) || void 0 === Fa ? void 0 : Fa.id_skpd) || 0) +
                                            "-" +
                                            String((null === (Ua = this.renjaSubBelanja) || void 0 === Ua ? void 0 : Ua.id_program) || 0) +
                                            "-" +
                                            (null === (Za = this.renjaSubBelanja) || void 0 === Za ? void 0 : Za.id_giat)
                                    ),
                                    ca.append(
                                        "kode_renstra",
                                        "M-R-" +
                                            String((null === (Ca = this.skpdModel) || void 0 === Ca ? void 0 : Ca.id_skpd) || 0) +
                                            "-" +
                                            String((null === (ya = this.renjaSubBelanja) || void 0 === ya ? void 0 : ya.id_program) || 0) +
                                            "-" +
                                            (null === (_a = this.renjaSubBelanja) || void 0 === _a ? void 0 : _a.id_giat)
                                    ),
                                    ca.append("id_daerah_log", null === (G = this.userSession) || void 0 === G ? void 0 : G.daerah_id),
                                    ca.append("id_user_log", null === (qa = this.userSession) || void 0 === qa ? void 0 : qa.user_id),
                                    ia.id_output_giat
                                        ? (ca.append("id_output_giat", ia.id_output_giat), this.outputgiatBelanjaService.update(ca).subscribe({ next: (Va) => {}, error: (Va) => {} }))
                                        : this.outputgiatBelanjaService.add(ca).subscribe({ next: (Va) => {}, error: (Va) => {} });
                            });
                            const na = new FormData();
                            na.append("tahun", this.konfigurasiService.getTahun()),
                                na.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                na.append("id_unit", String((null === (n = this.skpdModel) || void 0 === n ? void 0 : n.id_unit) || 0)),
                                na.append("id_skpd", String((null === (s = this.skpdModel) || void 0 === s ? void 0 : s.id_unit) || 0)),
                                na.append("id_sub_skpd", String((null === (o = this.skpdModel) || void 0 === o ? void 0 : o.id_skpd) || 0)),
                                na.append("id_bl", String((null === (l = this.dataSasaran) || void 0 === l ? void 0 : l.id_bl) || 0)),
                                na.append("id_urusan", String(null === (_ = this.renjaSubBelanja) || void 0 === _ ? void 0 : _.id_urusan)),
                                na.append("id_bidang_urusan", String(null === (r = this.renjaSubBelanja) || void 0 === r ? void 0 : r.id_bidang_urusan)),
                                na.append("id_program", String(null === (u = this.renjaSubBelanja) || void 0 === u ? void 0 : u.id_program)),
                                na.append("id_giat", String(null === (k = this.renjaSubBelanja) || void 0 === k ? void 0 : k.id_giat)),
                                na.append("tolak_ukur", null === (m = this.subBelanjaForm) || void 0 === m ? void 0 : m.value.hasil_bl_tolok_ukur),
                                na.append("target", null === (v = this.subBelanjaForm) || void 0 === v ? void 0 : v.value.hasil_bl_target),
                                na.append("satuan", null === (g = this.subBelanjaForm) || void 0 === g ? void 0 : g.value.hasil_bl_satuan),
                                na.append(
                                    "target_teks",
                                    (null === (C = this.subBelanjaForm) || void 0 === C ? void 0 : C.value.hasil_bl_target) + " " + (null === (h = this.subBelanjaForm) || void 0 === h ? void 0 : h.value.hasil_bl_satuan)
                                ),
                                na.append("created_user", null === (f = this.userSession) || void 0 === f ? void 0 : f.user_id),
                                na.append("id_daerah_log", null === (y = this.userSession) || void 0 === y ? void 0 : y.daerah_id),
                                na.append("id_user_log", null === (B = this.userSession) || void 0 === B ? void 0 : B.user_id),
                                (null === (F = this.hasilKegiatan) || void 0 === F ? void 0 : F.id_hasil_bl)
                                    ? (na.append("id_hasil_bl", String((null === (c = this.hasilKegiatan) || void 0 === c ? void 0 : c.id_hasil_bl) || 0)),
                                      this.subBelanjaService.updateHasilBL(na).subscribe({ next: (ia) => {}, error: (ia) => {} }))
                                    : "" != (null === (b = this.subBelanjaForm) || void 0 === b ? void 0 : b.value.hasil_bl_tolok_ukur) && this.subBelanjaService.simpanHasilBL(na).subscribe({ next: (ia) => {}, error: (ia) => {} });
                            const V = new FormData();
                            V.append("tahun", this.konfigurasiService.getTahun()),
                                V.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                V.append("id_unit", String((null === (I = this.skpdModel) || void 0 === I ? void 0 : I.id_unit) || 0)),
                                V.append("id_skpd", String((null === (x = this.skpdModel) || void 0 === x ? void 0 : x.id_unit) || 0)),
                                V.append("id_sub_skpd", String((null === (q = this.skpdModel) || void 0 === q ? void 0 : q.id_skpd) || 0)),
                                V.append("id_bl", String((null === (T = this.dataSasaran) || void 0 === T ? void 0 : T.id_bl) || 0)),
                                V.append("id_urusan", String(null === (P = this.renjaSubBelanja) || void 0 === P ? void 0 : P.id_urusan)),
                                V.append("id_bidang_urusan", String(null === (Z = this.renjaSubBelanja) || void 0 === Z ? void 0 : Z.id_bidang_urusan)),
                                V.append("id_program", String(null === (J = this.renjaSubBelanja) || void 0 === J ? void 0 : J.id_program)),
                                V.append("id_giat", String(null === (w = this.renjaSubBelanja) || void 0 === w ? void 0 : w.id_giat)),
                                V.append("sasaran", null === (R = this.subBelanjaForm) || void 0 === R ? void 0 : R.value.kel_sasaran_kegiatan),
                                V.append("id_daerah_log", null === (A = this.userSession) || void 0 === A ? void 0 : A.daerah_id),
                                V.append("id_user_log", null === (N = this.userSession) || void 0 === N ? void 0 : N.user_id),
                                this.subBelanjaService.simpanBL(V).subscribe({ next: (ia) => {}, error: (ia) => {} }),
                                console.log(this.subBelanjaForm);
                            const H = new FormData();
                            H.append("tahun", this.konfigurasiService.getTahun()),
                                H.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                H.append("id_unit", String((null === (U = this.skpdModel) || void 0 === U ? void 0 : U.id_unit) || 0)),
                                H.append("id_skpd", String((null === (W = this.skpdModel) || void 0 === W ? void 0 : W.id_unit) || 0)),
                                H.append("id_sub_skpd", String((null === (Y = this.skpdModel) || void 0 === Y ? void 0 : Y.id_skpd) || 0)),
                                H.append("id_bl", String((null === (Q = this.dataSasaran) || void 0 === Q ? void 0 : Q.id_bl) || 0)),
                                H.append("id_urusan", String(null === ($ = this.renjaSubBelanja) || void 0 === $ ? void 0 : $.id_urusan)),
                                H.append("id_bidang_urusan", String(null === (ea = this.renjaSubBelanja) || void 0 === ea ? void 0 : ea.id_bidang_urusan)),
                                H.append("id_program", String(null === (ta = this.renjaSubBelanja) || void 0 === ta ? void 0 : ta.id_program)),
                                H.append("id_giat", String(null === (sa = this.renjaSubBelanja) || void 0 === sa ? void 0 : sa.id_giat)),
                                H.append("id_sub_giat", String(null === (la = this.renjaSubBelanja) || void 0 === la ? void 0 : la.id_sub_giat)),
                                H.append("id_label_pusat", String((null === (E = this.labelPusatModel) || void 0 === E ? void 0 : E.id_label_pusat) || 0)),
                                H.append("id_label_bl", this.labelBelanja.id_label_bl),
                                H.append("id_daerah_log", null === (ua = this.userSession) || void 0 === ua ? void 0 : ua.daerah_id),
                                H.append("id_user_log", null === (ra = this.userSession) || void 0 === ra ? void 0 : ra.user_id),
                                this.labelBelanjaService.simpanLabelPusat(H).subscribe({ next: (ia) => {}, error: (ia) => {} }),
                                (this.isSaving = !1),
                                this.activeModal.close();
                        }
                        loadIdBidangUrusanList() {
                            var t, e;
                            const n = new FormData();
                            n.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                n.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                                n.append("id_unit", String((null === (e = null === (t = this.subBelanjaForm) || void 0 === t ? void 0 : t.get("id_unit")) || void 0 === e ? void 0 : e.value) || 0)),
                                (this.bidangUrusanOrganisasiIsLoading = !0),
                                this.bidangUrusanOrganisasiService.findByIdUnit(n).subscribe({
                                    next: (s) => {
                                        (this.bidangUrusanOrganisasiIsLoading = !1),
                                            (this.bidangUrusanOrganisasiList = s.data.data),
                                            (this.bidangUrusanList = this.bidangUrusanList.filter((o) => this.bidangUrusanOrganisasiList.some((l) => o.id_bidang_urusan == l.id_bidang_urusan)));
                                    },
                                    error: (s) => {
                                        this.bidangUrusanOrganisasiIsLoading = !1;
                                    },
                                });
                        }
                        updateAnggaranSubGiat() {
                            var t, e;
                            let n = 0;
                            this.danaBelanjaList.forEach((s) => {
                                n += s.pagu_dana;
                            }),
                                null === (e = null === (t = this.subBelanjaForm) || void 0 === t ? void 0 : t.get("pagu")) || void 0 === e || e.patchValue(n);
                        }
                        onLabelGiatChanged(t, e) {
                            this.tagBelanjaList[t].id_label_giat = e.id_label_giat;
                        }
                        buildForm() {
                            this.subBelanjaForm = new p.cw(
                                {
                                    id_label_pusat: new p.NI("", [p.kI.maxLength(8)]),
                                    id_label_prov: new p.NI("", [p.kI.maxLength(8)]),
                                    id_label_kokab: new p.NI("", [p.kI.maxLength(8)]),
                                    id_sub_giat: new p.NI("", [p.kI.maxLength(30)]),
                                    no_sub_giat: new p.NI("", [p.kI.maxLength(30)]),
                                    id_lokasi: new p.NI("", [p.kI.maxLength(8)]),
                                    lokasi_kegiatan_list: new p.Oe([
                                        new p.cw({ id_detil_lokasi: new p.NI(""), id_kab_kota: new p.NI("", [p.kI.maxLength(8)]), id_camat: new p.NI("", [p.kI.maxLength(8)]), id_lurah: new p.NI("", [p.kI.maxLength(8)]) }),
                                    ]),
                                    indikator_keluaran_list: new p.cw({ id_output_bl: new p.NI(""), tolok_ukur: new p.NI("", [p.kI.maxLength(500)]), target: new p.NI("", [p.kI.maxLength(20)]), satuan: new p.NI("", [p.kI.maxLength(20)]) }),
                                    waktu_awal: new p.NI("", [p.kI.required, p.kI.maxLength(8)]),
                                    waktu_akhir: new p.NI("", [p.kI.required, p.kI.maxLength(8)]),
                                    pagu: new p.NI("", [p.kI.maxLength(15)]),
                                    pagu_n_depan: new p.NI("", [p.kI.maxLength(15)]),
                                    output_teks: new p.NI("", [p.kI.maxLength(255)]),
                                    nama_program: new p.NI("", [p.kI.maxLength(5e3)]),
                                    nama_kegiatan: new p.NI("", [p.kI.maxLength(5e3)]),
                                    kel_sasaran_kegiatan: new p.NI("", [p.kI.maxLength(5e3)]),
                                    hasil_bl_tolok_ukur: new p.NI("", [p.kI.maxLength(5e3)]),
                                    hasil_bl_satuan: new p.NI("", [p.kI.maxLength(15)]),
                                    hasil_bl_target: new p.NI("", [p.kI.maxLength(100)]),
                                },
                                { validators: [this.checkIfEndDateAfterStartDate] }
                            );
                        }
                        loadDaerahProvinsi() {
                            this.daerahProvinsiSub = this.daerahService.view(this.konfigurasiService.getIdDaerah()).subscribe({
                                next: (t) => {
                                    var e, n;
                                    this.daerah = t.data[0];
                                    const s = new FormData();
                                    s.append("id_daerah", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) || 0)),
                                        s.append("tahun", String((null === (n = this.konfigurasiService) || void 0 === n ? void 0 : n.getTahun()) || 0)),
                                        this.loadKotaKabupatenList(s);
                                },
                                error: (t) => {},
                            });
                        }
                        loadDaerah() {
                            this.daerahSub = this.daerahService.view(this.konfigurasiService.getIdDaerah()).subscribe((t) => {
                                this.nama_daerah = t.data[0].nama_daerah;
                            });
                        }
                        loadSubBelanja() {
                            var t, e;
                            if ("edit" === this.mode || "view" === this.mode) {
                                "edit" === this.mode ? (this.pageTitle = "Ubah Sub Kegiatan Belanja") : "view" === this.mode && (this.pageTitle = "Lihat Kegiatan Belanja");
                                const n = new FormData();
                                n.append("id_daerah", String((null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getIdDaerah()) || 0)),
                                    n.append("tahun", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getTahun()) || 0)),
                                    (this.subBelanjaIsLoading = !0),
                                    (this.subBelanjaSub = this.subBelanjaService.view(String(this.id_sub_bl), n).subscribe({
                                        next: (s) => {
                                            var o, l, _, r, u, k, m, v, g, C, h, f, y, B, F, c, b, I;
                                            (this.renjaSubBelanja = s.data[0]),
                                                this.renjaSubBelanja &&
                                                    (this.loadSkpd(),
                                                    (this.bidangUrusanIsLoading = !0),
                                                    (this.bidangUrusanSub = this.bidangUrusanService.view(this.renjaSubBelanja.id_bidang_urusan, this.renjaSubBelanja.tahun).subscribe({
                                                        next: (x) => {
                                                            (this.bidangUrusanIsLoading = !1), (this.bidangUrusanModel = x.data[0]);
                                                        },
                                                        error: (x) => {
                                                            this.bidangUrusanIsLoading = !1;
                                                        },
                                                    })),
                                                    (this.subGiatIsLoading = !0),
                                                    (this.subGiatSub = this.subGiatService.view(this.renjaSubBelanja.id_sub_giat, this.konfigurasiService.getTahun()).subscribe({
                                                        next: (x) => {
                                                            (this.subGiatIsLoading = !1), (this.subGiatModel = x.data[0]);
                                                        },
                                                        error: (x) => {
                                                            this.subGiatIsLoading = !1;
                                                        },
                                                    })),
                                                    null === (o = this.subBelanjaForm) ||
                                                        void 0 === o ||
                                                        o.patchValue({
                                                            id_lokasi: null === (l = this.renjaSubBelanja) || void 0 === l ? void 0 : l.id_lokasi,
                                                            no_sub_giat: null === (_ = this.renjaSubBelanja) || void 0 === _ ? void 0 : _.no_sub_giat.trim(),
                                                            waktu_awal: null === (r = this.renjaSubBelanja) || void 0 === r ? void 0 : r.waktu_awal,
                                                            waktu_akhir: null === (u = this.renjaSubBelanja) || void 0 === u ? void 0 : u.waktu_akhir,
                                                            pagu: null === (k = this.renjaSubBelanja) || void 0 === k ? void 0 : k.pagu,
                                                            pagu_n_depan: null === (m = this.renjaSubBelanja) || void 0 === m ? void 0 : m.pagu_n_depan,
                                                            output_teks: null === (v = this.renjaSubBelanja) || void 0 === v ? void 0 : v.output_teks,
                                                            nama_program:
                                                                (null === (g = this.renjaSubBelanja) || void 0 === g ? void 0 : g.kode_program) + " " + (null === (C = this.renjaSubBelanja) || void 0 === C ? void 0 : C.nama_program),
                                                            nama_kegiatan: (null === (h = this.renjaSubBelanja) || void 0 === h ? void 0 : h.kode_giat) + " " + (null === (f = this.renjaSubBelanja) || void 0 === f ? void 0 : f.nama_giat),
                                                        }),
                                                    null === (B = null === (y = this.subBelanjaForm) || void 0 === y ? void 0 : y.get("id_lokasi")) || void 0 === B || B.disable(),
                                                    null === (c = null === (F = this.subBelanjaForm) || void 0 === F ? void 0 : F.get("id_kab_kota")) || void 0 === c || c.disable(),
                                                    null === (I = null === (b = this.subBelanjaForm) || void 0 === b ? void 0 : b.get("id_camat")) || void 0 === I || I.disable(),
                                                    this.loadIndikatorProgram(),
                                                    this.loadIndikatorKegiatan(),
                                                    this.loadSasaranBL(),
                                                    this.loadHasilBL(),
                                                    this.loadLabelPusat(),
                                                    (this.subBelanjaIsLoading = !1));
                                        },
                                        error: (s) => {
                                            this.subBelanjaIsLoading = !1;
                                        },
                                    }));
                            } else this.mode = "add";
                        }
                        loadSkpd() {
                            var t, e, n, s;
                            (this.skpdIsLoading = !0),
                                (this.skpdSub = this.skpdService
                                    .view(
                                        (null === (t = this.renjaSubBelanja) || void 0 === t ? void 0 : t.id_sub_skpd) || (null === (e = this.queryParams) || void 0 === e ? void 0 : e.id_skpd) || 0,
                                        (null === (n = this.renjaSubBelanja) || void 0 === n ? void 0 : n.tahun) || this.konfigurasiService.getTahun() || 0,
                                        (null === (s = this.renjaSubBelanja) || void 0 === s ? void 0 : s.id_daerah) || this.konfigurasiService.getIdDaerah() || 0
                                    )
                                    .subscribe({
                                        next: (o) => {
                                            (this.skpdIsLoading = !1), (this.skpdModel = o.data[0]);
                                        },
                                        error: (o) => {
                                            this.skpdIsLoading = !1;
                                        },
                                    }));
                        }
                        loadLabelBelanja() {
                            const t = new FormData();
                            t.append("tahun", this.konfigurasiService.getTahun()),
                                t.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                t.append("id_sub_bl", String(this.id_sub_bl || 0)),
                                (this.labelBelanjaIsLoading = !0),
                                (this.labelBelanjaSub = this.labelBelanjaService.getByIdSubBl(t).subscribe({
                                    next: (e) => {
                                        var n, s, o, l, _, r, u, k, m, v;
                                        (this.labelBelanjaIsLoading = !1),
                                            (this.labelBelanja = null == e ? void 0 : e.data[0]),
                                            this.labelBelanja &&
                                                ((null === (n = this.daerah) || void 0 === n ? void 0 : n.is_pusat) &&
                                                    ((this.labelPusatIsLoading = !0),
                                                    (this.labelPusatSub = this.labelPusatService.view(String(null === (s = this.labelBelanja) || void 0 === s ? void 0 : s.id_label_pusat)).subscribe({
                                                        next: (g) => {
                                                            (this.labelPusatIsLoading = !1), (this.labelPusatModel = g.data[0]);
                                                        },
                                                        error: (g) => {
                                                            this.labelPusatIsLoading = !1;
                                                        },
                                                    }))),
                                                (null === (o = this.daerah) || void 0 === o ? void 0 : o.is_prop) &&
                                                    ((this.labelProvinsiIsLoading = !0),
                                                    (this.labelProvinsiSub = this.labelProvinsiService
                                                        .view(
                                                            String(null === (l = this.labelBelanja) || void 0 === l ? void 0 : l.id_label_prov),
                                                            String(null === (_ = this.labelBelanja) || void 0 === _ ? void 0 : _.tahun),
                                                            String(null === (r = this.labelBelanja) || void 0 === r ? void 0 : r.id_daerah)
                                                        )
                                                        .subscribe({
                                                            next: (g) => {
                                                                (this.labelProvinsiIsLoading = !1), (this.labelProvinsiModel = g.data[0]);
                                                            },
                                                            error: (g) => {
                                                                this.labelProvinsiIsLoading = !1;
                                                            },
                                                        }))),
                                                (null === (u = this.daerah) || void 0 === u ? void 0 : u.is_pusat) ||
                                                    ((this.labelKokabIsLoading = !0),
                                                    (this.labelKokabSub = this.labelKokabService
                                                        .view(
                                                            String(null === (k = this.labelBelanja) || void 0 === k ? void 0 : k.id_label_kokab),
                                                            String(null === (m = this.labelBelanja) || void 0 === m ? void 0 : m.tahun),
                                                            String(null === (v = this.labelBelanja) || void 0 === v ? void 0 : v.id_daerah)
                                                        )
                                                        .subscribe({
                                                            next: (g) => {
                                                                (this.labelKokabIsLoading = !1), (this.labelKokabModel = g.data[0]);
                                                            },
                                                            error: (g) => {
                                                                this.labelKokabIsLoading = !1;
                                                            },
                                                        }))));
                                    },
                                    error: (e) => {
                                        this.labelBelanjaIsLoading = !1;
                                    },
                                }));
                        }
                        loadLabelPusat() {
                            const t = new FormData();
                            t.append("tahun", this.konfigurasiService.getTahun()),
                                t.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                t.append("id_sub_bl", String(this.id_sub_bl || 0)),
                                (this.labelBelanjaIsLoading = !0),
                                (this.labelBelanjaSub = this.labelBelanjaService.getByIdSubBl(t).subscribe({
                                    next: (e) => {
                                        var n;
                                        (this.labelBelanjaIsLoading = !1),
                                            (this.labelBelanja = null == e ? void 0 : e.data[0]),
                                            this.labelBelanja &&
                                                ((this.labelPusatIsLoading = !0),
                                                (this.labelPusatSub = this.labelPusatService.view(String(null === (n = this.labelBelanja) || void 0 === n ? void 0 : n.id_label_pusat)).subscribe({
                                                    next: (s) => {
                                                        (this.labelPusatIsLoading = !1), (this.labelPusatModel = s.data);
                                                    },
                                                    error: (s) => {
                                                        this.labelPusatIsLoading = !1;
                                                    },
                                                })));
                                    },
                                    error: (e) => {
                                        this.labelBelanjaIsLoading = !1;
                                    },
                                }));
                        }
                        loadTagBelanja() {
                            var t, e, n;
                            const s = new FormData();
                            s.append("tahun", String((null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun()) || 0)),
                                s.append("id_daerah", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) || 0)),
                                s.append("id_sub_bl", String((null === (n = this.renjaSubBelanja) || void 0 === n ? void 0 : n.id_sub_bl) || 0)),
                                (this.tagBelanjaIsLoading = !0),
                                (this.tagBelanjaListSub = this.tagBelanjaService.getByIdSubBl(s).subscribe({
                                    next: (o) => {
                                        (this.tagBelanjaIsLoading = !1),
                                            o.data.forEach((l) => {
                                                this.tagBelanjaList.push(Object.assign(Object.assign({}, new ht()), { id_tag_bl: l.id_tag_bl, id_label_giat: l.id_label_giat }));
                                            });
                                    },
                                    error: (o) => {
                                        this.tagBelanjaIsLoading = !1;
                                    },
                                }));
                        }
                        loadIndikatorProgram() {
                            var t, e, n, s, o, l, _;
                            const r = new FormData();
                            r.append("tahun", String((null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun()) || 0)),
                                r.append("id_daerah", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) || 0)),
                                r.append("id_program", String((null === (n = this.renjaSubBelanja) || void 0 === n ? void 0 : n.id_program) || 0)),
                                r.append("id_giat", String((null === (s = this.renjaSubBelanja) || void 0 === s ? void 0 : s.id_giat) || 0)),
                                r.append("id_unit", String((null === (o = this.renjaSubBelanja) || void 0 === o ? void 0 : o.id_unit) || 0)),
                                r.append("id_skpd", String((null === (l = this.renjaSubBelanja) || void 0 === l ? void 0 : l.id_skpd) || 0)),
                                r.append("id_sub_skpd", String((null === (_ = this.renjaSubBelanja) || void 0 === _ ? void 0 : _.id_sub_skpd) || 0)),
                                (this.indikatorProgramIsLoading = !0),
                                (this.indikatorProgramSub = this.capaianBelanjaService.loadData(r).subscribe({
                                    next: (u) => {
                                        (this.indikatorProgramIsLoading = !1), (this.indikatorProgramList = u.data);
                                    },
                                    error: (u) => {
                                        this.indikatorProgramIsLoading = !1;
                                    },
                                }));
                        }
                        loadIndikatorKegiatan() {
                            var t, e, n, s, o, l, _;
                            const r = new FormData();
                            r.append("tahun", String((null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun()) || 0)),
                                r.append("id_daerah", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) || 0)),
                                r.append("id_program", String((null === (n = this.renjaSubBelanja) || void 0 === n ? void 0 : n.id_program) || 0)),
                                r.append("id_giat", String((null === (s = this.renjaSubBelanja) || void 0 === s ? void 0 : s.id_giat) || 0)),
                                r.append("id_unit", String((null === (o = this.renjaSubBelanja) || void 0 === o ? void 0 : o.id_unit) || 0)),
                                r.append("id_skpd", String((null === (l = this.renjaSubBelanja) || void 0 === l ? void 0 : l.id_skpd) || 0)),
                                r.append("id_sub_skpd", String((null === (_ = this.renjaSubBelanja) || void 0 === _ ? void 0 : _.id_sub_skpd) || 0)),
                                (this.indikatorKegiatanIsLoading = !0),
                                (this.indikatorKegiatanSub = this.outputgiatBelanjaService.loadData(r).subscribe({
                                    next: (u) => {
                                        (this.indikatorKegiatanIsLoading = !1), (this.indikatorKegiatanList = u.data);
                                    },
                                    error: (u) => {
                                        this.indikatorKegiatanIsLoading = !1;
                                    },
                                }));
                        }
                        loadSasaranBL() {
                            var t, e, n, s, o, l, _;
                            const r = new FormData();
                            r.append("tahun", String((null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun()) || 0)),
                                r.append("id_daerah", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) || 0)),
                                r.append("id_program", String((null === (n = this.renjaSubBelanja) || void 0 === n ? void 0 : n.id_program) || 0)),
                                r.append("id_giat", String((null === (s = this.renjaSubBelanja) || void 0 === s ? void 0 : s.id_giat) || 0)),
                                r.append("id_unit", String((null === (o = this.renjaSubBelanja) || void 0 === o ? void 0 : o.id_unit) || 0)),
                                r.append("id_skpd", String((null === (l = this.renjaSubBelanja) || void 0 === l ? void 0 : l.id_skpd) || 0)),
                                r.append("id_sub_skpd", String((null === (_ = this.renjaSubBelanja) || void 0 === _ ? void 0 : _.id_sub_skpd) || 0)),
                                this.subBelanjaService.loadDataBL(r).subscribe({
                                    next: (u) => {
                                        var k;
                                        (this.dataSasaran = u.data), null === (k = this.subBelanjaForm) || void 0 === k || k.patchValue({ kel_sasaran_kegiatan: this.dataSasaran.sasaran });
                                    },
                                    error: (u) => {},
                                });
                        }
                        loadHasilBL() {
                            var t, e, n, s, o, l, _;
                            const r = new FormData();
                            r.append("tahun", String((null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun()) || 0)),
                                r.append("id_daerah", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) || 0)),
                                r.append("id_program", String((null === (n = this.renjaSubBelanja) || void 0 === n ? void 0 : n.id_program) || 0)),
                                r.append("id_giat", String((null === (s = this.renjaSubBelanja) || void 0 === s ? void 0 : s.id_giat) || 0)),
                                r.append("id_unit", String((null === (o = this.renjaSubBelanja) || void 0 === o ? void 0 : o.id_unit) || 0)),
                                r.append("id_skpd", String((null === (l = this.renjaSubBelanja) || void 0 === l ? void 0 : l.id_skpd) || 0)),
                                r.append("id_sub_skpd", String((null === (_ = this.renjaSubBelanja) || void 0 === _ ? void 0 : _.id_sub_skpd) || 0)),
                                this.subBelanjaService.loadHasilBL(r).subscribe({
                                    next: (u) => {
                                        var k, m, v;
                                        (this.hasilKegiatan = u.data[0]),
                                            console.log(this.hasilKegiatan.tolak_ukur),
                                            null === (k = this.subBelanjaForm) || void 0 === k || k.patchValue({ hasil_bl_tolok_ukur: this.hasilKegiatan.tolak_ukur }),
                                            null === (m = this.subBelanjaForm) || void 0 === m || m.patchValue({ hasil_bl_satuan: this.hasilKegiatan.satuan }),
                                            null === (v = this.subBelanjaForm) || void 0 === v || v.patchValue({ hasil_bl_target: this.hasilKegiatan.target });
                                    },
                                    error: (u) => {},
                                });
                        }
                        loadDanaBelanja() {
                            var t, e, n;
                            const s = new FormData();
                            s.append("tahun", String((null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun()) || 0)),
                                s.append("id_daerah", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) || 0)),
                                s.append("id_sub_bl", String((null === (n = this.renjaSubBelanja) || void 0 === n ? void 0 : n.id_sub_bl) || 0)),
                                (this.danaBelanjaIsLoading = !0),
                                (this.danaBelanjaSub = this.danaBelanjaService.getByIdSubBl(s).subscribe({
                                    next: (o) => {
                                        (this.danaBelanjaIsLoading = !1), (this.danaBelanjaList = o.data);
                                    },
                                    error: (o) => {
                                        this.danaBelanjaIsLoading = !1;
                                    },
                                }));
                        }
                        loadDetilLokasi() {
                            var t, e, n;
                            const s = new FormData();
                            s.append("tahun", String((null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun()) || 0)),
                                s.append("id_daerah", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) || 0)),
                                s.append("id_sub_bl", String((null === (n = this.renjaSubBelanja) || void 0 === n ? void 0 : n.id_sub_bl) || 0)),
                                (this.detilLokasiIsLoading = !0),
                                (this.detilLokasiSub = this.detilLokasiService.getByIdSubBl(s).subscribe({
                                    next: (o) => {
                                        (this.detilLokasiIsLoading = !1),
                                            (this.detilLokasiList = o.data),
                                            this.lokasiKegiatanList.clear(),
                                            o.data.forEach((l) => {
                                                const _ = new FormData();
                                                _.append("id_kab_kota", String(l.id_kab_kota)),
                                                    _.append("tahun", String(this.konfigurasiService.getTahun())),
                                                    _.append("length", "1000"),
                                                    (this.kecamatanIsLoadingArray[l.id_kab_kota] = !0),
                                                    (this.kecamatanSub = this.kecamatanService.list(_).subscribe({
                                                        next: (r) => {
                                                            (this.kecamatanIsLoadingArray[l.id_kab_kota] = !1), (this.kecamatanList[l.id_kab_kota] = r.data.data);
                                                            const u = new FormData();
                                                            u.append("id_camat", String(l.id_camat)),
                                                                u.append("tahun", String(this.konfigurasiService.getTahun())),
                                                                u.append("length", "100"),
                                                                (this.kelurahanDesaIsLoadingArray[l.id_camat] = !0),
                                                                (this.kelurahanDesaSub = this.kelurahanService.listByKecamatanAndTahun(u).subscribe({
                                                                    next: (k) => {
                                                                        (this.kelurahanDesaIsLoadingArray[l.id_camat] = !1),
                                                                            (this.kelurahanDesaList[l.id_camat] = k.data.data),
                                                                            this.lokasiKegiatanList.push(
                                                                                new p.cw({
                                                                                    id_detil_lokasi: new p.NI(l.id_detil_lokasi),
                                                                                    id_kab_kota: new p.NI(l.id_kab_kota, [p.kI.maxLength(8)]),
                                                                                    id_camat: new p.NI(l.id_camat, [p.kI.maxLength(8)]),
                                                                                    id_lurah: new p.NI(l.id_lurah, [p.kI.maxLength(8)]),
                                                                                })
                                                                            );
                                                                    },
                                                                    error: (k) => {
                                                                        this.kelurahanDesaIsLoadingArray[l.id_camat] = !1;
                                                                    },
                                                                }));
                                                        },
                                                        error: (r) => {
                                                            this.kecamatanIsLoadingArray[l.id_kab_kota] = !1;
                                                        },
                                                    }));
                                            });
                                    },
                                    error: (o) => {
                                        this.detilLokasiIsLoading = !1;
                                    },
                                }));
                        }
                        loadIndikatorKeluaran() {
                            var t, e, n;
                            const s = new FormData();
                            s.append("tahun", String((null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun()) || 0)),
                                s.append("id_daerah", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) || 0)),
                                s.append("id_sub_bl", String((null === (n = this.renjaSubBelanja) || void 0 === n ? void 0 : n.id_sub_bl) || 0)),
                                (this.indikatorKeluaranIsLoading = !0),
                                (this.indikatorKeluaranSub = this.indikatorKeluaranService.getByIdSubBl(s).subscribe({
                                    next: (o) => {
                                        var l, _;
                                        this.indikatorKeluaranIsLoading = !1;
                                        const r = o.data[0];
                                        null === (_ = null === (l = this.subBelanjaForm) || void 0 === l ? void 0 : l.get("indikator_keluaran_list")) ||
                                            void 0 === _ ||
                                            _.patchValue({ tolok_ukur: r.tolak_ukur, satuan: r.satuan, target: r.target, id_output_bl: r.id_output_bl }),
                                            this.indikatorKeluaranList.push(
                                                new p.cw({
                                                    id_output_bl: new p.NI(r.id_output_bl),
                                                    tolok_ukur: new p.NI(r.tolak_ukur, [p.kI.maxLength(500)]),
                                                    target: new p.NI(r.target, [p.kI.maxLength(20)]),
                                                    satuan: new p.NI(r.satuan, [p.kI.maxLength(20)]),
                                                })
                                            );
                                    },
                                    error: (o) => {
                                        this.indikatorKeluaranIsLoading = !1;
                                    },
                                }));
                        }
                        loadLokasiList(t) {
                            var e, n;
                            null === (n = null === (e = this.subBelanjaForm) || void 0 === e ? void 0 : e.get("id_lokasi")) || void 0 === n || n.disable(),
                                (this.lokasiListSub = this.daerahService.daerahLokasi(t).subscribe({
                                    next: (s) => {
                                        var o, l;
                                        null === (l = null === (o = this.subBelanjaForm) || void 0 === o ? void 0 : o.get("id_lokasi")) || void 0 === l || l.enable(), (this.lokasiList = s.data.data);
                                    },
                                    error: (s) => {
                                        var o, l;
                                        null === (l = null === (o = this.subBelanjaForm) || void 0 === o ? void 0 : o.get("id_lokasi")) || void 0 === l || l.enable();
                                    },
                                }));
                        }
                        loadKotaKabupatenList(t) {
                            var e, n, s, o, l, _;
                            (null === (e = this.daerah) || void 0 === e ? void 0 : e.is_prop)
                                ? ((this.kotaKabupatenIsLoading = !0),
                                  (this.kotaKabupatenListSub = this.daerahService.listKabkot(String(t.get("id_daerah"))).subscribe({
                                      next: (r) => {
                                          var u, k;
                                          (this.kotaKabupatenIsLoading = !1),
                                              null === (k = null === (u = this.subBelanjaForm) || void 0 === u ? void 0 : u.get("id_daerah")) || void 0 === k || k.enable(),
                                              (this.kotaKabupatenList = r.data.sort((m, v) => m.nama_daerah.localeCompare(v.nama_daerah)));
                                      },
                                      error: (r) => {
                                          var u, k;
                                          (this.kotaKabupatenIsLoading = !1), null === (k = null === (u = this.subBelanjaForm) || void 0 === u ? void 0 : u.get("id_daerah")) || void 0 === k || k.enable();
                                      },
                                  })))
                                : ((this.kotaKabupatenList = [
                                      { id_daerah: Number(null === (n = this.daerah) || void 0 === n ? void 0 : n.id_daerah), nama_daerah: String(null === (s = this.daerah) || void 0 === s ? void 0 : s.nama_daerah) },
                                  ]),
                                  null === (l = null === (o = this.subBelanjaForm) || void 0 === o ? void 0 : o.get("lokasi_kegiatan_list")) ||
                                      void 0 === l ||
                                      l.patchValue([{ id_kab_kota: Number(null === (_ = this.daerah) || void 0 === _ ? void 0 : _.id_daerah), id_camat: 0, id_lurah: 0 }]));
                        }
                        loadKecamatanList(t, e) {
                            this.lokasiKegiatanList.at(e).disable();
                            const n = new FormData();
                            n.append("id_kab_kota", String(t)),
                                n.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                n.append("length", "100"),
                                this.kecamatanService.listByKotkabAndTahun(n).subscribe({
                                    next: (s) => {
                                        this.lokasiKegiatanList.at(e).enable(), (this.kecamatanList[t] = s.data.sort((o, l) => o.camat_teks.localeCompare(l.camat_teks)));
                                    },
                                    error: (s) => {
                                        this.lokasiKegiatanList.at(e).enable();
                                    },
                                });
                        }
                        loadKelurahanDesaList(t, e) {
                            var n;
                            null === (n = this.lokasiKegiatanList.at(e)) || void 0 === n || n.disable();
                            const s = new FormData();
                            s.append("id_camat", String(t)),
                                s.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                s.append("length", "100"),
                                this.kelurahanService.listByKecamatanAndTahun(s).subscribe({
                                    next: (o) => {
                                        var l;
                                        null === (l = this.lokasiKegiatanList.at(e)) || void 0 === l || l.enable(), (this.kelurahanDesaList[t] = o.data.sort((_, r) => _.lurah_teks.localeCompare(r.lurah_teks)));
                                    },
                                    error: (o) => {
                                        var l;
                                        null === (l = this.lokasiKegiatanList.at(e)) || void 0 === l || l.enable();
                                    },
                                });
                        }
                        loadLabelGiatList(t) {
                            this.labelGiatListSub = this.labelKegiatanService.list(t).subscribe({
                                next: (e) => {
                                    this.labelGiatMasterList = e.data.data;
                                },
                                error: (e) => {},
                            });
                        }
                        loadSumberDanaList(t) {
                            t.append("length", String(1e3)),
                                (this.sumberDanaListSub = this.sumberDanaService.list(t).subscribe({
                                    next: (e) => {
                                        this.sumberDanaMasterList = e.data.data;
                                    },
                                    error: (e) => {},
                                }));
                        }
                        checkIfEndDateAfterStartDate(t) {
                            var e, n, s, o;
                            return !(null === (e = t.get("waktu_awal")) || void 0 === e ? void 0 : e.value) ||
                                !(null === (n = t.get("waktu_akhir")) || void 0 === n ? void 0 : n.value) ||
                                Number(null === (s = t.get("waktu_akhir")) || void 0 === s ? void 0 : s.value) >= Number(null === (o = t.get("waktu_awal")) || void 0 === o ? void 0 : o.value)
                                ? null
                                : { invalidEndDate: !0 };
                        }
                        cekTahapRenstra() {
                            var t, e, n, s;
                            if (this.isInitialized) return;
                            const o = new FormData();
                            o.append("id_daerah", String(null !== (e = null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getIdDaerah()) && void 0 !== e ? e : 0)),
                                o.append("tahun", String(null !== (s = null === (n = this.konfigurasiService) || void 0 === n ? void 0 : n.getTahun()) && void 0 !== s ? s : 0)),
                                o.append("id_tahap", String(this.id_tahap || 20)),
                                (this.renstraKegiatanIsLoading = !0),
                                (this.renstraKegiatanSub = this.renstraKegiatanService.list(o).subscribe({
                                    next: (l) => {
                                        (this.renstraKegiatanIsLoading = !1),
                                            l.data.length > 0
                                                ? (this.renstraCascadingService.setRenstraWasCopied(!0),
                                                  (this.renstraKegiatanList = l.data),
                                                  this.isInitialized || ((this.id_tahap = 20), this.renstraCascadingService.setIdTahap(this.id_tahap)))
                                                : this.isInitialized || ((this.id_tahap = 19), this.renstraCascadingService.setIdTahap(this.id_tahap), this.cekTahapRenstra()),
                                            (this.isInitialized = !0);
                                    },
                                    error: (l) => {
                                        this.renstraKegiatanIsLoading = !1;
                                    },
                                }));
                        }
                    }
                    return (
                        (i.ɵfac = function (t) {
                            return new (t || i)(
                                a.Y36(Aa.gz),
                                a.Y36(aa.Kz),
                                a.Y36(Na._W),
                                a.Y36(Ra.W),
                                a.Y36(Wa.x),
                                a.Y36(ge.Y),
                                a.Y36(me.A),
                                a.Y36(be.c),
                                a.Y36(vt.P),
                                a.Y36(kt.W),
                                a.Y36(it.b),
                                a.Y36(nt.E),
                                a.Y36(ve),
                                a.Y36(at),
                                a.Y36(Mo),
                                a.Y36(Ko),
                                a.Y36(ft),
                                a.Y36(ke),
                                a.Y36(_t.w),
                                a.Y36(pt.O),
                                a.Y36(fe.O),
                                a.Y36(Se.I),
                                a.Y36(je),
                                a.Y36(za.J),
                                a.Y36(Te.V),
                                a.Y36(tt.b),
                                a.Y36(Ce),
                                a.Y36(aa.FF)
                            );
                        }),
                        (i.ɵcmp = a.Xpm({
                            type: i,
                            selectors: [["app-renja-program-kegiatan-form"]],
                            viewQuery: function (t, e) {
                                if ((1 & t && (a.Gf(Yo, 7), a.Gf(Wo, 7), a.Gf(Go, 7), a.Gf(Qo, 7), a.Gf(Oo, 7), a.Gf(Eo, 7)), 2 & t)) {
                                    let n;
                                    a.iGM((n = a.CRH())) && (e.skpdInstance = n.first),
                                        a.iGM((n = a.CRH())) && (e.bidangUrusanInstance = n.first),
                                        a.iGM((n = a.CRH())) && (e.labelPusatInstance = n.first),
                                        a.iGM((n = a.CRH())) && (e.labelProvinsiInstance = n.first),
                                        a.iGM((n = a.CRH())) && (e.labelKokabInstance = n.first),
                                        a.iGM((n = a.CRH())) && (e.subGiatInstance = n.first);
                                }
                            },
                            decls: 7,
                            vars: 3,
                            consts: [
                                [1, "modal-header"],
                                [1, "fw-bolder", "m-0"],
                                ["type", "button", "aria-label", "Close", 1, "btn-close", 3, "click"],
                                [1, "card", "mb-3"],
                                ["class", "d-flex justify-content-center mt-20 mb-20", 4, "ngIf"],
                                ["class", "collapse show", 4, "ngIf"],
                                [1, "d-flex", "justify-content-center", "mt-20", "mb-20"],
                                [1, "spinner-border"],
                                [1, "collapse", "show"],
                                ["novalidate", "", 1, "form", 3, "formGroup", "submit"],
                                [1, "card-body", "border-top", "p-9"],
                                [1, "row", "mb-6"],
                                ["for", "skpd-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                                [1, "col"],
                                [1, "position-relative", "is-loading"],
                                [
                                    "id",
                                    "skpd-autocomplete",
                                    "type",
                                    "text",
                                    "maxlength",
                                    "255",
                                    "required",
                                    "",
                                    "placeholder",
                                    "SKPD atau Sub Unit...",
                                    "readonly",
                                    "",
                                    "disabled",
                                    "",
                                    1,
                                    "form-control",
                                    3,
                                    "ngModel",
                                    "ngModelOptions",
                                    "ngbTypeahead",
                                    "inputFormatter",
                                    "resultFormatter",
                                    "ngModelChange",
                                    "focus",
                                    "click",
                                ],
                                ["skpdInstance", "ngbTypeahead"],
                                ["class", "spinner-border spinner-border-sm mt-1", 4, "ngIf"],
                                ["for", "bidang-urusan-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                                [
                                    "id",
                                    "bidang-urusan-autocomplete",
                                    "type",
                                    "text",
                                    "maxlength",
                                    "255",
                                    "required",
                                    "",
                                    1,
                                    "form-control",
                                    3,
                                    "ngModel",
                                    "ngModelOptions",
                                    "ngbTypeahead",
                                    "inputFormatter",
                                    "resultFormatter",
                                    "editable",
                                    "disabled",
                                    "placeholder",
                                    "ngModelChange",
                                    "focus",
                                    "click",
                                ],
                                ["bidangUrusanInstance", "ngbTypeahead"],
                                [1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                                ["formControlName", "nama_program", "id", "nama_program", "type", "text", "placeholder", "Program", "maxlength", "500", "readonly", "", 1, "form-control", "form-control-solid", 3, "disabled"],
                                [1, "col-lg-8"],
                                [1, "col-form-label", "fw-bold", "fs-6"],
                                ["type", "button", 1, "btn", "btn-sm", "btn-primary", "mx-2", 3, "click"],
                                ["align", "right", 1, "col-lg-4"],
                                ["type", "button", 1, "btn", "btn-sm", "btn-success", 3, "click"],
                                [4, "ngFor", "ngForOf"],
                                ["formControlName", "nama_kegiatan", "id", "nama_kegiatan", "type", "text", "placeholder", "Kegiatan", "maxlength", "500", "readonly", "", 1, "form-control", "form-control-solid", 3, "disabled"],
                                ["formControlName", "kel_sasaran_kegiatan", "id", "kel_sasaran_kegiatan", "type", "text", "placeholder", "Kelompok Sasaran Kegiatan", "maxlength", "5000", 1, "form-control"],
                                [1, "row", "mb-6", "align-items-center"],
                                ["for", "label-pusat-autocomplete", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                                [
                                    "id",
                                    "label-pusat-autocomplete",
                                    "type",
                                    "text",
                                    "maxlength",
                                    "255",
                                    "required",
                                    "",
                                    "placeholder",
                                    "Prioritas Pembangunan Nasional...",
                                    1,
                                    "form-control",
                                    3,
                                    "ngModel",
                                    "ngModelOptions",
                                    "ngbTypeahead",
                                    "inputFormatter",
                                    "resultFormatter",
                                    "ngModelChange",
                                    "focus",
                                    "click",
                                ],
                                ["labelPusatInstance", "ngbTypeahead"],
                                [1, "col-lg-12"],
                                [1, "row", "mb-1"],
                                [1, "col-9"],
                                ["formControlName", "hasil_bl_tolok_ukur", "id", "hasil_bl_tolok_ukur", "type", "text", "placeholder", "Tolok Ukur", "maxlength", "500", 1, "form-control"],
                                [1, "col-1"],
                                ["formControlName", "hasil_bl_target", "id", "hasil_bl_target", "type", "text", "placeholder", "Target", "maxlength", "20", 1, "form-control"],
                                ["formControlName", "hasil_bl_satuan", "id", "hasil_bl_satuan", "type", "text", "placeholder", "Satuan", "maxlength", "20", 1, "form-control"],
                                [1, "card-footer", "d-flex", "justify-content-between", "py-5", "px-9"],
                                [1, "btn", "btn-outline-danger", 3, "click"],
                                ["type", "submit", 1, "btn", "btn-success"],
                                [4, "ngIf"],
                                [1, "spinner-border", "spinner-border-sm", "mt-1"],
                                [3, "mode", "indikatorProgram", "removeIndikatorProgram"],
                                [3, "mode", "indikatorKegiatan", "removeIndikatorKegiatan"],
                                ["clas", "indicator-progress"],
                                [1, "spinner-border", "spinner-border-sm", "align-middle", "ms-2"],
                            ],
                            template: function (t, e) {
                                1 & t &&
                                    (a.TgZ(0, "div", 0)(1, "h3", 1),
                                    a._uU(2),
                                    a.qZA(),
                                    a.TgZ(3, "button", 2),
                                    a.NdJ("click", function () {
                                        return e.activeModal.dismiss("Cross click");
                                    }),
                                    a.qZA()(),
                                    a.TgZ(4, "div", 3),
                                    a.YNc(5, Ho, 2, 0, "div", 4),
                                    a.YNc(6, nl, 89, 31, "div", 5),
                                    a.qZA()),
                                    2 & t &&
                                        (a.xp6(2),
                                        a.Oqu(e.pageTitle),
                                        a.xp6(3),
                                        a.Q6J("ngIf", !e.subBelanjaForm || e.subBelanjaIsLoading || e.detilLokasiIsLoading || e.kotaKabupatenIsLoading || e.danaBelanjaIsLoading || !e.daerah),
                                        a.xp6(1),
                                        a.Q6J("ngIf", e.subBelanjaForm && !e.subBelanjaIsLoading && !e.detilLokasiIsLoading && !e.kotaKabupatenIsLoading && !e.danaBelanjaIsLoading && e.daerah));
                            },
                            directives: [j.O5, p._Y, p.JL, p.sg, p.Fj, aa.dR, p.nD, p.Q7, p.JJ, p.On, p.u, j.sg, Jo, qo],
                            styles: [""],
                        })),
                        i
                    );
                })(),
                sl = (() => {
                    class i {
                        constructor(t) {
                            (this.http = t), (this.API_URL = `${Ka.N.apiUrlUsulan}`);
                        }
                        loadUsulanSetuju(t) {
                            return this.http.post(this.API_URL + "/usul_bantuan/get_data_setujui", t);
                        }
                    }
                    return (
                        (i.ɵfac = function (t) {
                            return new (t || i)(a.LFG(Pa.eN));
                        }),
                        (i.ɵprov = a.Yz7({ token: i, factory: i.ɵfac, providedIn: "root" })),
                        i
                    );
                })();
            function ol(i, d) {
                1 & i && (a.TgZ(0, "div", 6), a._UZ(1, "div", 7), a.qZA());
            }
            function ll(i, d) {
                1 & i && (a.TgZ(0, "th", 25), a._uU(1, " ID Usulan "), a.qZA());
            }
            function rl(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 26), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.xp6(1), a.hij(" ", t.id_usulan, " ");
                }
            }
            function dl(i, d) {
                1 & i && (a.TgZ(0, "th", 25), a._uU(1, " Nama Pengusul "), a.qZA());
            }
            function ul(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 26), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.xp6(1), a.hij(" ", t.nama_pengusul, " ");
                }
            }
            function _l(i, d) {
                1 & i && (a.TgZ(0, "th", 25), a._uU(1, " Usulan "), a.qZA());
            }
            function pl(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 26), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.xp6(1), a.hij(" ", t.masalah, " ");
                }
            }
            function cl(i, d) {
                1 & i && (a.TgZ(0, "th", 27), a._uU(1, " Anggaran "), a.qZA());
            }
            function hl(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 28), a._uU(1), a.ALo(2, "currency"), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", a.gM2(2, 2, t.anggaran, "IDR", "Rp ", "1.0-0"), " ");
                }
            }
            function gl(i, d) {
                1 & i && a._UZ(0, "tr", 29);
            }
            function ml(i, d) {
                1 & i && a._UZ(0, "tr", 30);
            }
            const bl = function () {
                return [10];
            };
            function vl(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div")(1, "div", 8),
                        a._uU(2),
                        a.qZA(),
                        a.TgZ(3, "div", 9)(4, "div", 10)(5, "table", 11),
                        a.ynx(6, 12),
                        a.YNc(7, ll, 2, 0, "th", 13),
                        a.YNc(8, rl, 2, 1, "td", 14),
                        a.BQk(),
                        a.ynx(9, 15),
                        a.YNc(10, dl, 2, 0, "th", 13),
                        a.YNc(11, ul, 2, 1, "td", 14),
                        a.BQk(),
                        a.ynx(12, 16),
                        a.YNc(13, _l, 2, 0, "th", 13),
                        a.YNc(14, pl, 2, 1, "td", 14),
                        a.BQk(),
                        a.ynx(15, 17),
                        a.YNc(16, cl, 2, 0, "th", 18),
                        a.YNc(17, hl, 3, 7, "td", 19),
                        a.BQk(),
                        a.YNc(18, gl, 1, 0, "tr", 20),
                        a.YNc(19, ml, 1, 0, "tr", 21),
                        a.qZA(),
                        a._UZ(20, "mat-paginator", 22),
                        a.qZA()(),
                        a.TgZ(21, "div", 23)(22, "button", 24),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().activeModal.close("Close click");
                        }),
                        a._uU(23, " Tutup "),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw();
                    a.xp6(2),
                        a.hij(" ", t.namaSubGiat, " "),
                        a.xp6(3),
                        a.Q6J("dataSource", t.dataSource),
                        a.xp6(13),
                        a.Q6J("matHeaderRowDef", t.displayedColumns),
                        a.xp6(1),
                        a.Q6J("matRowDefColumns", t.displayedColumns),
                        a.xp6(1),
                        a.Q6J("pageSizeOptions", a.DdM(5, bl));
                }
            }
            let ye = (() => {
                    class i {
                        constructor(t, e, n, s) {
                            (this.activeModal = t),
                                (this.toastr = e),
                                (this.konfigurasiService = n),
                                (this.usulanService = s),
                                (this.usulanList = []),
                                (this.listDataLoaded = !1),
                                (this.display = []),
                                (this.dataSource = new L.by(this.usulanList)),
                                (this.pageTitle = ""),
                                (this.namaSubGiat = ""),
                                (this.jenisUsulan = ""),
                                (this.displayedColumns = ["id_usulan", "nama_pengusul", "masalah", "anggaran"]);
                        }
                        set paginator(t) {
                            this.dataSource.paginator = t;
                        }
                        set sort(t) {
                            this.dataSource.sort = t;
                        }
                        ngOnInit() {
                            this.loadData();
                        }
                        loadData() {
                            var t, e, n, s, o, l;
                            const _ = new FormData();
                            _.append("id_daerah", String(null === (t = this.subBelanja) || void 0 === t ? void 0 : t.id_daerah)),
                                _.append("id_unit", String(null === (e = this.subBelanja) || void 0 === e ? void 0 : e.id_unit)),
                                _.append("id_skpd", String(null === (n = this.subBelanja) || void 0 === n ? void 0 : n.id_sub_skpd)),
                                _.append("id_sub_giat", String(null === (s = this.subBelanja) || void 0 === s ? void 0 : s.id_sub_giat)),
                                _.append("tahun", this.konfigurasiService.getTahun()),
                                _.append("jenis", this.jenisUsulan),
                                (this.namaSubGiat = (null === (o = this.subBelanja) || void 0 === o ? void 0 : o.kode_sub_giat) + " " + (null === (l = this.subBelanja) || void 0 === l ? void 0 : l.nama_sub_giat)),
                                (this.pageTitle = "asmas" == this.jenisUsulan ? "List Usulan Aspirasi Masyarakat" : "List Usulan Pokir"),
                                (this.listLoading = !0),
                                this.usulanService.loadUsulanSetuju(_).subscribe({
                                    next: (r) => {
                                        (this.listLoading = !1), (this.usulanList = r.data), (this.listDataLoaded = !0), this.buildDataSource();
                                    },
                                    error: (r) => {
                                        this.toastr.error("Terjadi kesalahan, data gagal diload!", "Error!"), (this.listLoading = !1);
                                    },
                                });
                        }
                        buildDataSource() {
                            (this.dataSource.data = this.usulanList), (this.dataSource.paginator = this.paginator), (this.dataSource.sort = this.sort), (this.listDataLoaded = !0);
                        }
                    }
                    return (
                        (i.ɵfac = function (t) {
                            return new (t || i)(a.Y36(aa.Kz), a.Y36(Na._W), a.Y36(Ra.W), a.Y36(sl));
                        }),
                        (i.ɵcmp = a.Xpm({
                            type: i,
                            selectors: [["app-renja-usulan"]],
                            viewQuery: function (t, e) {
                                if ((1 & t && (a.Gf(X.NW, 5), a.Gf(S.YE, 5)), 2 & t)) {
                                    let n;
                                    a.iGM((n = a.CRH())) && (e.paginator = n.first), a.iGM((n = a.CRH())) && (e.sort = n.first);
                                }
                            },
                            decls: 7,
                            vars: 3,
                            consts: [
                                [1, "modal-header"],
                                [1, "fw-bolder", "m-0"],
                                ["type", "button", "aria-label", "Close", 1, "btn-close", 3, "click"],
                                [1, "card", "card-xl-stretch", "mb-xl-8"],
                                ["class", "d-flex justify-content-center mt-20 mb-20", 4, "ngIf"],
                                [4, "ngIf"],
                                [1, "d-flex", "justify-content-center", "mt-20", "mb-20"],
                                [1, "spinner-border"],
                                [1, "alert", "alert-info"],
                                [1, "card-body", "py-3"],
                                [1, "table-responsive"],
                                ["mat-table", "", "matSort", "", 1, "table", "table-row-dashed", "table-row-gray-300", "align-middle", "gs-0", "gy-4", 3, "dataSource"],
                                ["matColumnDef", "id_usulan"],
                                ["mat-header-cell", "", "mat-sort-header", "", "class", "fw-bolder text-muted pe-3", 4, "matHeaderCellDef"],
                                ["mat-cell", "", "class", "pe-3", 4, "matCellDef"],
                                ["matColumnDef", "nama_pengusul"],
                                ["matColumnDef", "masalah"],
                                ["matColumnDef", "anggaran"],
                                ["mat-header-cell", "", "mat-sort-header", "", "class", "fw-bolder text-muted w-100px", 4, "matHeaderCellDef"],
                                ["mat-cell", "", 4, "matCellDef"],
                                ["mat-header-row", "", 4, "matHeaderRowDef"],
                                ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                                ["showFirstLastButtons", "", 3, "pageSizeOptions"],
                                [1, "card-footer", "d-flex", "justify-content-end", "py-6", "px-9"],
                                ["type", "button", "data-dismiss", "modal", "id", "tutup_formstaf", 1, "btn", "btn-default", 3, "click"],
                                ["mat-header-cell", "", "mat-sort-header", "", 1, "fw-bolder", "text-muted", "pe-3"],
                                ["mat-cell", "", 1, "pe-3"],
                                ["mat-header-cell", "", "mat-sort-header", "", 1, "fw-bolder", "text-muted", "w-100px"],
                                ["mat-cell", ""],
                                ["mat-header-row", ""],
                                ["mat-row", ""],
                            ],
                            template: function (t, e) {
                                1 & t &&
                                    (a.TgZ(0, "div", 0)(1, "h3", 1),
                                    a._uU(2),
                                    a.qZA(),
                                    a.TgZ(3, "button", 2),
                                    a.NdJ("click", function () {
                                        return e.activeModal.dismiss("Cross click");
                                    }),
                                    a.qZA()(),
                                    a.TgZ(4, "div", 3),
                                    a.YNc(5, ol, 2, 0, "div", 4),
                                    a.YNc(6, vl, 24, 6, "div", 5),
                                    a.qZA()),
                                    2 & t && (a.xp6(2), a.Oqu(e.pageTitle), a.xp6(3), a.Q6J("ngIf", e.listLoading), a.xp6(1), a.Q6J("ngIf", !e.listLoading));
                            },
                            directives: [j.O5, L.BZ, S.YE, L.w1, L.fO, L.ge, S.nU, L.Dz, L.ev, L.as, L.XQ, L.nj, L.Gk, X.NW],
                            pipes: [j.H9],
                            styles: [""],
                        })),
                        i
                    );
                })(),
                kl = (() => {
                    class i {
                        constructor(t, e, n) {
                            (this.activeModal = t), (this.toastr = e), (this.konfigurasiService = n);
                        }
                        ngOnInit() {}
                    }
                    return (
                        (i.ɵfac = function (t) {
                            return new (t || i)(a.Y36(aa.Kz), a.Y36(Na._W), a.Y36(Ra.W));
                        }),
                        (i.ɵcmp = a.Xpm({
                            type: i,
                            selectors: [["app-renja-skala-prioritas"]],
                            decls: 28,
                            vars: 0,
                            consts: [
                                [1, "modal-header"],
                                [1, "fw-bolder", "m-0"],
                                ["type", "button", "aria-label", "Close", 1, "btn-close", 3, "click"],
                                [1, "card", "card-xl-stretch", "mb-xl-8"],
                                [1, "alert", "alert-info"],
                                [1, "card-body", "py-3"],
                                [1, "row", "mb-1"],
                                [1, "row", "mb-6"],
                                [1, "col-lg-4", "col-form-label", "fw-bold", "fs-6"],
                                [1, "col-lg-8", "fv-row"],
                                [1, "row"],
                                [1, "col-5"],
                                ["formControlName", "skala_prioritas", 1, "form-select"],
                                ["value", ""],
                                ["value", "1"],
                                ["value", "2"],
                                ["value", "3"],
                                [1, "card-footer", "d-flex", "justify-content-end", "py-6", "px-9"],
                                ["type", "button", "data-dismiss", "modal", "id", "tutup_formstaf", 1, "btn", "btn-default", 3, "click"],
                            ],
                            template: function (t, e) {
                                1 & t &&
                                    (a.TgZ(0, "div", 0)(1, "h3", 1),
                                    a._uU(2, "Skala Prioritas"),
                                    a.qZA(),
                                    a.TgZ(3, "button", 2),
                                    a.NdJ("click", function () {
                                        return e.activeModal.dismiss("Cross click");
                                    }),
                                    a.qZA()(),
                                    a.TgZ(4, "div", 3)(5, "div")(6, "div", 4),
                                    a._uU(7, " namaSubGiat "),
                                    a.qZA(),
                                    a.TgZ(8, "div", 5)(9, "div", 6)(10, "div", 7)(11, "label", 8),
                                    a._uU(12, "Skala Prioritas"),
                                    a.qZA(),
                                    a.TgZ(13, "div", 9)(14, "div", 10)(15, "div", 11)(16, "select", 12)(17, "option", 13),
                                    a._uU(18, "Pilih Skala Prioritas"),
                                    a.qZA(),
                                    a.TgZ(19, "option", 14),
                                    a._uU(20, "Rendah"),
                                    a.qZA(),
                                    a.TgZ(21, "option", 15),
                                    a._uU(22, "Sedang"),
                                    a.qZA(),
                                    a.TgZ(23, "option", 16),
                                    a._uU(24, "Tinggi"),
                                    a.qZA()()()()()()()(),
                                    a.TgZ(25, "div", 17)(26, "button", 18),
                                    a.NdJ("click", function () {
                                        return e.activeModal.close("Close click");
                                    }),
                                    a._uU(27, " Tutup "),
                                    a.qZA()()()());
                            },
                            directives: [p.EJ, p.JJ, p.u, p.YN, p.Kr],
                            styles: [""],
                        })),
                        i
                    );
                })();
            var fl = D(90089),
                Le = D(63887),
                It = D(6425),
                Sl = D(91473),
                jl = D(13435),
                we = D(30285),
                Tl = D(39450),
                Il = D(77135);
            function Bl(i, d) {
                1 & i && a._UZ(0, "app-loading-spinner");
            }
            function xl(i, d) {
                1 & i && (a.TgZ(0, "div"), a._UZ(1, "app-waktu-renja"), a.qZA());
            }
            function Cl(i, d) {
                1 & i &&
                    (a.TgZ(0, "div", 44)(1, "h4", 26),
                    a._uU(2, "Perangkat Daerah dikunci."),
                    a.qZA(),
                    a.TgZ(3, "p"),
                    a._uU(4, " Admin Daerah dapat mengubahnya di halaman "),
                    a.TgZ(5, "code"),
                    a._uU(6, "Pengaturan > Profil > Perangkat Daerah"),
                    a.qZA()()());
            }
            function yl(i, d) {
                1 & i &&
                    (a.TgZ(0, "div", 44)(1, "h4", 26),
                    a._uU(2, "Tambah Kegiatan Belanja dikunci."),
                    a.qZA(),
                    a.TgZ(3, "p"),
                    a._uU(4, " Admin Daerah dapat mengubahnya di halaman "),
                    a.TgZ(5, "code"),
                    a._uU(6, "RKPD > RENJA > [Pilih SKPD]"),
                    a.qZA()()());
            }
            function Ll(i, d) {
                1 & i && (a.TgZ(0, "div", 19)(1, "div", 45), a._uU(2, "Melebihi Batasan Pagu Validasi"), a.qZA()());
            }
            function wl(i, d) {
                if ((1 & i && (a.TgZ(0, "div", 46)(1, "div", 47)(2, "h4", 26), a._uU(3), a.qZA()()()), 2 & i)) {
                    const t = a.oxw(2);
                    a.xp6(1), a.Gre("alert alert-", t.cssAlertClass, ""), a.xp6(2), a.Oqu(t.uraianJadwal);
                }
            }
            function Dl(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 48),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).ambilArkas();
                        }),
                        a._UZ(1, "span", 49),
                        a._uU(2, " Ambil Data dari Arkas "),
                        a.qZA();
                }
                if (2 & i) {
                    const t = a.oxw(2);
                    a.Q6J("disabled", t.arkasIsLoading), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen037.svg");
                }
            }
            function Rl(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 50),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).validasiSemuaPagu();
                        }),
                        a._UZ(1, "span", 49),
                        a._uU(2, " Validasi Pagu "),
                        a.qZA();
                }
                if (2 & i) {
                    const t = a.oxw(2);
                    a.Q6J("disabled", t.subBelanjaValidasiPaguIsLoading), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen037.svg");
                }
            }
            function Al(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 51),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).openAddModal();
                        }),
                        a._UZ(1, "span", 49),
                        a._uU(2, " Kegiatan "),
                        a.qZA();
                }
                2 & i && (a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/arrows/arr013.svg"));
            }
            function Fl(i, d) {
                1 & i && a._UZ(0, "span", 49), 2 & i && a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen005.svg");
            }
            function Ul(i, d) {
                1 & i && a._UZ(0, "span", 57);
            }
            function Zl(i, d) {
                if ((1 & i && (a.ynx(0), a.TgZ(1, "button", 54), a.YNc(2, Fl, 1, 1, "span", 55), a.YNc(3, Ul, 1, 0, "span", 56), a._uU(4, " Pengaturan "), a.qZA(), a.BQk()), 2 & i)) {
                    const t = a.oxw(3);
                    a.xp6(2),
                        a.Q6J("ngIf", !t.kunciTambahKegiatanPerUnitIsLoading && !t.kunciKegiatanPerUnitIsLoading && !t.kunciRincianBelanjaPerUnitIsLoading),
                        a.xp6(1),
                        a.Q6J("ngIf", t.kunciTambahKegiatanPerUnitIsLoading || t.kunciKegiatanPerUnitIsLoading || t.kunciRincianBelanjaPerUnitIsLoading);
                }
            }
            function Pl(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.ynx(0),
                        a.TgZ(1, "li")(2, "button", 58),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(3).updateKunciKegiatanUnit(1);
                        }),
                        a._UZ(3, "span", 49),
                        a._uU(4, " Kunci Semua Kegiatan "),
                        a.qZA()(),
                        a.TgZ(5, "li")(6, "button", 58),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(3).updateKunciKegiatanUnit(0);
                        }),
                        a._UZ(7, "span", 49),
                        a._uU(8, " Buka Semua Kegiatan "),
                        a.qZA()(),
                        a.BQk();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(2),
                        a.Q6J("disabled", t.kunciKegiatanPerUnitIsLoading),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen047.svg"),
                        a.xp6(3),
                        a.Q6J("disabled", t.kunciKegiatanPerUnitIsLoading),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/coding/cod001.svg");
                }
            }
            function Nl(i, d) {
                1 & i && (a.TgZ(0, "li"), a._UZ(1, "hr", 59), a.qZA());
            }
            function Ml(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.ynx(0),
                        a.YNc(1, Nl, 2, 0, "li", 0),
                        a.TgZ(2, "li")(3, "button", 58),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(3).updateKunciRincianBelanjaUnit(1);
                        }),
                        a._UZ(4, "span", 49),
                        a._uU(5, " Kunci Semua Rincian "),
                        a.qZA()(),
                        a.TgZ(6, "li")(7, "button", 58),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(3).updateKunciRincianBelanjaUnit(0);
                        }),
                        a._UZ(8, "span", 49),
                        a._uU(9, " Buka Semua Rincian "),
                        a.qZA()(),
                        a.BQk();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(1),
                        a.Q6J("ngIf", 2 == t.userSession.level_id),
                        a.xp6(2),
                        a.Q6J("disabled", t.kunciRincianBelanjaPerUnitIsLoading),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen047.svg"),
                        a.xp6(3),
                        a.Q6J("disabled", t.kunciRincianBelanjaPerUnitIsLoading),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/coding/cod001.svg");
                }
            }
            function Kl(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "li")(1, "button", 58),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(4).updateKunciTambahGiatUnit(1);
                        }),
                        a._UZ(2, "span", 49),
                        a._uU(3, " Kunci Tambah Kegiatan "),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = a.oxw(4);
                    a.xp6(1), a.Q6J("disabled", t.kunciTambahKegiatanPerUnitIsLoading), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen047.svg");
                }
            }
            function Jl(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "li")(1, "button", 58),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(4).updateKunciTambahGiatUnit(0);
                        }),
                        a._UZ(2, "span", 49),
                        a._uU(3, " Buka Tambah Kegiatan "),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = a.oxw(4);
                    a.xp6(1), a.Q6J("disabled", t.kunciTambahKegiatanPerUnitIsLoading), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/coding/cod001.svg");
                }
            }
            function ql(i, d) {
                if ((1 & i && (a.ynx(0), a.TgZ(1, "li"), a._UZ(2, "hr", 59), a.qZA(), a.YNc(3, Kl, 4, 2, "li", 0), a.YNc(4, Jl, 4, 2, "li", 0), a.BQk()), 2 & i)) {
                    const t = a.oxw(3);
                    a.xp6(3), a.Q6J("ngIf", 0 == (null == t.setupUnit ? null : t.setupUnit.kunci_tambah_giat)), a.xp6(1), a.Q6J("ngIf", 1 == (null == t.setupUnit ? null : t.setupUnit.kunci_tambah_giat));
                }
            }
            function Yl(i, d) {
                if (
                    (1 & i && (a.TgZ(0, "div", 52), a.YNc(1, Zl, 5, 2, "ng-container", 0), a.TgZ(2, "ul", 53), a.YNc(3, Pl, 9, 4, "ng-container", 0), a.YNc(4, Ml, 10, 5, "ng-container", 0), a.YNc(5, ql, 5, 2, "ng-container", 0), a.qZA()()),
                    2 & i)
                ) {
                    const t = a.oxw(2);
                    a.xp6(1),
                        a.Q6J("ngIf", !t.isLoading),
                        a.xp6(2),
                        a.Q6J("ngIf", 2 == t.userSession.level_id || 3 == t.userSession.level_id || 7 == t.userSession.level_id || 11 == t.userSession.level_id || 41 == t.userSession.level_id),
                        a.xp6(1),
                        a.Q6J("ngIf", 2 == t.userSession.level_id || 4 == t.userSession.level_id || 8 == t.userSession.level_id || 12 == t.userSession.level_id),
                        a.xp6(1),
                        a.Q6J("ngIf", 2 == t.userSession.level_id || 3 == t.userSession.level_id || 7 == t.userSession.level_id || 11 == t.userSession.level_id);
                }
            }
            function Wl(i, d) {
                1 & i && (a.ynx(0), a.TgZ(1, "button", 61), a._UZ(2, "span", 49), a._uU(3, " Cetak Laporan "), a.qZA(), a.BQk()), 2 & i && (a.xp6(2), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen005.svg"));
            }
            function Gl(i, d) {
                1 & i && (a.ynx(0), a.TgZ(1, "button", 62)(2, "span", 63), a._UZ(3, "span", 49), a._uU(4), a._UZ(5, "span", 64), a.qZA()(), a.BQk()),
                    2 & i && (a.xp6(2), a.Udp("display", "block"), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen005.svg"), a.xp6(1), a.hij(" Mencetak...", " ", " "));
            }
            function Ql(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 52),
                        a.YNc(1, Wl, 4, 1, "ng-container", 0),
                        a.YNc(2, Gl, 6, 4, "ng-container", 0),
                        a.TgZ(3, "ul", 53)(4, "li")(5, "button", 60),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).getDataLampiranRenja("pdf", 0);
                        }),
                        a._UZ(6, "span", 49),
                        a._uU(7, " Cetak Laporan RENJA (PDF) "),
                        a.qZA()(),
                        a.TgZ(8, "li")(9, "button", 60),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).getDataLampiranRenja("excel", 1);
                        }),
                        a._UZ(10, "span", 49),
                        a._uU(11, " Cetak Laporan RENJA 1 (Excel) "),
                        a.qZA()(),
                        a.TgZ(12, "li")(13, "button", 60),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).getDataLampiranRenja("excel", 2);
                        }),
                        a._UZ(14, "span", 49),
                        a._uU(15, " Cetak Laporan RENJA 2 (Excel) "),
                        a.qZA()()()();
                }
                if (2 & i) {
                    const t = a.oxw(2);
                    a.xp6(1),
                        a.Q6J("ngIf", !t.isLoading),
                        a.xp6(1),
                        a.Q6J("ngIf", t.isLoading),
                        a.xp6(4),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/arrows/arr091.svg"),
                        a.xp6(4),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/arrows/arr091.svg"),
                        a.xp6(4),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/arrows/arr091.svg");
                }
            }
            function Ol(i, d) {
                1 & i && (a.ynx(0), a.TgZ(1, "button", 61), a._UZ(2, "span", 49), a._uU(3, " Cetak Laporan "), a.qZA(), a.BQk()), 2 & i && (a.xp6(2), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen005.svg"));
            }
            function El(i, d) {
                1 & i && (a.ynx(0), a.TgZ(1, "button", 62)(2, "span", 63), a._UZ(3, "span", 49), a._uU(4), a._UZ(5, "span", 64), a.qZA()(), a.BQk()),
                    2 & i && (a.xp6(2), a.Udp("display", "block"), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen005.svg"), a.xp6(1), a.hij(" Mencetak...", " ", " "));
            }
            function Hl(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 52),
                        a.YNc(1, Ol, 4, 1, "ng-container", 0),
                        a.YNc(2, El, 6, 4, "ng-container", 0),
                        a.TgZ(3, "ul", 53)(4, "li")(5, "button", 60),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).getDataListRKASKPD();
                        }),
                        a._UZ(6, "span", 49),
                        a._uU(7, " Cetak Laporan RKA SKPD (PDF) "),
                        a.qZA()(),
                        a.TgZ(8, "li")(9, "button", 60),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).getDataListRKAPendapatan();
                        }),
                        a._UZ(10, "span", 49),
                        a._uU(11, " Cetak Laporan RKA Pendapatan (PDF) "),
                        a.qZA()(),
                        a.TgZ(12, "li")(13, "button", 60),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).getDataListRekapRKABelanjaSKPD();
                        }),
                        a._UZ(14, "span", 49),
                        a._uU(15, " Cetak Laporan RKA Rekap Belanja (PDF) "),
                        a.qZA()(),
                        a.TgZ(16, "li")(17, "button", 60),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).getDataListRKAPembiayaan();
                        }),
                        a._UZ(18, "span", 49),
                        a._uU(19, " Cetak Laporan RKA Pembiayaan (PDF) "),
                        a.qZA()(),
                        a.TgZ(20, "li")(21, "button", 60),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).cetakLampiranRKACover();
                        }),
                        a._UZ(22, "span", 49),
                        a._uU(23, " Cetak Cover Dokumen Anggaran (PDF) "),
                        a.qZA()()()();
                }
                if (2 & i) {
                    const t = a.oxw(2);
                    a.xp6(1),
                        a.Q6J("ngIf", !t.isLoading),
                        a.xp6(1),
                        a.Q6J("ngIf", t.isLoading),
                        a.xp6(4),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/arrows/arr091.svg"),
                        a.xp6(4),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/arrows/arr091.svg"),
                        a.xp6(4),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/arrows/arr091.svg"),
                        a.xp6(4),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/arrows/arr091.svg"),
                        a.xp6(4),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/arrows/arr091.svg");
                }
            }
            function $l(i, d) {
                1 & i && (a.TgZ(0, "th", 80), a._uU(1, " Aksi "), a.qZA());
            }
            function zl(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 88),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw().$implicit;
                            return a.oxw(3).sinkronRenstra(n);
                        }),
                        a.ynx(1),
                        a._UZ(2, "span", 49),
                        a.BQk(),
                        a.qZA();
                }
                2 & i && (a.xp6(2), a.Q6J("inlineSVG", "./assets/media/icons/duotune/arrows/arr082.svg"));
            }
            function Vl(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 89),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw().$implicit;
                            return a.oxw(3).openKegiatanModal(n);
                        }),
                        a.ynx(1),
                        a._UZ(2, "span", 49),
                        a.BQk(),
                        a.qZA();
                }
                2 & i && (a.xp6(2), a.Q6J("inlineSVG", "./assets/media/icons/duotune/art/art005.svg"));
            }
            function Xl(i, d) {
                1 & i && (a.ynx(0), a.TgZ(1, "button", 93), a._UZ(2, "span", 94), a.qZA(), a.BQk()), 2 & i && (a.xp6(2), a.Q6J("inlineSVG", "./assets/media/icons/duotune/files/fil001.svg"));
            }
            function ar(i, d) {
                1 & i && (a.ynx(0), a.TgZ(1, "button", 95)(2, "span", 96), a._UZ(3, "span", 64), a.qZA()(), a.BQk()), 2 & i && (a.xp6(2), a.Udp("display", "block"));
            }
            function tr(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "li")(1, "button", 91),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw(2).$implicit;
                            return a.oxw(3).openEditModal(n);
                        }),
                        a._UZ(2, "span", 49),
                        a._uU(3, " Ubah Sub Kegiatan "),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = a.oxw(5);
                    a.xp6(1), a.Q6J("disabled", t.toggleLockIsLoading), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/art/art005.svg");
                }
            }
            function er(i, d) {
                if ((1 & i && (a.TgZ(0, "li")(1, "a", 97), a._UZ(2, "span", 94), a._uU(3, " Lihat Rincian Belanja "), a.qZA()()), 2 & i)) {
                    const t = a.oxw(2).$implicit,
                        e = a.oxw(3);
                    a.xp6(1), a.hYB("routerLink", "", e.activeFullUrl, "/cascading/rincian/sub-kegiatan/", t.id_sub_bl, ""), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/files/fil001.svg");
                }
            }
            function nr(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "li")(1, "button", 91),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw(2).$implicit;
                            return a.oxw(3).getDataLampiranRKA(n, !1);
                        }),
                        a._UZ(2, "span", 49),
                        a._uU(3, " Cetak Rincian Belanja "),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = a.oxw(5);
                    a.xp6(1), a.Q6J("disabled", t.toggleLockIsLoading), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/files/fil001.svg");
                }
            }
            function ir(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "li")(1, "button", 91),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw(2).$implicit;
                            return a.oxw(3).getDataLampiranRKA(n, !0);
                        }),
                        a._UZ(2, "span", 49),
                        a._uU(3, " Cetak Laporan Rincian Belanja "),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = a.oxw(5);
                    a.xp6(1), a.Q6J("disabled", t.toggleLockIsLoading), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/files/fil001.svg");
                }
            }
            function sr(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "li")(1, "button", 91),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw(3).$implicit;
                            return a.oxw(3).showStafSettingModal(n);
                        }),
                        a._UZ(2, "span", 49),
                        a._uU(3, " Set Operator "),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = a.oxw(6);
                    a.xp6(1), a.Q6J("disabled", t.toggleLockIsLoading), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/art/art005.svg");
                }
            }
            function or(i, d) {
                if ((1 & i && (a.ynx(0), a.TgZ(1, "li"), a._UZ(2, "hr", 59), a.qZA(), a.YNc(3, sr, 4, 2, "li", 0), a.BQk()), 2 & i)) {
                    const t = a.oxw(2).$implicit,
                        e = a.oxw(3);
                    a.xp6(3),
                        a.Q6J(
                            "ngIf",
                            0 == (null == t.subBelanja ? null : t.subBelanja.kunci_bl_rinci) &&
                                (5 == e.currentUser.id_level || 7 == e.currentUser.id_level || 9 == e.currentUser.id_level || 41 == e.currentUser.id_level) &&
                                1 == e.currentUser.accGiat
                        );
                }
            }
            const De = function (i, d) {
                return { "btn-light-warning": i, "btn-light-success": d };
            };
            function lr(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 98),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw(2).$implicit;
                            return a.oxw(3).updateKunciBelanjaPerKegiatan(n.subBelanja);
                        }),
                        a._UZ(1, "span", 94),
                        a._uU(2),
                        a.qZA();
                }
                if (2 & i) {
                    const t = a.oxw(2).$implicit,
                        e = a.oxw(3);
                    a.Q6J("ngClass", a.WLB(4, De, 0 == (null == t.subBelanja ? null : t.subBelanja.kunci_bl), 1 == (null == t.subBelanja ? null : t.subBelanja.kunci_bl)))("disabled", e.kunciBelanjaPerKegiatanIsLoading),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen047.svg"),
                        a.xp6(1),
                        a.hij(" ", 0 == (null == t.subBelanja ? null : t.subBelanja.kunci_bl) ? "Kunci Sub Kegiatan" : "Buka Sub Kegiatan", " ");
                }
            }
            function rr(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 98),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw(2).$implicit;
                            return a.oxw(3).updateKunciRincianBelanjaPerKegiatan(n.subBelanja);
                        }),
                        a._UZ(1, "span", 94),
                        a._uU(2),
                        a.qZA();
                }
                if (2 & i) {
                    const t = a.oxw(2).$implicit,
                        e = a.oxw(3);
                    a.Q6J("ngClass", a.WLB(4, De, 0 == (null == t.subBelanja ? null : t.subBelanja.kunci_bl_rinci), 1 == (null == t.subBelanja ? null : t.subBelanja.kunci_bl_rinci)))("disabled", e.kunciRincianBelanjaPerKegiatanIsLoading),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen047.svg"),
                        a.xp6(1),
                        a.hij(" ", 0 == (null == t.subBelanja ? null : t.subBelanja.kunci_bl_rinci) ? "Kunci Rincian Belanja" : "Buka Rincian Belanja", " ");
                }
            }
            function dr(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 90),
                        a.YNc(1, Xl, 3, 1, "ng-container", 0),
                        a.YNc(2, ar, 4, 2, "ng-container", 0),
                        a.TgZ(3, "ul", 53)(4, "li")(5, "button", 91),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw().$implicit;
                            return a.oxw(3).openViewModal(n);
                        }),
                        a._UZ(6, "span", 49),
                        a._uU(7, " Lihat Sub Kegiatan "),
                        a.qZA()(),
                        a.YNc(8, tr, 4, 2, "li", 0),
                        a.YNc(9, er, 4, 3, "li", 0),
                        a.TgZ(10, "li"),
                        a._UZ(11, "hr", 59),
                        a.qZA(),
                        a.YNc(12, nr, 4, 2, "li", 0),
                        a.TgZ(13, "li"),
                        a._UZ(14, "hr", 59),
                        a.qZA(),
                        a.YNc(15, ir, 4, 2, "li", 0),
                        a.YNc(16, or, 4, 1, "ng-container", 0),
                        a.ynx(17),
                        a.TgZ(18, "li"),
                        a._UZ(19, "hr", 59),
                        a.qZA(),
                        a.TgZ(20, "li"),
                        a.YNc(21, lr, 3, 7, "button", 92),
                        a.qZA(),
                        a.TgZ(22, "li"),
                        a.YNc(23, rr, 3, 7, "button", 92),
                        a.qZA(),
                        a.BQk(),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = a.oxw().$implicit,
                        e = a.oxw(3);
                    a.xp6(1),
                        a.Q6J("ngIf", !e.isLoadingCetakRKA || e.id_to_cetak_rka != (null == t ? null : t.subBelanja.id_sub_bl)),
                        a.xp6(1),
                        a.Q6J("ngIf", e.isLoadingCetakRKA && e.id_to_cetak_rka == (null == t ? null : t.subBelanja.id_sub_bl)),
                        a.xp6(3),
                        a.Q6J("disabled", e.toggleLockIsLoading),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen025.svg"),
                        a.xp6(2),
                        a.Q6J(
                            "ngIf",
                            0 == (null == t.subBelanja ? null : t.subBelanja.kunci_bl) &&
                                1 == e.currentUser.accGiat &&
                                e.isJadwalAktif &&
                                (5 == e.currentUser.id_level || 41 == e.currentUser.id_level || (9 == e.currentUser.id_level && e.currentUser.id_user == (null == t.subBelanja ? null : t.subBelanja.created_user)))
                        ),
                        a.xp6(1),
                        a.Q6J("ngIf", null == e.renjaJadwal ? null : e.renjaJadwal.is_rinci_bl),
                        a.xp6(3),
                        a.Q6J("ngIf", null == e.renjaJadwal ? null : e.renjaJadwal.is_rinci_bl),
                        a.xp6(3),
                        a.Q6J("ngIf", null == e.renjaJadwal ? null : e.renjaJadwal.is_rinci_bl),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            0 == (null == t.subBelanja ? null : t.subBelanja.kunci_bl_rinci) &&
                                (5 == e.currentUser.id_level || 7 == e.currentUser.id_level || 9 == e.currentUser.id_level || 41 == e.currentUser.id_level) &&
                                1 == e.currentUser.accGiat
                        ),
                        a.xp6(5),
                        a.Q6J("ngIf", e.isJadwalAktif && (1 == e.currentUser.id_level || 2 == e.currentUser.id_level || 3 == e.currentUser.id_level || 41 == e.currentUser.id_level || 43 == e.currentUser.id_level)),
                        a.xp6(2),
                        a.Q6J(
                            "ngIf",
                            e.isJadwalAktif &&
                                (1 == e.currentUser.id_level ||
                                    2 == e.currentUser.id_level ||
                                    3 == e.currentUser.id_level ||
                                    4 == e.currentUser.id_level ||
                                    8 == e.currentUser.id_level ||
                                    41 == e.currentUser.id_level ||
                                    43 == e.currentUser.id_level)
                        );
                }
            }
            function ur(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 99),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw().$implicit;
                            return a.oxw(3).validasiPaguBelanja(n);
                        }),
                        a._UZ(1, "span", 49),
                        a.qZA();
                }
                if (2 & i) {
                    const t = a.oxw(4);
                    a.Q6J("disabled", t.belanjaValidasiPaguBelanjaIsLoading), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen037.svg");
                }
            }
            function _r(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 100),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw().$implicit;
                            return a.oxw(3).deleteData(n);
                        }),
                        a._UZ(1, "span", 49),
                        a.qZA();
                }
                if (2 & i) {
                    const t = a.oxw(4);
                    a.Q6J("disabled", t.toggleLockIsLoading), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen027.svg");
                }
            }
            function pr(i, d) {
                if (
                    (1 & i &&
                        (a.TgZ(0, "td", 81),
                        a.ynx(1),
                        a.TgZ(2, "div", 82)(3, "div", 7),
                        a.YNc(4, zl, 3, 1, "button", 83),
                        a.YNc(5, Vl, 3, 1, "button", 84),
                        a.YNc(6, dr, 24, 11, "div", 85),
                        a.YNc(7, ur, 2, 2, "button", 86),
                        a.YNc(8, _r, 2, 2, "button", 87),
                        a.qZA()(),
                        a.BQk(),
                        a.qZA()),
                    2 & i)
                ) {
                    const t = d.$implicit,
                        e = a.oxw(3);
                    a.xp6(4),
                        a.Q6J("ngIf", (5 == e.currentUser.id_level || 41 == e.currentUser.id_level) && "KEGIATAN" == t.tingkatan && e.isJadwalAktif),
                        a.xp6(1),
                        a.Q6J("ngIf", (5 == e.currentUser.id_level || 41 == e.currentUser.id_level) && "KEGIATAN" == t.tingkatan && e.isJadwalAktif),
                        a.xp6(1),
                        a.Q6J("ngIf", t.showMenu && "KEGIATAN" != t.tingkatan),
                        a.xp6(1),
                        a.Q6J("ngIf", t.showMenu && "BERJALAN" == e.statusJadwal && (5 == e.currentUser.id_level || 41 == e.currentUser.id_level) && 1 == e.currentUser.accGiat && "KEGIATAN" != t.tingkatan),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            "BERJALAN" == e.statusJadwal &&
                                "KEGIATAN" != t.tingkatan &&
                                t.showMenu &&
                                0 == (null == t.subBelanja ? null : t.subBelanja.kunci_bl) &&
                                1 == e.currentUser.accGiat &&
                                (5 == e.currentUser.id_level || 41 == e.currentUser.id_level || 9 == e.currentUser.id_level || e.currentUser.id_user == (null == t.subBelanja ? null : t.subBelanja.created_user))
                        );
                }
            }
            function cr(i, d) {
                1 & i && (a.TgZ(0, "th", 101), a._uU(1, "Sub Kegiatan"), a.qZA());
            }
            function hr(i, d) {
                if ((1 & i && (a.TgZ(0, "b"), a._uU(1), a.qZA()), 2 & i)) {
                    const t = a.oxw().$implicit;
                    a.xp6(1), a.Oqu(t.teks);
                }
            }
            function gr(i, d) {
                1 & i && a._UZ(0, "span", 110), 2 & i && a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen044.svg");
            }
            function mr(i, d) {
                1 & i && a._UZ(0, "span", 111), 2 & i && a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen037.svg");
            }
            function br(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "span", 112)(1, "a", 113),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw(2).$implicit;
                            return a.oxw(3).sinkronPokir(n);
                        }),
                        a._uU(2),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = a.oxw(2).$implicit;
                    a.xp6(2), a.hij("", t.total_pokir, " Usulan Pokir");
                }
            }
            function vr(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "span", 112)(1, "a", 113),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw(2).$implicit;
                            return a.oxw(3).sinkronBantuan(n);
                        }),
                        a._uU(2),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = a.oxw(2).$implicit;
                    a.xp6(2), a.hij("", t.total_bantuan, " Usulan Aspirasi");
                }
            }
            function kr(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "p", 105)(1, "a", 106),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw().$implicit,
                                s = a.oxw(3);
                            return (s.isCollapsedList[n.id_sub_bl] = !s.isCollapsedList[n.id_sub_bl]);
                        }),
                        a.YNc(2, gr, 1, 1, "span", 107),
                        a._uU(3),
                        a.YNc(4, mr, 1, 1, "span", 108),
                        a.qZA(),
                        a.YNc(5, br, 3, 1, "span", 109),
                        a.YNc(6, vr, 3, 1, "span", 109),
                        a.qZA();
                }
                if (2 & i) {
                    const t = a.oxw().$implicit;
                    a.xp6(2),
                        a.Q6J("ngIf", (null == t.subBelanja ? null : t.subBelanja.is_locked) > 0),
                        a.xp6(1),
                        a.hij(" ", t.teks, " "),
                        a.xp6(1),
                        a.Q6J("ngIf", t.set_pagu_user > 0),
                        a.xp6(1),
                        a.Q6J("ngIf", t.total_pokir > 0),
                        a.xp6(1),
                        a.Q6J("ngIf", t.total_bantuan > 0);
                }
            }
            function fr(i, d) {
                if ((1 & i && (a.TgZ(0, "span"), a._uU(1), a.qZA()), 2 & i)) {
                    const t = a.oxw(2).$implicit;
                    a.xp6(1), a.lnq(" dan diubah ", t.subBelanja.user_updated, " tanggal ", t.subBelanja.updated_date, " pukul ", t.subBelanja.updated_time, " WIB ");
                }
            }
            function Sr(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 114, 115),
                        a.NdJ("ngbCollapseChange", function (n) {
                            a.CHM(t);
                            const s = a.oxw().$implicit;
                            return (a.oxw(3).isCollapsedList[s.id_sub_bl] = n);
                        }),
                        a.TgZ(2, "div", 116)(3, "span"),
                        a._uU(4),
                        a.qZA(),
                        a.YNc(5, fr, 2, 3, "span", 0),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = a.oxw().$implicit,
                        e = a.oxw(3);
                    a.Q6J("ngbCollapse", e.isCollapsedList[t.id_sub_bl]),
                        a.xp6(4),
                        a.lnq(" Dibuat ", t.subBelanja.user_created, " tanggal ", t.subBelanja.created_date, " pukul ", t.subBelanja.created_time, " WIB "),
                        a.xp6(1),
                        a.Q6J("ngIf", t.subBelanja.user_updated && t.subBelanja.updated_date && t.subBelanja.updated_time);
                }
            }
            function jr(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 102), a.YNc(1, hr, 2, 1, "b", 0), a.YNc(2, kr, 7, 5, "p", 103), a.YNc(3, Sr, 6, 5, "div", 104), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.Q6J("ngIf", "" != t.tingkatan), a.xp6(1), a.Q6J("ngIf", "" == t.tingkatan), a.xp6(1), a.Q6J("ngIf", t.showMenu && "KEGIATAN" != t.tingkatan);
                }
            }
            function Tr(i, d) {
                1 & i && (a.TgZ(0, "th", 101), a._uU(1, "Pagu Sub Kegiatan"), a.qZA());
            }
            function Ir(i, d) {
                if ((1 & i && (a.TgZ(0, "p", 105), a._uU(1), a.ALo(2, "currency"), a.qZA()), 2 & i)) {
                    const t = a.oxw().$implicit;
                    a.xp6(1), a.hij(" ", a.gM2(2, 1, t.pagu_indikatif, "IDR", "Rp ", "1.0-0"), " ");
                }
            }
            function Br(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 117), a.YNc(1, Ir, 3, 6, "p", 103), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.Q6J("ngIf", "" == t.tingkatan);
                }
            }
            function xr(i, d) {
                1 & i && (a.TgZ(0, "th", 101), a._uU(1, " Status Sub Kegiatan "), a.qZA());
            }
            function Cr(i, d) {
                1 & i && (a.TgZ(0, "p", 119), a._uU(1, " DIKUNCI "), a.qZA());
            }
            function yr(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 117), a.YNc(1, Cr, 2, 0, "p", 118), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.Q6J("ngIf", "" == t.tingkatan && 0 != (null == t.subBelanja ? null : t.subBelanja.kunci_bl));
                }
            }
            function Lr(i, d) {
                1 & i && (a.TgZ(0, "th", 101), a._uU(1, "Status Rincian"), a.qZA());
            }
            function wr(i, d) {
                1 & i && (a.TgZ(0, "p", 119), a._uU(1, " DIKUNCI "), a.qZA());
            }
            function Dr(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 117), a.YNc(1, wr, 2, 0, "p", 118), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.Q6J("ngIf", "" == t.tingkatan && 0 != (null == t.subBelanja ? null : t.subBelanja.kunci_bl_rinci));
                }
            }
            function Rr(i, d) {
                1 & i && (a.TgZ(0, "th", 101), a._uU(1, "Pagu Validasi"), a.qZA());
            }
            function Ar(i, d) {
                if ((1 & i && (a.TgZ(0, "b"), a._uU(1), a.qZA()), 2 & i)) {
                    const t = a.oxw().$implicit;
                    a.xp6(1), a.Oqu(t.pagu);
                }
            }
            function Fr(i, d) {
                if ((1 & i && (a.TgZ(0, "p", 105), a._uU(1), a.ALo(2, "currency"), a.qZA()), 2 & i)) {
                    const t = a.oxw().$implicit;
                    a.xp6(1), a.hij(" ", a.gM2(2, 1, t.pagu, "IDR", "Rp ", "1.0-0"), " ");
                }
            }
            function Ur(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 117), a.YNc(1, Ar, 2, 1, "b", 0), a.YNc(2, Fr, 3, 6, "p", 103), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.Q6J("ngIf", "" != t.tingkatan), a.xp6(1), a.Q6J("ngIf", "" == t.tingkatan);
                }
            }
            function Zr(i, d) {
                1 & i && (a.TgZ(0, "th", 101), a._uU(1, "Total Rincian"), a.qZA());
            }
            function Pr(i, d) {
                if ((1 & i && (a.TgZ(0, "p", 105), a._uU(1), a.ALo(2, "currency"), a.qZA()), 2 & i)) {
                    const t = a.oxw().$implicit;
                    a.xp6(1), a.hij(" ", a.gM2(2, 1, t.total_rincian, "IDR", "Rp ", "1.0-0"), " ");
                }
            }
            function Nr(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 117), a.YNc(1, Pr, 3, 6, "p", 103), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.Q6J("ngIf", "" == t.tingkatan);
                }
            }
            function Mr(i, d) {
                1 & i && a._UZ(0, "tr", 120);
            }
            function Kr(i, d) {
                1 & i && a._UZ(0, "tr", 121);
            }
            function Jr(i, d) {
                if (
                    (1 & i &&
                        (a.TgZ(0, "table", 65),
                        a.ynx(1, 66),
                        a.YNc(2, $l, 2, 0, "th", 67),
                        a.YNc(3, pr, 9, 5, "td", 68),
                        a.BQk(),
                        a.ynx(4, 69),
                        a.YNc(5, cr, 2, 0, "th", 70),
                        a.YNc(6, jr, 4, 4, "td", 71),
                        a.BQk(),
                        a.ynx(7, 72),
                        a.YNc(8, Tr, 2, 0, "th", 70),
                        a.YNc(9, Br, 2, 2, "td", 73),
                        a.BQk(),
                        a.ynx(10, 74),
                        a.YNc(11, xr, 2, 0, "th", 70),
                        a.YNc(12, yr, 2, 2, "td", 73),
                        a.BQk(),
                        a.ynx(13, 75),
                        a.YNc(14, Lr, 2, 0, "th", 70),
                        a.YNc(15, Dr, 2, 2, "td", 73),
                        a.BQk(),
                        a.ynx(16, 76),
                        a.YNc(17, Rr, 2, 0, "th", 70),
                        a.YNc(18, Ur, 3, 3, "td", 73),
                        a.BQk(),
                        a.ynx(19, 77),
                        a.YNc(20, Zr, 2, 0, "th", 70),
                        a.YNc(21, Nr, 2, 2, "td", 73),
                        a.BQk(),
                        a.YNc(22, Mr, 1, 0, "tr", 78),
                        a.YNc(23, Kr, 1, 0, "tr", 79),
                        a.qZA()),
                    2 & i)
                ) {
                    const t = a.oxw(2);
                    a.Q6J("dataSource", t.dataSource), a.xp6(22), a.Q6J("matHeaderRowDef", t.displayedColumns), a.xp6(1), a.Q6J("matRowDefColumns", t.displayedColumns);
                }
            }
            const qr = function () {
                return [20, 50, 100];
            };
            function Yr(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 1)(1, "div", 19)(2, "h3", 20),
                        a._uU(3),
                        a.qZA(),
                        a.YNc(4, Cl, 7, 0, "div", 21),
                        a.YNc(5, yl, 7, 0, "div", 21),
                        a.qZA(),
                        a.YNc(6, Ll, 3, 0, "div", 22),
                        a.TgZ(7, "div", 23)(8, "div", 24)(9, "div", 25)(10, "h2", 26),
                        a._uU(11),
                        a.ALo(12, "currency"),
                        a.qZA(),
                        a.TgZ(13, "p"),
                        a._uU(14, "Batasan Pagu"),
                        a.qZA()()(),
                        a.TgZ(15, "div", 24)(16, "div", 27)(17, "h2", 26),
                        a._uU(18),
                        a.ALo(19, "currency"),
                        a.qZA(),
                        a.TgZ(20, "p"),
                        a._uU(21, "Inputan Pagu"),
                        a.qZA()()(),
                        a.TgZ(22, "div", 24)(23, "div", 28)(24, "h2", 26),
                        a._uU(25),
                        a.ALo(26, "currency"),
                        a.qZA(),
                        a.TgZ(27, "p"),
                        a._uU(28, "Pagu Validasi"),
                        a.qZA()()(),
                        a.TgZ(29, "div", 24)(30, "div", 29)(31, "h2", 26),
                        a._uU(32),
                        a.ALo(33, "currency"),
                        a.qZA(),
                        a.TgZ(34, "p"),
                        a._uU(35, "Rincian"),
                        a.qZA()()()(),
                        a.YNc(36, wl, 4, 4, "div", 30),
                        a.TgZ(37, "div", 31)(38, "div", 3)(39, "div", 32),
                        a._UZ(40, "span", 33),
                        a.TgZ(41, "input", 34),
                        a.NdJ("keyup", function (n) {
                            return a.CHM(t), a.oxw().applyFilter(n);
                        }),
                        a.qZA()()(),
                        a.TgZ(42, "div", 35),
                        a.YNc(43, Dl, 3, 2, "button", 36),
                        a.YNc(44, Rl, 3, 2, "button", 37),
                        a.YNc(45, Al, 3, 1, "button", 38),
                        a.YNc(46, Yl, 6, 4, "div", 39),
                        a.YNc(47, Ql, 16, 5, "div", 39),
                        a.YNc(48, Hl, 24, 7, "div", 39),
                        a.qZA()(),
                        a.TgZ(49, "div", 40)(50, "div", 41),
                        a.YNc(51, Jr, 24, 3, "table", 42),
                        a._UZ(52, "mat-paginator", 43),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw();
                    a.xp6(3),
                        a.Oqu(t.skpd.nama_skpd),
                        a.xp6(1),
                        a.Q6J("ngIf", 1 == (null == t.setupUnit ? null : t.setupUnit.kunci_skpd)),
                        a.xp6(1),
                        a.Q6J("ngIf", 1 == (null == t.setupUnit ? null : t.setupUnit.kunci_tambah_giat)),
                        a.xp6(1),
                        a.Q6J("ngIf", t.paguValidasi > 0 && (t.paguAnggaran > t.paguValidasi || t.rincianAnggaran > t.paguValidasi)),
                        a.xp6(5),
                        a.hij(" ", a.gM2(12, 18, t.paguValidasi, "IDR", "Rp ", "1.0-0"), " "),
                        a.xp6(7),
                        a.hij(" ", a.gM2(19, 23, t.paguAnggaran, "IDR", "Rp ", "1.0-0"), " "),
                        a.xp6(7),
                        a.hij(" ", a.gM2(26, 28, t.paguSudahValidasi, "IDR", "Rp ", "1.0-0"), " "),
                        a.xp6(7),
                        a.hij(" ", a.gM2(33, 33, t.rincianAnggaran, "IDR", "Rp ", "1.0-0"), " "),
                        a.xp6(4),
                        a.Q6J("ngIf", "" !== t.uraianJadwal),
                        a.xp6(4),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen021.svg"),
                        a.xp6(3),
                        a.Q6J("ngIf", t.isDisdik && t.isDev),
                        a.xp6(1),
                        a.Q6J("ngIf", (5 == t.currentUser.id_level || 41 == t.currentUser.id_level) && 1 == t.currentUser.accGiat && 0 == (null == t.setupUnit ? null : t.setupUnit.kunci_skpd)),
                        a.xp6(1),
                        a.Q6J(
                            "ngIf",
                            t.isJadwalAktif &&
                                (5 == t.currentUser.id_level || 7 == t.currentUser.id_level || 9 == t.currentUser.id_level || 41 == t.currentUser.id_level) &&
                                1 == t.currentUser.accGiat &&
                                0 == (null == t.setupUnit ? null : t.setupUnit.kunci_tambah_giat) &&
                                0 == (null == t.setupUnit ? null : t.setupUnit.kunci_skpd)
                        ),
                        a.xp6(1),
                        a.Q6J("ngIf", 2 == t.userSession.level_id || 3 == t.userSession.level_id || 4 == t.userSession.level_id),
                        a.xp6(1),
                        a.Q6J("ngIf", "anggaran" != t.activeUrl),
                        a.xp6(1),
                        a.Q6J("ngIf", "anggaran" == t.activeUrl),
                        a.xp6(3),
                        a.Q6J("ngIf", t.dataSource.data.length > 0),
                        a.xp6(1),
                        a.Q6J("pageSizeOptions", a.DdM(38, qr));
                }
            }
            let Wr = (() => {
                class i {
                    constructor(t, e, n, s, o, l, _, r, u, k, m, v, g, C, h, f, y, B, F, c) {
                        (this.activatedRoute = t),
                            (this.router = e),
                            (this.modal = n),
                            (this.toastr = s),
                            (this.authService = o),
                            (this.konfigurasiService = l),
                            (this.skpdService = _),
                            (this.renjaSubBelanjaService = r),
                            (this.renjaRincianBelanjaService = u),
                            (this.jadwalRenjaService = k),
                            (this.bidangUrusanService = m),
                            (this.subGiatService = v),
                            (this.renjaSetupUnitService = g),
                            (this.userService = C),
                            (this.laporanService = h),
                            (this.usulanPokirService = f),
                            (this.usulanBantuanService = y),
                            (this.sinkronRenstraService = B),
                            (this.jadwalRenstraService = F),
                            (this.waktuService = c),
                            (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))),
                            (this.konfigurasiSession = JSON.parse(localStorage.getItem("sipd-konfigurasi"))),
                            (this.statusJadwal = "BELUM_DIMULAI"),
                            (this.uraianJadwal = ""),
                            (this.cssAlertClass = ""),
                            (this.kode_tujuan = ""),
                            (this.kode_sasaran = ""),
                            (this.id_program = 0),
                            (this.totalPokir = []),
                            (this.totalBantuan = []),
                            (this.data = []),
                            (this.programList = []),
                            (this.kegiatanList = []),
                            (this.programMasterList = []),
                            (this.giatMasterList = []),
                            (this.subGiatMasterList = []),
                            (this.waktu_server_sekarang = 0),
                            (this.paguAnggaran = 0),
                            (this.paguValidasi = 0),
                            (this.paguSudahValidasi = 0),
                            (this.id_to_cetak_rka = 0),
                            (this.isDisdik = !1),
                            (this.display = []),
                            (this.displayedColumns = ["aksi", "teks", "status_sub_giat", "status_rincian", "pagu_validasi", "total_rincian"]),
                            (this.dataSource = new L.by(this.data)),
                            (this.jadwalCekAktifIsLoading = !1),
                            (this.skpdListIsLoading = !1),
                            (this.bidangUrusanListIsLoading = !1),
                            (this.subBelanjaListIsLoading = !1),
                            (this.rincianBelanjaIsLoading = !1),
                            (this.belanjaValidasiPaguBelanjaIsLoading = !1),
                            (this.toggleLockIsLoading = !1),
                            (this.isJadwalAktif = !1),
                            (this.tahun = 0),
                            (this.id_jadwal = 0),
                            (this.tahun_awal = 0),
                            (this.tahun_akhir = 0),
                            (this.skpdList = []),
                            (this.bidangUrusanList = []),
                            (this.allDataIsLoaded = !1),
                            (this.subBelanjaListIsLoaded = !1),
                            (this.skpdListIsLoaded = !1),
                            (this.bidangUrusanListIsLoaded = !1),
                            (this.subGiatListIsLoaded = !1),
                            (this.rincianBelanjaIsLoaded = !1),
                            (this.subBelanjaList = []),
                            (this.subGiatListIsLoading = !1),
                            (this.subBelanjaValidasiPaguIsLoading = !1),
                            (this.setupUnitIsLoading = !1),
                            (this.viewSetupUnitIsLoading = !1),
                            (this.kunciBelanjaPerKegiatanIsLoading = !1),
                            (this.skpdViewIsLoading = !1),
                            (this.arkasIsLoading = !1),
                            (this.mutakhirkanIsLoading = !1),
                            (this.skalaPrioritasIsLoading = !1),
                            (this.id_tahap = 0),
                            (this.renstraWasCopied = !1),
                            (this.subGiatList = []),
                            (this.rincianBelanjaList = []),
                            (this.rincianAnggaran = 0),
                            (this.isLoading = !1),
                            (this.isLoadingCetakRKA = !1),
                            (this.isLoadingCetakRKA2 = !1),
                            (this.isLoadingCetakRKABelanjaSKPD = !1),
                            (this.kunciTambahKegiatanPerUnitIsLoading = !1),
                            (this.kunciKegiatanPerUnitIsLoading = !1),
                            (this.kunciRincianBelanjaPerUnitIsLoading = !1),
                            (this.kunciRincianBelanjaPerKegiatanIsLoading = !1),
                            (this.isCollapsedList = []);
                    }
                    set paginator(t) {
                        this.dataSource.paginator = t;
                    }
                    set sort(t) {
                        this.dataSource.sort = t;
                    }
                    ngOnInit() {
                        (this.activeUrl = this.router.url.split("/")[2]),
                            (this.activeFullUrl = "/" + this.router.url.split("/")[1] + "/" + this.router.url.split("/")[2]),
                            console.log(window.location.hostname),
                            (this.isDev = "localhost" == window.location.hostname || "dev-sipd.kemendagri.go.id" == window.location.hostname),
                            this.activatedRoute.queryParams.subscribe((t) => {
                                if (
                                    ((this.queryParams = t),
                                    this.router.url.split("/"),
                                    this.authService.currentUserValue,
                                    (5 == this.userSession.level_id || 9 == this.userSession.level_id || 13 == this.userSession.level_id) && this.userSession.unit_id != t.id_skpd)
                                )
                                    return this.toastr.error("Anda tidak memiliki akses ke halaman ini", "Error!"), void this.router.navigateByUrl("/");
                                const o = new FormData();
                                o.append("id_daerah", this.userSession.daerah_id),
                                    o.append("id_user", this.userSession.user_id),
                                    this.userService.view(o).subscribe({
                                        next: (l) => {
                                            (this.currentUser = l.data), this.getDataWaktuServer();
                                        },
                                        error: (l) => {},
                                    }),
                                    (this.skpdViewIsLoading = !0),
                                    this.skpdService.view(t.id_skpd, this.konfigurasiService.getTahun(), this.konfigurasiService.getIdDaerah()).subscribe({
                                        next: (l) => {
                                            var _;
                                            (this.skpdViewIsLoading = !1), (this.skpd = l.data[0]);
                                            let r = null === (_ = this.skpd) || void 0 === _ ? void 0 : _.nama_skpd.toLowerCase();
                                            this.isDisdik = (null == r ? void 0 : r.includes("dinas pendidikan")) || !1;
                                        },
                                        error: (l) => {
                                            this.skpdViewIsLoading = !1;
                                        },
                                    });
                            }),
                            this.getNamaDaerah(),
                            this.cekJadwalAktifRenstra(),
                            this.rekapPemutakhiranSKPD();
                    }
                    ngOnDestroy() {
                        var t, e, n, s, o;
                        null === (t = this.programSub) || void 0 === t || t.unsubscribe(),
                            null === (e = this.kegiatanSub) || void 0 === e || e.unsubscribe(),
                            null === (n = this.subKegiatanSub) || void 0 === n || n.unsubscribe(),
                            null === (s = this.jadwalRenstraSub) || void 0 === s || s.unsubscribe(),
                            null === (o = this.loadDataRKASub) || void 0 === o || o.unsubscribe();
                    }
                    applyFilter(t) {
                        let e;
                        (e = t.target.value), (this.dataSource.filter = null == e ? void 0 : e.toLowerCase());
                    }
                    openAddModal() {
                        const t = this.modal.open(St, { size: "xl", backdrop: "static", keyboard: !1 });
                        (t.componentInstance.renstraJadwal = this.renstraJadwal),
                            this.resetLoadedStates(),
                            t.result.then(
                                (e) => {
                                    this.ngOnInit();
                                },
                                (e) => {}
                            );
                    }
                    openKegiatanModal(t) {
                        const e = this.modal.open(il, { size: "xl" });
                        (e.componentInstance.mode = "view"),
                            (e.componentInstance.id_sub_bl = t.id_sub_bl),
                            (e.componentInstance.subBelanja = t.subBelanja),
                            this.resetLoadedStates(),
                            e.result.then(
                                (n) => {},
                                (n) => {}
                            );
                    }
                    sinkronRenstra(t) {
                        const e = this.modal.open(Qa.D, { size: "md" });
                        (e.componentInstance.tipe_icon = "check"),
                            (e.componentInstance.warna_icon = "warning"),
                            (e.componentInstance.isi_text = "Anda yakin akan ambil data indikator dari renstra?"),
                            (e.componentInstance.tombol_true_text = "Ya"),
                            (e.componentInstance.tombol_false_text = "Kembali"),
                            e.result.then((n) => {
                                var s, o, l;
                                if (1 == n) {
                                    const _ = new FormData();
                                    _.append("tahun", this.konfigurasiService.getTahun()),
                                        _.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                        _.append("id_unit", String((null == t ? void 0 : t.id_unit) || 0)),
                                        _.append("id_skpd", String((null == t ? void 0 : t.id_skpd) || 0)),
                                        _.append("id_sub_skpd", String((null == t ? void 0 : t.id_sub_skpd) || 0)),
                                        _.append("id_bl", "0"),
                                        _.append("id_program", String(null == t ? void 0 : t.id_program)),
                                        _.append("id_giat", String(null == t ? void 0 : t.id_giat)),
                                        _.append("kode_program", String(null == t ? void 0 : t.kode_program)),
                                        _.append("kode_giat", String(null == t ? void 0 : t.kode_giat)),
                                        _.append("id_daerah_log", null === (s = this.userSession) || void 0 === s ? void 0 : s.daerah_id),
                                        _.append("id_user_log", null === (o = this.userSession) || void 0 === o ? void 0 : o.user_id),
                                        _.append("is_prop", null === (l = this.userSession) || void 0 === l ? void 0 : l.is_prop),
                                        this.sinkronRenstraService.sinkronProgramGiat(_).subscribe({
                                            next: (r) => {
                                                this.toastr.success("Ambil data indikator dari renstra berhasil", "Berhasil");
                                            },
                                            error: (r) => {
                                                this.toastr.error(r.error.message, "Gagal divalidasi");
                                            },
                                        });
                                }
                            });
                    }
                    openEditModal(t) {
                        const e = this.modal.open(St, { size: "xl" });
                        (e.componentInstance.mode = "edit"),
                            (e.componentInstance.id_sub_bl = t.id_sub_bl),
                            (e.componentInstance.subBelanja = t.subBelanja),
                            this.resetLoadedStates(),
                            e.result.then(
                                (n) => {
                                    this.ngOnInit();
                                },
                                (n) => {}
                            );
                    }
                    openViewModal(t) {
                        const e = this.modal.open(St, { size: "xl" });
                        (e.componentInstance.mode = "view"),
                            (e.componentInstance.id_sub_bl = t.id_sub_bl),
                            (e.componentInstance.subBelanja = t.subBelanja),
                            this.resetLoadedStates(),
                            e.result.then(
                                (n) => {},
                                (n) => {}
                            );
                    }
                    openRincianModal(t) {
                        const e = this.modal.open(bt, { size: "lg" });
                        (e.componentInstance.mode = "add"),
                            (e.componentInstance.subBelanja = t.subBelanja),
                            this.resetLoadedStates(),
                            e.result.then(
                                (n) => {},
                                (n) => {}
                            );
                    }
                    showStafSettingModal(t) {
                        const e = this.modal.open(Zo, { size: "lg" });
                        (e.componentInstance.subBelanja = t.subBelanja),
                            this.resetLoadedStates(),
                            e.result.then(
                                (n) => {},
                                (n) => {}
                            );
                    }
                    lockData(t) {
                        var e, n;
                        const s = new FormData();
                        Object.entries(t.subBelanja).forEach(([l, _], r) => {
                            s.append(l, String(_));
                        }),
                            s.delete("set_pagu_at"),
                            s.delete("kunci_bl_at"),
                            s.delete("kunci_bl_rinci_at"),
                            s.delete("kunci_akb_rinci_at"),
                            s.append("id_daerah_log", null === (e = this.userSession) || void 0 === e ? void 0 : e.daerah_id),
                            s.append("id_user_log", null === (n = this.userSession) || void 0 === n ? void 0 : n.user_id),
                            s.append("aktivitas", "lock");
                        let o = 1;
                        1 == t.subBelanja.kunci_bl && (o = 0),
                            t.subBelanja.kunci_bl <= 1
                                ? (s.set("kunci_bl", String(o)),
                                  (this.toggleLockIsLoading = !0),
                                  (this.lockSubBelanjaSub = this.renjaSubBelanjaService.update(s).subscribe({
                                      next: (l) => {
                                          (this.toggleLockIsLoading = !1),
                                              this.toastr.success(1 == t.subBelanja.kunci_bl ? "Berhasil membuka kunci!" : "Data berhasil dikunci!", "Sukses"),
                                              this.resetLoadedStates(),
                                              this.loadSubBelanjaList();
                                      },
                                      error: (l) => {
                                          (this.toggleLockIsLoading = !1), this.toastr.error("Proses data gagal", "Error!");
                                      },
                                  })))
                                : this.toastr.error("Perubahan data tidak sesuai", "Error!");
                    }
                    deleteData(t) {
                        const e = this.modal.open(Qa.D, { size: "md" });
                        (e.componentInstance.tipe_icon = "exclamation"),
                            (e.componentInstance.warna_icon = "danger"),
                            (e.componentInstance.isi_text = "Hapus data yang dipilih?"),
                            (e.componentInstance.tombol_true_text = "Ya"),
                            (e.componentInstance.tombol_false_text = "Kembali"),
                            e.result.then(
                                (n) => {
                                    var s, o, l, _, r;
                                    if (1 == n) {
                                        const u = new FormData();
                                        Object.entries(t.subBelanja).forEach(([y, B], F) => {
                                            u.append(y, String(B));
                                        }),
                                            u.delete("set_pagu_at"),
                                            u.delete("kunci_bl_at"),
                                            u.delete("kunci_bl_rinci_at"),
                                            u.delete("kunci_akb_rinci_at"),
                                            u.append("id_daerah_log", null === (s = this.userSession) || void 0 === s ? void 0 : s.daerah_id),
                                            u.append("id_user_log", null === (o = this.userSession) || void 0 === o ? void 0 : o.user_id),
                                            u.append("aktivitas", "delete");
                                        let k = Math.floor(1e6 * Math.random()),
                                            m = Math.floor(1e6 * Math.random()),
                                            v =
                                                Number(k) +
                                                Number(null === (l = this.userSession) || void 0 === l ? void 0 : l.user_id) +
                                                Number(t.subBelanja.id_sub_giat) +
                                                Number(null === (_ = this.konfigurasiService) || void 0 === _ ? void 0 : _.getTahun()),
                                            g = Number(t.subBelanja.id_sub_giat) + Number(t.subBelanja.id_sub_giat) + Number(t.subBelanja.id_sub_skpd),
                                            C = Number(t.subBelanja.id_sub_giat) + Number(t.subBelanja.id_skpd) + Number(t.subBelanja.id_sub_skpd),
                                            h = String(this.makeid(15) + "." + String(v) + "." + String(k) + "." + String(g) + "." + String(m) + "." + String(C) + "." + String(k + m));
                                        u.append("level_id", null === (r = this.userSession) || void 0 === r ? void 0 : r.level_id),
                                            u.append("token", h),
                                            u.set("kunci_bl", String("3")),
                                            (this.deleteSubBelanjaSub = this.renjaSubBelanjaService.update(u).subscribe({
                                                next: (y) => {
                                                    this.toastr.success("Data berhasil dihapus", "Sukses"), this.resetLoadedStates(), this.ngOnInit();
                                                },
                                                error: (y) => {
                                                    this.toastr.error("Proses data gagal", "Error!");
                                                },
                                            }));
                                    }
                                },
                                (n) => {}
                            );
                    }
                    validasiSemuaPagu() {
                        const t = this.modal.open(Qa.D, { size: "md" });
                        (t.componentInstance.tipe_icon = "check"),
                            (t.componentInstance.warna_icon = "warning"),
                            (t.componentInstance.isi_text = "Anda yakin akan validasi semua pagu?"),
                            (t.componentInstance.tombol_true_text = "Ya"),
                            (t.componentInstance.tombol_false_text = "Kembali"),
                            t.result.then((e) => {
                                var n, s, o;
                                if (1 == e) {
                                    const l = new FormData();
                                    l.append("tahun", String(this.tahun || 0)),
                                        l.append("id_daerah", String((null === (n = this.userSession) || void 0 === n ? void 0 : n.daerah_id) || 0)),
                                        l.append("id_unit", String((null === (s = this.queryParams) || void 0 === s ? void 0 : s.id_skpd) || 0)),
                                        l.append("id_user", null === (o = this.userSession) || void 0 === o ? void 0 : o.user_id),
                                        (this.subBelanjaValidasiPaguIsLoading = !0),
                                        (this.subBelanjaValidasiPaguSub = this.renjaSubBelanjaService.validasiSemuaPagu(l).subscribe({
                                            next: (_) => {
                                                (this.subBelanjaValidasiPaguIsLoading = !1), this.toastr.success("Validasi Semua Pagu berhasil", "Sukses"), this.ngOnInit();
                                            },
                                            error: (_) => {
                                                (this.subBelanjaValidasiPaguIsLoading = !1), this.toastr.error(_.error.message, "Gagal divalidasi");
                                            },
                                        }));
                                }
                            });
                    }
                    validasiPaguBelanja(t) {
                        const e = this.modal.open(Qa.D, { size: "md" });
                        (e.componentInstance.tipe_icon = "check"),
                            (e.componentInstance.warna_icon = "warning"),
                            (e.componentInstance.isi_text = "Anda yakin akan validasi pagu?"),
                            (e.componentInstance.tombol_true_text = "Ya"),
                            (e.componentInstance.tombol_false_text = "Kembali"),
                            e.result.then((n) => {
                                var s;
                                if (1 == n) {
                                    const o = new FormData();
                                    o.append("id_user", null === (s = this.userSession) || void 0 === s ? void 0 : s.user_id),
                                        o.append("tahun", String(t.subBelanja.tahun)),
                                        o.append("id_daerah", String(t.subBelanja.id_daerah)),
                                        o.append("id_unit", String(t.subBelanja.id_unit)),
                                        o.append("id_program", String(t.subBelanja.id_program)),
                                        o.append("id_giat", String(t.subBelanja.id_giat)),
                                        o.append("id_sub_giat", String(t.subBelanja.id_sub_giat)),
                                        o.append("id_sub_bl", String(t.subBelanja.id_sub_bl)),
                                        (this.belanjaValidasiPaguBelanjaIsLoading = !0),
                                        (this.subBelanjaValidasiPaguSub = this.renjaSubBelanjaService.validasiPaguBelanja(o).subscribe({
                                            next: (l) => {
                                                (this.belanjaValidasiPaguBelanjaIsLoading = !1), this.toastr.success("Validasi pagu berhasil", "Sukses"), (this.dataSource.data = []), this.resetLoadedStates(), this.ngOnInit();
                                            },
                                            error: (l) => {
                                                (this.belanjaValidasiPaguBelanjaIsLoading = !1), this.toastr.error(l.error.message, "Gagal divalidasi");
                                            },
                                        }));
                                }
                            });
                    }
                    loadSkalaPrioritas(t) {
                        new FormData();
                        const n = this.modal.open(kl, { size: "lg" });
                        (n.componentInstance.subBelanja = t.subBelanja),
                            (n.componentInstance.jenisUsulan = "pokir"),
                            this.resetLoadedStates(),
                            n.result.then(
                                (s) => {},
                                (s) => {}
                            );
                    }
                    sinkronPokir(t) {
                        new FormData();
                        const n = this.modal.open(ye, { size: "lg" });
                        (n.componentInstance.subBelanja = t.subBelanja),
                            (n.componentInstance.jenisUsulan = "pokir"),
                            this.resetLoadedStates(),
                            n.result.then(
                                (s) => {},
                                (s) => {}
                            );
                    }
                    sinkronBantuan(t) {
                        new FormData();
                        const n = this.modal.open(ye, { size: "lg" });
                        (n.componentInstance.subBelanja = t.subBelanja),
                            (n.componentInstance.jenisUsulan = "asmas"),
                            this.resetLoadedStates(),
                            n.result.then(
                                (s) => {},
                                (s) => {}
                            );
                    }
                    updateKunciTambahGiatUnit(t) {
                        var e;
                        const n = new FormData();
                        n.append("kunci_tambah_giat", String(t)),
                            n.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                            n.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                            n.append("id_unit", String((null === (e = this.queryParams) || void 0 === e ? void 0 : e.id_skpd) || 0)),
                            n.append("id_user_log", this.userSession.user_id),
                            n.append("id_daerah_log", this.userSession.daerah_id),
                            (this.kunciTambahKegiatanPerUnitIsLoading = !0),
                            this.renjaSetupUnitService.updateKunciTambahGiatUnit(n).subscribe({
                                next: (s) => {
                                    (this.kunciTambahKegiatanPerUnitIsLoading = !1), this.toastr.success("Sukses", "Kunci tambah Kegiatan Belanja berhasil diubah"), this.getDataWaktuServer();
                                },
                                error: (s) => {
                                    this.kunciTambahKegiatanPerUnitIsLoading = !1;
                                    const o = s.error;
                                    o.hasOwnProperty("app-error") ? this.toastr.error(`${o.message}`, "Error!") : this.toastr.error("Terjadi kesalahan, data gagal diupdate!", "Error!");
                                },
                            });
                    }
                    updateKunciKegiatanUnit(t) {
                        var e;
                        const n = new FormData();
                        n.append("kunci_bl", String(t)),
                            n.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                            n.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                            n.append("id_unit", String((null === (e = this.queryParams) || void 0 === e ? void 0 : e.id_skpd) || 0)),
                            n.append("id_user_log", this.userSession.user_id),
                            n.append("id_daerah_log", this.userSession.daerah_id),
                            (this.kunciKegiatanPerUnitIsLoading = !0),
                            this.renjaSubBelanjaService.updateKunciBelanjaUnit(n).subscribe({
                                next: (s) => {
                                    (this.kunciKegiatanPerUnitIsLoading = !1), this.toastr.success("Sukses", "Kunci Kegiatan Belanja berhasil diubah"), this.getDataWaktuServer();
                                },
                                error: (s) => {
                                    this.kunciKegiatanPerUnitIsLoading = !1;
                                    const o = s.error;
                                    o.hasOwnProperty("app-error") ? this.toastr.error(`${o.message}`, "Error!") : this.toastr.error("Terjadi kesalahan, data gagal diupdate!", "Error!");
                                },
                            });
                    }
                    updateKunciRincianBelanjaUnit(t) {
                        var e;
                        const n = new FormData();
                        n.append("kunci_bl_rinci", String(t)),
                            n.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                            n.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                            n.append("id_unit", String((null === (e = this.queryParams) || void 0 === e ? void 0 : e.id_skpd) || 0)),
                            n.append("id_user_log", this.userSession.user_id),
                            n.append("id_daerah_log", this.userSession.daerah_id),
                            (this.kunciTambahKegiatanPerUnitIsLoading = !0),
                            this.renjaSubBelanjaService.updateKunciRincianBelanjaUnit(n).subscribe({
                                next: (s) => {
                                    (this.kunciTambahKegiatanPerUnitIsLoading = !1), this.toastr.success("Sukses", "Kunci Rincian Belanja berhasil diubah"), this.getDataWaktuServer();
                                },
                                error: (s) => {
                                    this.kunciTambahKegiatanPerUnitIsLoading = !1;
                                    const o = s.error;
                                    o.hasOwnProperty("app-error") ? this.toastr.error(`${o.message}`, "Error!") : this.toastr.error("Terjadi kesalahan, data gagal diupdate!", "Error!");
                                },
                            });
                    }
                    updateKunciBelanjaPerKegiatan(t) {
                        var e;
                        const n = 0 == t.kunci_bl ? 1 : 0,
                            s = new FormData();
                        s.append("kunci_bl", String(n)),
                            s.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                            s.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                            s.append("id_unit", String((null === (e = this.queryParams) || void 0 === e ? void 0 : e.id_skpd) || 0)),
                            s.append("id_sub_bl", String(t.id_sub_bl)),
                            s.append("id_user_log", this.userSession.user_id),
                            s.append("id_daerah_log", this.userSession.daerah_id),
                            (this.kunciBelanjaPerKegiatanIsLoading = !0),
                            this.renjaSubBelanjaService.updateKunciBelanjaPerKegiatan(s).subscribe({
                                next: (o) => {
                                    (this.kunciBelanjaPerKegiatanIsLoading = !1),
                                        this.toastr.success("Sukses", "Kunci Kegiatan Belanja berhasil diubah"),
                                        this.getDataWaktuServer(),
                                        this.subBelanjaList.map((l) => (l.id_sub_bl == t.id_sub_bl && (l.kunci_bl = n), l));
                                },
                                error: (o) => {
                                    this.kunciBelanjaPerKegiatanIsLoading = !1;
                                    const l = o.error;
                                    l.hasOwnProperty("app-error") ? this.toastr.error(`${l.message}`, "Error!") : this.toastr.error("Terjadi kesalahan, data gagal diupdate!", "Error!");
                                },
                            });
                    }
                    updateKunciRincianBelanjaPerKegiatan(t) {
                        var e;
                        const n = 0 == t.kunci_bl_rinci ? 1 : 0,
                            s = new FormData();
                        s.append("kunci_bl_rinci", String(n)),
                            s.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                            s.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                            s.append("id_unit", String((null === (e = this.queryParams) || void 0 === e ? void 0 : e.id_skpd) || 0)),
                            s.append("id_sub_bl", String(t.id_sub_bl)),
                            s.append("id_user_log", this.userSession.user_id),
                            s.append("id_daerah_log", this.userSession.daerah_id),
                            (this.kunciRincianBelanjaPerKegiatanIsLoading = !0),
                            this.renjaSubBelanjaService.updateKunciRincianBelanjaPerKegiatan(s).subscribe({
                                next: (o) => {
                                    (this.kunciRincianBelanjaPerKegiatanIsLoading = !1),
                                        this.toastr.success("Sukses", "Kunci Rincian Belanja berhasil diubah"),
                                        this.getDataWaktuServer(),
                                        this.subBelanjaList.map((l) => (l.id_sub_bl == t.id_sub_bl && (l.kunci_bl_rinci = n), l));
                                },
                                error: (o) => {
                                    this.kunciRincianBelanjaPerKegiatanIsLoading = !1;
                                    const l = o.error;
                                    l.hasOwnProperty("app-error") ? this.toastr.error(`${l.message}`, "Error!") : this.toastr.error("Terjadi kesalahan, data gagal diupdate!", "Error!");
                                },
                            });
                    }
                    loadSubBelanjaList() {
                        var t, e, n;
                        const s = new FormData();
                        s.append("tahun", String(null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun())),
                            s.append("id_daerah", String(null !== (n = null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) && void 0 !== n ? n : 0)),
                            s.append("id_unit", String(this.queryParams.id_skpd || 0)),
                            s.append("is_prop", String(this.userSession.is_prop)),
                            s.append("is_anggaran", String(this.isAnggaran)),
                            (this.subBelanjaListIsLoading = !0),
                            (this.subBelanjaListSub = this.renjaSubBelanjaService.listBelanjaByTahunDaerahUnit(s).subscribe({
                                next: (o) => {
                                    this.subBelanjaListIsLoading = !1;
                                    let l = this.decrip(o.data);
                                    (this.subBelanjaList = l),
                                        (this.subBelanjaListIsLoaded = !0),
                                        (this.skpdListIsLoaded = !0),
                                        (this.bidangUrusanListIsLoaded = !0),
                                        (this.subGiatListIsLoaded = !0),
                                        (this.paguAnggaran = 0),
                                        (this.paguSudahValidasi = 0),
                                        this.subBelanjaList.forEach((_) => {
                                            (this.paguAnggaran += _.pagu), (this.paguSudahValidasi += _.pagu_indikatif);
                                        }),
                                        this.buildDataSource();
                                },
                                error: (o) => {
                                    this.subBelanjaListIsLoading = !1;
                                },
                            }));
                    }
                    loadRincianList() {
                        var t, e, n;
                        const s = new FormData();
                        s.append("tahun", String(null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun())),
                            s.append("id_daerah", String(null !== (n = null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) && void 0 !== n ? n : 0)),
                            s.append("id_skpd", String(this.queryParams.id_skpd)),
                            s.append("is_anggaran", String(this.isAnggaran)),
                            (this.rincianBelanjaIsLoading = !0),
                            (this.rincianBelanjaSub = this.renjaRincianBelanjaService.totalByIdSkpd(s).subscribe({
                                next: (o) => {
                                    (this.rincianAnggaran = o.data), (this.rincianBelanjaIsLoading = !1), (this.rincianBelanjaIsLoaded = !0), this.buildDataSource();
                                },
                                error: (o) => {
                                    this.rincianBelanjaIsLoading = !1;
                                },
                            }));
                    }
                    loadPokirList() {
                        var t, e, n;
                        const s = new FormData();
                        s.append("tahun", String(null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun())),
                            s.append("id_daerah", String(null !== (n = null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) && void 0 !== n ? n : 0)),
                            s.append("id_skpd", String(this.queryParams.id_skpd)),
                            (this.totPokirSub = this.usulanPokirService.totalApprove(s).subscribe({
                                next: (o) => {
                                    (this.totalPokir = o.data), this.buildDataSource();
                                },
                                error: (o) => {},
                            }));
                    }
                    loadBantuanList() {
                        var t, e, n;
                        const s = new FormData();
                        s.append("tahun", String(null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun())),
                            s.append("id_daerah", String(null !== (n = null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) && void 0 !== n ? n : 0)),
                            s.append("id_skpd", String(this.queryParams.id_skpd)),
                            (this.totBantuanSub = this.usulanBantuanService.totalApprove(s).subscribe({
                                next: (o) => {
                                    (this.totalBantuan = o.data), this.buildDataSource();
                                },
                                error: (o) => {},
                            }));
                    }
                    buildDataSource() {
                        let e,
                            n,
                            s,
                            o,
                            l,
                            _,
                            t = 0;
                        !this.allDataIsLoaded &&
                            this.skpdListIsLoaded &&
                            this.bidangUrusanListIsLoaded &&
                            this.subBelanjaListIsLoaded &&
                            this.rincianBelanjaIsLoaded &&
                            this.subGiatListIsLoaded &&
                            (this.subBelanjaList.forEach((r) => {
                                var u, k;
                                this.data.some((y) => Number(r.id_sub_skpd) === Number(y.id_sub_skpd)),
                                    e != r.id_sub_skpd &&
                                        ((this.data[t] = {
                                            id_skpd: r.id_skpd,
                                            id_unit: r.id_unit,
                                            id_sub_skpd: r.id_sub_skpd,
                                            id_sub_bl: r.id_sub_bl,
                                            id_urusan: r.id_urusan,
                                            id_bidang_urusan: void 0,
                                            id_program: void 0,
                                            id_giat: void 0,
                                            kode_skpd: r.kode_skpd,
                                            kode_unit: r.kode_unit,
                                            kode_urusan: r.kode_urusan,
                                            kode_bidang_urusan: void 0,
                                            kode_program: void 0,
                                            kode_giat: void 0,
                                            teks: `${r.kode_sub_skpd} ${r.nama_sub_skpd}`,
                                            tingkatan: "SKPD",
                                            colspan: 6,
                                            viewDetails: !1,
                                            addDetails: !1,
                                            editData: !1,
                                            lockData: !1,
                                            deleteData: !1,
                                        }),
                                        t++,
                                        (e = r.id_sub_skpd),
                                        (n = void 0),
                                        (s = void 0),
                                        (o = void 0),
                                        (l = void 0),
                                        (_ = void 0)),
                                    this.data.some((y) => Number(r.id_bidang_urusan) === Number(y.id_bidang_urusan) && Number(r.id_sub_skpd) === Number(y.id_sub_skpd)),
                                    e == r.id_sub_skpd &&
                                        s != r.id_bidang_urusan &&
                                        ((this.data[t] = {
                                            teks: `${null == r ? void 0 : r.kode_bidang_urusan} ${null == r ? void 0 : r.nama_bidang_urusan}`,
                                            id_skpd: r.id_skpd,
                                            id_unit: r.id_unit,
                                            id_sub_skpd: r.id_sub_skpd,
                                            id_sub_bl: r.id_sub_bl,
                                            id_urusan: r.id_urusan,
                                            id_bidang_urusan: r.id_bidang_urusan,
                                            id_program: void 0,
                                            id_giat: void 0,
                                            kode_skpd: r.kode_skpd,
                                            kode_unit: r.kode_unit,
                                            kode_urusan: r.kode_urusan,
                                            kode_bidang_urusan: r.kode_bidang_urusan,
                                            kode_program: void 0,
                                            kode_giat: void 0,
                                            tingkatan: "URUSAN",
                                            viewDetails: !1,
                                            addDetails: !1,
                                            editData: !1,
                                            lockData: !1,
                                            deleteData: !1,
                                            colspan: 7,
                                        }),
                                        t++,
                                        (e = r.id_sub_skpd),
                                        (n = r.id_urusan),
                                        (s = r.id_bidang_urusan),
                                        (o = void 0),
                                        (l = void 0),
                                        (_ = void 0)),
                                    this.data.some((y) => Number(r.id_program) === Number(y.id_program) && Number(r.id_bidang_urusan) === Number(y.id_bidang_urusan) && Number(r.id_sub_skpd) === Number(y.id_sub_skpd)),
                                    e == r.id_sub_skpd &&
                                        s == r.id_bidang_urusan &&
                                        o != r.id_program &&
                                        ((this.data[t] = {
                                            teks: `${r.kode_program} ${r.nama_program}`,
                                            kegiatan: "INI PROGRAM",
                                            id_skpd: r.id_skpd,
                                            id_unit: r.id_unit,
                                            id_sub_skpd: r.id_sub_skpd,
                                            id_sub_bl: r.id_sub_bl,
                                            id_urusan: r.id_urusan,
                                            id_bidang_urusan: r.id_bidang_urusan,
                                            id_program: r.id_program,
                                            id_giat: void 0,
                                            kode_skpd: r.kode_skpd,
                                            kode_unit: r.kode_unit,
                                            kode_urusan: r.kode_urusan,
                                            kode_bidang_urusan: r.kode_bidang_urusan,
                                            kode_program: r.kode_program,
                                            kode_giat: void 0,
                                            tingkatan: "PROGRAM",
                                            viewDetails: !1,
                                            addDetails: !1,
                                            editData: !1,
                                            lockData: !1,
                                            deleteData: !1,
                                            colspan: 7,
                                        }),
                                        t++,
                                        (e = r.id_sub_skpd),
                                        (n = r.id_urusan),
                                        (s = r.id_bidang_urusan),
                                        (o = r.id_program),
                                        (l = void 0),
                                        (_ = void 0)),
                                    this.data.some(
                                        (y) =>
                                            Number(r.id_giat) === Number(y.id_giat) &&
                                            Number(r.id_program) === Number(y.id_program) &&
                                            Number(r.id_bidang_urusan) === Number(y.id_bidang_urusan) &&
                                            Number(r.id_sub_skpd) === Number(y.id_sub_skpd)
                                    ),
                                    e == r.id_sub_skpd &&
                                        s == r.id_bidang_urusan &&
                                        o == r.id_program &&
                                        l != r.id_giat &&
                                        ((this.data[t] = {
                                            teks: `${r.kode_giat} ${r.nama_giat}`,
                                            kegiatan: "INI KEGIATAN",
                                            id_skpd: r.id_skpd,
                                            id_unit: r.id_unit,
                                            id_sub_skpd: r.id_sub_skpd,
                                            id_sub_bl: r.id_sub_bl,
                                            id_urusan: r.id_urusan,
                                            id_bidang_urusan: r.id_bidang_urusan,
                                            id_program: r.id_program,
                                            id_giat: r.id_giat,
                                            kode_skpd: r.kode_skpd,
                                            kode_unit: r.kode_unit,
                                            kode_urusan: r.kode_urusan,
                                            kode_bidang_urusan: r.kode_bidang_urusan,
                                            kode_program: r.kode_program,
                                            kode_giat: r.kode_giat,
                                            tingkatan: "KEGIATAN",
                                            viewDetails: !1,
                                            addDetails: !1,
                                            editData: !1,
                                            lockData: !1,
                                            deleteData: !1,
                                            colspan: 7,
                                            showMenu: !0,
                                            created_user: r.created_user,
                                        }),
                                        t++,
                                        (e = r.id_sub_skpd),
                                        (n = r.id_urusan),
                                        (s = r.id_bidang_urusan),
                                        (o = r.id_program),
                                        (l = r.id_giat),
                                        (_ = void 0)),
                                    (this.isCollapsedList[r.id_sub_bl] = !0);
                                const h = null === (u = this.totalPokir.find((y) => Number(r.id_sub_giat) == Number(y.id_sub_giat_bl))) || void 0 === u ? void 0 : u.jml,
                                    f = null === (k = this.totalBantuan.find((y) => Number(r.id_sub_giat) == Number(y.id_sub_giat_bl))) || void 0 === k ? void 0 : k.jml;
                                Number(r.kunci_bl) <= 1 &&
                                    ((this.data[t] = {
                                        subBelanja: r,
                                        teks: r.kode_sub_giat + " " + r.nama_sub_giat,
                                        id_skpd: r.id_skpd,
                                        id_unit: r.id_unit,
                                        id_sub_bl: r.id_sub_bl,
                                        id_urusan: r.id_urusan,
                                        id_bidang_urusan: r.id_bidang_urusan,
                                        id_program: r.id_program,
                                        id_giat: r.id_giat,
                                        id_sub_giat: r.id_sub_giat,
                                        id_unik: r.id_unik,
                                        nama_daerah: r.nama_daerah,
                                        nama_unit: r.nama_unit,
                                        nama_skpd: r.nama_skpd,
                                        nama_sub_skpd: r.nama_sub_skpd,
                                        nama_urusan: r.nama_urusan,
                                        nama_bidang_urusan: r.nama_bidang_urusan,
                                        nama_program: r.nama_program,
                                        nama_giat: r.nama_giat,
                                        nama_sub_giat: r.nama_sub_giat,
                                        pagu: r.pagu,
                                        pagu_indikatif: r.pagu_indikatif,
                                        output_teks: r.output_teks,
                                        set_pagu_user: r.set_pagu_user,
                                        set_pagu_at: r.set_pagu_at,
                                        tingkatan: "",
                                        viewDetails: !0,
                                        addDetails: !0,
                                        addData: !1,
                                        editData: !0,
                                        lockData: !0,
                                        deleteData: !0,
                                        colspan: 1,
                                        showMenu: !0,
                                        total_rincian: r.rincian,
                                        created_user: r.created_user,
                                        total_pokir: h,
                                        total_bantuan: f,
                                    }),
                                    t++);
                            }),
                            (this.dataSource.data = this.data),
                            (this.dataSource.paginator = this.paginator),
                            (this.dataSource.sort = this.sort),
                            (this.allDataIsLoaded = !0));
                    }
                    buildDataSourceOLD() {
                        var t;
                        let e = 0;
                        !this.allDataIsLoaded &&
                            this.skpdListIsLoaded &&
                            this.bidangUrusanListIsLoaded &&
                            this.subBelanjaListIsLoaded &&
                            this.rincianBelanjaIsLoaded &&
                            this.subGiatListIsLoaded &&
                            (null === (t = this.skpdList) ||
                                void 0 === t ||
                                t.forEach((n) => {
                                    var s;
                                    if (null === (s = this.subBelanjaList) || void 0 === s ? void 0 : s.some((o) => (null == n ? void 0 : n.id_skpd) == o.id_unit)) {
                                        const o = this.subBelanjaList.filter((r) => Number(n.id_skpd) === Number(r.id_unit));
                                        this.data.some((r) => Number(n.id_skpd) === Number(r.id_skpd)) ||
                                            ((this.data[e] = { id_skpd: n.id_skpd, teks: `${n.kode_skpd} ${n.nama_skpd}`, tingkatan: "SKPD", colspan: 6, viewDetails: !1, addDetails: !1, editData: !1, lockData: !1, deleteData: !1 }), e++);
                                        let _ = [];
                                        o.forEach((r) => {
                                            _ = this.bidangUrusanList.filter((u) => Number(u.id_bidang_urusan));
                                        }),
                                            null == _ ||
                                                _.forEach((r) => {
                                                    const u = this.bidangUrusanList.find((g) => Number(g.id_bidang_urusan) === Number(r.id_bidang_urusan));
                                                    this.data.some((g) => Number(r.id_bidang_urusan) === Number(g.id_bidang_urusan)) ||
                                                        ((this.data[e] = {
                                                            teks: `${null == u ? void 0 : u.kode_bidang_urusan} ${null == u ? void 0 : u.nama_bidang_urusan}`,
                                                            bidangUrusan: u,
                                                            sasaran: u,
                                                            id_bidang_urusan: null == u ? void 0 : u.id_bidang_urusan,
                                                            id_unit: n.id_skpd,
                                                            tingkatan: "URUSAN",
                                                            viewDetails: !1,
                                                            addDetails: !1,
                                                            editData: !1,
                                                            lockData: !1,
                                                            deleteData: !1,
                                                            colspan: 7,
                                                        }),
                                                        e++);
                                                    let m = 0,
                                                        v = 0;
                                                    o.forEach((g) => {
                                                        var C, h, f;
                                                        if (!this.data.some((B) => Number(g.id_sub_giat) === Number(B.id_sub_giat))) {
                                                            v != g.id_program &&
                                                                ((v = g.id_program),
                                                                (this.data[e] = {
                                                                    teks: `${g.kode_program} ${g.nama_program}`,
                                                                    bidangUrusan: u,
                                                                    kegiatan: "INI PROGRAM",
                                                                    sasaran: u,
                                                                    id_bidang_urusan: null == u ? void 0 : u.id_bidang_urusan,
                                                                    id_unit: n.id_skpd,
                                                                    tingkatan: "PROGRAM",
                                                                    viewDetails: !1,
                                                                    addDetails: !1,
                                                                    editData: !1,
                                                                    lockData: !1,
                                                                    deleteData: !1,
                                                                    colspan: 7,
                                                                }),
                                                                e++),
                                                                m != g.id_giat &&
                                                                    ((m = g.id_giat),
                                                                    (this.data[e] = {
                                                                        teks: `${g.kode_giat} ${g.nama_giat}`,
                                                                        subBelanja: g,
                                                                        bidangUrusan: u,
                                                                        kegiatan: "INI KEGIATAN",
                                                                        sasaran: u,
                                                                        id_bidang_urusan: null == u ? void 0 : u.id_bidang_urusan,
                                                                        id_unit: n.id_skpd,
                                                                        tingkatan: "KEGIATAN",
                                                                        viewDetails: !1,
                                                                        addDetails: !1,
                                                                        editData: !1,
                                                                        lockData: !1,
                                                                        deleteData: !1,
                                                                        colspan: 7,
                                                                        showMenu: !0,
                                                                        created_user: g.created_user,
                                                                    }),
                                                                    e++),
                                                                (this.isCollapsedList[g.id_sub_bl] = !0);
                                                            const B = null === (C = this.subGiatList.find((b) => Number(b.id_sub_giat) == Number(g.id_sub_giat))) || void 0 === C ? void 0 : C.nama_sub_giat,
                                                                F = null === (h = this.totalPokir.find((b) => Number(g.id_sub_giat) == Number(b.id_sub_giat_bl))) || void 0 === h ? void 0 : h.jml,
                                                                c = null === (f = this.totalBantuan.find((b) => Number(g.id_sub_giat) == Number(b.id_sub_giat_bl))) || void 0 === f ? void 0 : f.jml;
                                                            Number(g.kunci_bl) <= 1 &&
                                                                ((this.data[e] = {
                                                                    subBelanja: g,
                                                                    teks: g.kode_sub_giat + " " + B,
                                                                    id_sub_bl: g.id_sub_bl,
                                                                    id_sub_giat: g.id_sub_giat,
                                                                    id_unik: g.id_unik,
                                                                    nama_daerah: g.nama_daerah,
                                                                    nama_unit: g.nama_unit,
                                                                    nama_skpd: g.nama_skpd,
                                                                    nama_sub_skpd: g.nama_sub_skpd,
                                                                    nama_urusan: g.nama_urusan,
                                                                    nama_bidang_urusan: g.nama_bidang_urusan,
                                                                    nama_program: g.nama_program,
                                                                    nama_giat: g.nama_giat,
                                                                    nama_sub_giat: g.nama_sub_giat,
                                                                    pagu: g.pagu,
                                                                    pagu_indikatif: g.pagu_indikatif,
                                                                    output_teks: g.output_teks,
                                                                    tingkatan: "",
                                                                    viewDetails: !0,
                                                                    addDetails: !0,
                                                                    addData: !1,
                                                                    editData: !0,
                                                                    lockData: !0,
                                                                    deleteData: !0,
                                                                    colspan: 1,
                                                                    showMenu: !0,
                                                                    total_rincian: g.total_rincian,
                                                                    created_user: g.created_user,
                                                                    total_pokir: F,
                                                                    total_bantuan: c,
                                                                }),
                                                                e++);
                                                        }
                                                    });
                                                });
                                    }
                                }),
                            (this.dataSource.data = this.data),
                            (this.dataSource.paginator = this.paginator),
                            (this.dataSource.sort = this.sort),
                            (this.allDataIsLoaded = !0));
                    }
                    resetLoadedStates() {
                        (this.data = []),
                            (this.allDataIsLoaded = !1),
                            (this.subBelanjaListIsLoaded = !1),
                            (this.skpdListIsLoaded = !1),
                            (this.bidangUrusanListIsLoaded = !1),
                            (this.subGiatListIsLoaded = !1),
                            (this.rincianBelanjaIsLoaded = !1);
                    }
                    getDataWaktuServer() {
                        const t = new FormData();
                        this.waktuSub = this.waktuService.getWaktuServer(t).subscribe({
                            next: (e) => {
                                (this.waktu_server_sekarang = Number(e.data)), this.cekJadwal();
                            },
                            error: (e) => {
                                this.toastr.error("Terjadi kesalahan saat mengambil data jadwal!", "Error!"), (this.isLoading = !1);
                            },
                        });
                    }
                    cekJadwal() {
                        const t = new FormData();
                        t.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                            t.append("tahun", this.konfigurasiService.getTahun()),
                            "penganggaran" == this.router.url.split("/")[1] ? (t.append("is_anggaran", "1"), (this.isAnggaran = "1")) : (t.append("is_anggaran", "0"), (this.isAnggaran = "0")),
                            (this.jadwalCekAktifIsLoading = !0),
                            (this.jadwalCekAktifSub = this.jadwalRenjaService.cekJadwalAktif(t, this.isAnggaran).subscribe({
                                next: (n) => {
                                    var s;
                                    (this.jadwalCekAktifIsLoading = !1), (this.renjaJadwal = n.data[0]);
                                    var l = new Date(null === (s = n.data[0]) || void 0 === s ? void 0 : s.waktu_selesai).getTime() + 60 * new Date().getTimezoneOffset() * 1e3 - Number(this.waktu_server_sekarang);
                                    n.data[0] && 0 == n.data[0].is_locked && l > 0
                                        ? ((this.isJadwalAktif = !0), (this.tahun = n.data[0].tahun), (this.id_jadwal = n.data[0].id_jadwal), (this.statusJadwal = "BERJALAN"))
                                        : n.data[0] && 0 == n.data[0].is_locked && l < 0
                                        ? ((this.isJadwalAktif = !1), (this.tahun = n.data[0].tahun), (this.id_jadwal = n.data[0].id_jadwal), (this.statusJadwal = "SELESAI"))
                                        : ((this.isJadwalAktif = !1), (this.tahun = 0), (this.statusJadwal = "BELUM_DIMULAI")),
                                        this.loadSubBelanjaList(),
                                        this.loadRincianList(),
                                        this.loadPokirList(),
                                        this.loadBantuanList(),
                                        this.loadPaguValidasi(),
                                        this.viewSetupUnit();
                                },
                                error: (n) => {
                                    (this.jadwalCekAktifIsLoading = !1), (this.isJadwalAktif = !1), (this.tahun = 0);
                                },
                            }));
                    }
                    onlyUnique(t, e, n) {
                        return n.indexOf(t) === e;
                    }
                    loadPaguValidasi() {
                        const t = new Pa.LE().set("tahun", this.konfigurasiService.getTahun()).set("id_daerah", this.konfigurasiService.getIdDaerah()).set("id_unit", this.queryParams.id_skpd);
                        (this.setupUnitIsLoading = !0),
                            (this.setupUnitSub = this.renjaSetupUnitService.getPaguValidasi(t).subscribe({
                                next: (e) => {
                                    (this.setupUnitIsLoading = !1), (this.paguValidasi = e.data);
                                },
                                error: (e) => {
                                    this.setupUnitIsLoading = !1;
                                },
                            }));
                    }
                    viewSetupUnit() {
                        const t = new FormData();
                        t.append("tahun", this.konfigurasiService.getTahun()),
                            t.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                            t.append("id_unit", this.queryParams.id_skpd),
                            (this.viewSetupUnitIsLoading = !0),
                            (this.setupUnitSub = this.renjaSetupUnitService.findByIdUnit(t).subscribe({
                                next: (e) => {
                                    (this.viewSetupUnitIsLoading = !1), (this.setupUnit = e.data[0]);
                                },
                                error: (e) => {
                                    this.viewSetupUnitIsLoading = !1;
                                },
                            }));
                    }
                    getNamaDaerah() {
                        this.queryParamsSub = this.laporanService.getDaerah(this.userSession.daerah_id).subscribe({
                            next: (t) => {
                                (this.nama_daerah = t.data[0].nama_daerah), (this.logo_daerah = t.data[0].logo);
                            },
                        });
                    }
                    getDataLampiranRenja(t, e) {
                        var n;
                        this.isLoading = !0;
                        const s = new FormData();
                        s.append("id_daerah", this.userSession.daerah_id),
                            s.append("tahun", this.konfigurasiSession.tahun),
                            s.append("id_skpd", String((null === (n = this.queryParams) || void 0 === n ? void 0 : n.id_skpd) || 0)),
                            s.append("tahun_awal", this.tahun_awal.toString()),
                            s.append("tahun_akhir", this.tahun_akhir.toString()),
                            s.append("is_anggaran", this.isAnggaran),
                            this.skpdService.getNamaUnitSubUnit(s).subscribe({
                                next: (o) => {
                                    this.dataSKPD = o.data;
                                },
                                error: (o) => {},
                            }),
                            (this.SubLaporan = this.laporanService.listDataLampiran(s).subscribe({
                                next: (o) => {
                                    (this.dataTemp1 = o.data), "excel" == t ? (1 == e ? this.exportExcelLampiranRenja() : this.cetakLampiranRenjaBangdaExcel()) : this.cetakLampiranRenjaBangda(), (this.isLoading = !1);
                                },
                                error: (o) => {
                                    this.toastr.error("Data Laporan Gagal DiLoad", "Error!", { positionClass: "toast-top-right", closeButton: !0, progressBar: !0 }), (this.isLoading = !1);
                                },
                            }));
                    }
                    exportExcelLampiranRenja() {
                        var t;
                        let e = this.konfigurasiSession.tahun,
                            n = 0,
                            s = 1;
                        (this.display = []),
                            this.dataTemp1.forEach((g, C) => {
                                (this.display[n] = { nomer: s++, tahun: e, nama_skpd: g.nama_skpd, kode_skpd: g.kode_skpd, nama__sub_skpd: g.nama_sub_skpd, kode_sub_skpd: g.kode_sub_skpd, nama_daerah: this.nama_daerah }), n++;
                            });
                        let _ = new ut.Workbook();
                        var r = _.addWorksheet("Sheet 1");
                        if (
                            (r.mergeCells("A1", "S1"),
                            (r.getCell("A1").value = "Program dan Kegiatan Perangkat Daerah"),
                            r.mergeCells("A2", "S2"),
                            (r.getCell("A2").value = this.nama_daerah),
                            r.mergeCells("A3", "S3"),
                            (r.getCell("A3").value = "Tahun " + e),
                            (r.getCell("A4").value = "Unit Organisasi : " + this.dataSKPD.kode_skpd + " " + this.dataSKPD.nama_skpd),
                            (r.getCell("A5").value = "Sub Unit Organisasi : " + this.dataSKPD.kode_sub_skpd + " " + this.dataSKPD.nama_sub_skpd),
                            r.mergeCells("A6", "E8"),
                            (r.getCell("A6").value = "Kode"),
                            r.mergeCells("F6", "F8"),
                            (r.getCell("F6").value = "Urusan / Bidang Urusan / Program / Kegiatan / Sub Kegiatan"),
                            r.mergeCells("G6", "I6"),
                            (r.getCell("G6").value = "Indikator Kinerja"),
                            r.mergeCells("J6", "O6"),
                            (r.getCell("J6").value = "Rencana Tahun " + e),
                            (r.getCell("P6").value = "Catatan Penting"),
                            r.mergeCells("Q6", "S6"),
                            (r.getCell("Q6").value = "Prakiraan Maju Rencana Tahun " + (e + 1)),
                            r.mergeCells("G7", "G8"),
                            (r.getCell("G7").value = "Capaian Program"),
                            r.mergeCells("H7", "H8"),
                            (r.getCell("H7").value = "Keluaran Sub Kegiatan"),
                            r.mergeCells("I7", "I8"),
                            (r.getCell("I7").value = "Hasil Kegiatan"),
                            r.mergeCells("J7", "J8"),
                            (r.getCell("J7").value = "Lokasi Output Kegiatan"),
                            r.mergeCells("K7", "M7"),
                            (r.getCell("K7").value = "Target Capaian Kinerja"),
                            r.mergeCells("N7", "N8"),
                            (r.getCell("N7").value = "Pagu Indikatif (Rp.)"),
                            r.mergeCells("O7", "O8"),
                            (r.getCell("O7").value = "Sumber Dana"),
                            r.mergeCells("Q7", "R7"),
                            (r.getCell("Q7").value = "Target Capaian Kinerja"),
                            r.mergeCells("S7", "S8"),
                            (r.getCell("S7").value = "Kebutuhan Dana/Pagu Indikatif (Rp.)"),
                            (r.getCell("K8").value = "Program"),
                            (r.getCell("L8").value = "Keluaran Sub Kegiatan"),
                            (r.getCell("M8").value = "Hasil Kegiatan"),
                            (r.getCell("Q8").value = "Tolok Ukur"),
                            (r.getCell("R8").value = "Target"),
                            this.dataTemp1.length > 0)
                        ) {
                            r.columns = [
                                { key: "A", width: 5 },
                                { key: "B", width: 5 },
                                { key: "C", width: 5 },
                                { key: "D", width: 5 },
                                { key: "E", width: 5 },
                                { key: "F", width: 30 },
                                { key: "G", width: 30 },
                                { key: "H", width: 30 },
                                { key: "I", width: 30 },
                                { key: "J", width: 30 },
                                { key: "K", width: 15 },
                                { key: "L", width: 15 },
                                { key: "M", width: 15 },
                                { key: "N", width: 30 },
                                { key: "O", width: 20 },
                                { key: "P", width: 20 },
                                { key: "Q", width: 15 },
                                { key: "R", width: 15 },
                                { key: "S", width: 30 },
                            ];
                            let g,
                                C,
                                h,
                                f,
                                y,
                                B,
                                F = 0,
                                c = 0,
                                b = 9;
                            for (let I = 0; I < this.dataTemp1.length; I++)
                                g != this.dataTemp1[I].id_sub_skpd &&
                                    (r.addRow({
                                        F: this.dataTemp1[I].nama_sub_skpd,
                                        N: new j.H9("id-ID").transform(String(this.dataTemp1[I].total_pagu_indikatif_sub_skpd >= 0 ? this.dataTemp1[I].total_pagu_indikatif_sub_skpd : 0), "", "", "1.2-2"),
                                        S: new j.H9("id-ID").transform(String(this.dataTemp1[I].total_pagu_n_depan_sub_skpd >= 0 ? this.dataTemp1[I].total_pagu_n_depan_sub_skpd : 0), "", "", "1.2-2"),
                                    }),
                                    r.mergeCells("F" + b, "M" + b),
                                    (g = this.dataTemp1[I].id_sub_skpd),
                                    (b += 1),
                                    (C = void 0),
                                    (h = void 0),
                                    (f = void 0),
                                    (y = void 0),
                                    (B = void 0)),
                                    C != this.dataTemp1[I].id_urusan &&
                                        (r.addRow({
                                            A: this.dataTemp1[I].kode_urusan ? this.dataTemp1[I].kode_urusan : "-",
                                            F: this.dataTemp1[I].nama_urusan ? this.dataTemp1[I].nama_urusan : "-",
                                            N: new j.H9("id-ID").transform(String(this.dataTemp1[I].total_pagu_indikatif_urusan >= 0 ? this.dataTemp1[I].total_pagu_indikatif_urusan : 0), "", "", "1.2-2"),
                                            S: new j.H9("id-ID").transform(String(this.dataTemp1[I].total_pagu_n_depan_urusan >= 0 ? this.dataTemp1[I].total_pagu_n_depan_urusan : 0), "", "", "1.2-2"),
                                        }),
                                        r.mergeCells("F" + b, "M" + b),
                                        (C = this.dataTemp1[I].id_urusan),
                                        (b += 1),
                                        (h = void 0),
                                        (f = void 0),
                                        (y = void 0),
                                        (B = void 0)),
                                    h != this.dataTemp1[I].id_bidang_urusan &&
                                        (r.addRow({
                                            A: this.dataTemp1[I].kode_urusan ? this.dataTemp1[I].kode_urusan : "-",
                                            B: this.dataTemp1[I].kode_bidang_urusan ? this.dataTemp1[I].kode_bidang_urusan.split(".")[1] : "-",
                                            F: this.dataTemp1[I].nama_bidang_urusan ? this.dataTemp1[I].nama_bidang_urusan : "-",
                                            N: new j.H9("id-ID").transform(String(this.dataTemp1[I].total_pagu_indikatif_bidang_urusan >= 0 ? this.dataTemp1[I].total_pagu_indikatif_bidang_urusan : 0), "", "", "1.2-2"),
                                            S: new j.H9("id-ID").transform(String(this.dataTemp1[I].total_pagu_n_depan_bidang_urusan >= 0 ? this.dataTemp1[I].total_pagu_n_depan_bidang_urusan : 0), "", "", "1.2-2"),
                                        }),
                                        r.mergeCells("F" + b, "M" + b),
                                        (h = this.dataTemp1[I].id_bidang_urusan),
                                        (b += 1),
                                        (f = void 0),
                                        (y = void 0),
                                        (B = void 0)),
                                    f != this.dataTemp1[I].id_program &&
                                        (r.addRow({
                                            A: this.dataTemp1[I].kode_urusan ? this.dataTemp1[I].kode_urusan : "-",
                                            B: this.dataTemp1[I].kode_bidang_urusan ? this.dataTemp1[I].kode_bidang_urusan.split(".")[1] : "-",
                                            C: this.dataTemp1[I].kode_program ? this.dataTemp1[I].kode_program.split(".")[2] : "-",
                                            F: this.dataTemp1[I].nama_program ? this.dataTemp1[I].nama_program : "-",
                                            N: new j.H9("id-ID").transform(String(this.dataTemp1[I].total_pagu_indikatif_program >= 0 ? this.dataTemp1[I].total_pagu_indikatif_program : 0), "", "", "1.2-2"),
                                            S: new j.H9("id-ID").transform(String(this.dataTemp1[I].total_pagu_n_depan_program >= 0 ? this.dataTemp1[I].total_pagu_n_depan_program : 0), "", "", "1.2-2"),
                                        }),
                                        r.mergeCells("F" + b, "M" + b),
                                        (f = this.dataTemp1[I].id_program),
                                        (b += 1),
                                        (y = void 0),
                                        (B = void 0)),
                                    y != this.dataTemp1[I].id_giat &&
                                        (r.addRow({
                                            A: this.dataTemp1[I].kode_urusan ? this.dataTemp1[I].kode_urusan : "-",
                                            B: this.dataTemp1[I].kode_bidang_urusan ? this.dataTemp1[I].kode_bidang_urusan.split(".")[1] : "-",
                                            C: this.dataTemp1[I].kode_program ? this.dataTemp1[I].kode_program.split(".")[2] : "-",
                                            D: this.dataTemp1[I].kode_giat ? this.dataTemp1[I].kode_giat.split(".")[3] + "." + this.dataTemp1[I].kode_giat.split(".")[4] : "-",
                                            F: this.dataTemp1[I].nama_giat ? this.dataTemp1[I].nama_giat : "-",
                                            N: new j.H9("id-ID").transform(String(this.dataTemp1[I].total_pagu_indikatif_kegiatan >= 0 ? this.dataTemp1[I].total_pagu_indikatif_kegiatan : 0), "", "", "1.2-2"),
                                            S: new j.H9("id-ID").transform(String(this.dataTemp1[I].total_pagu_n_depan_kegiatan >= 0 ? this.dataTemp1[I].total_pagu_n_depan_kegiatan : 0), "", "", "1.2-2"),
                                        }),
                                        r.mergeCells("F" + b, "M" + b),
                                        (y = this.dataTemp1[I].id_giat),
                                        (b += 1)),
                                    B != this.dataTemp1[I].id_sub_giat &&
                                        (r.addRow({
                                            A: this.dataTemp1[I].kode_urusan ? this.dataTemp1[I].kode_urusan : "-",
                                            B: this.dataTemp1[I].kode_bidang_urusan ? this.dataTemp1[I].kode_bidang_urusan.split(".")[1] : "-",
                                            C: this.dataTemp1[I].kode_program ? this.dataTemp1[I].kode_program.split(".")[2] : "-",
                                            D: this.dataTemp1[I].kode_giat ? this.dataTemp1[I].kode_giat.split(".")[3] + "." + this.dataTemp1[I].kode_giat.split(".")[4] : "-",
                                            E: this.dataTemp1[I].kode_sub_giat ? this.dataTemp1[I].kode_sub_giat.split(".")[5] : "-",
                                            F: this.dataTemp1[I].nama_sub_giat ? this.dataTemp1[I].nama_sub_giat : "-",
                                        }),
                                        r.mergeCells("F" + b, "M" + b),
                                        (B = this.dataTemp1[I].id_sub_giat),
                                        (b += 1)),
                                    r.addRow({
                                        G: this.dataTemp1[I].tolak_ukur_capaian ? this.dataTemp1[I].tolak_ukur_capaian : "-",
                                        H: this.dataTemp1[I].tolak_ukur_output ? this.dataTemp1[I].tolak_ukur_output : "-",
                                        I: this.dataTemp1[I].tolok_ukur_sub ? this.dataTemp1[I].tolok_ukur_sub : "-",
                                        J: this.dataTemp1[I].lokasi_bl ? this.dataTemp1[I].lokasi_bl : (this.dataTemp1[I].nama_daerah ? this.dataTemp1[I].nama_daerah : "-") + " Semua Kecamatan, Semua Kel/Desa",
                                        K: this.dataTemp1[I].target_teks_capaian ? this.dataTemp1[I].target_teks_capaian : "-",
                                        L: this.dataTemp1[I].target_teks_output ? this.dataTemp1[I].target_teks_output : "-",
                                        M: this.dataTemp1[I].target_sub_teks ? this.dataTemp1[I].target_sub_teks : "-",
                                        N: new j.H9("id-ID").transform(this.dataTemp1[I].pagu_indikatif, "", "", "1.2-2"),
                                        O: this.dataTemp1[I].nama_dana ? this.dataTemp1[I].nama_dana : "-",
                                        P: "",
                                        Q: this.dataTemp1[I].tolak_ukur_n ? this.dataTemp1[I].tolak_ukur_n : "-",
                                        R: this.dataTemp1[I].target_teks_n ? this.dataTemp1[I].target_teks_n : "-",
                                        S: new j.H9("id-ID").transform(this.dataTemp1[I].pagu_n_depan, "", "", "1.2-2"),
                                    }),
                                    (F += this.dataTemp1[I].pagu_indikatif),
                                    (c += this.dataTemp1[I].pagu_n_depan),
                                    (b += 1);
                            r.mergeCells("A" + b, "M" + b),
                                (r.getCell("A" + b).value = "TOTAL"),
                                (r.getCell("N" + b).value = new j.H9("id-ID").transform(F, "", "", "1.2-2")),
                                r.mergeCells("O" + b, "R" + b),
                                (r.getCell("O" + b).value = ""),
                                (r.getCell("S" + b).value = new j.H9("id-ID").transform(c, "", "", "1.2-2"));
                        }
                        let k = r.rowCount;
                        if (null != k) {
                            for (let g = 6; g <= 8; g++) {
                                let h = 83;
                                for (let f = 65; f <= h; f++)
                                    (r.getCell(String.fromCharCode(f) + g).alignment = { vertical: "middle", horizontal: "center", wrapText: !0 }),
                                        (r.getCell(String.fromCharCode(f) + g).border = { top: { style: "thin" }, left: { style: "thin" }, bottom: { style: "thin" }, right: { style: "thin" } });
                            }
                            for (let g = 9; g <= k; g++) {
                                let h = 83;
                                for (let f = 65; f <= h; f++)
                                    78 == f || 83 == f
                                        ? (r.getCell(String.fromCharCode(f) + g).alignment = { vertical: "top", horizontal: "right", wrapText: !0 })
                                        : f < k
                                        ? (r.getCell(String.fromCharCode(f) + g).alignment = { vertical: "top", horizontal: "left", wrapText: !0 })
                                        : f == k && (r.getCell(String.fromCharCode(f) + g).alignment = { vertical: "top", horizontal: "right", wrapText: !0 }),
                                        (r.getCell(String.fromCharCode(f) + g).border = { top: { style: "thin" }, left: { style: "thin" }, bottom: { style: "thin" }, right: { style: "thin" } });
                            }
                        }
                        (r.getRow(1).height = 20),
                            (r.getRow(1).font = { size: 10, bold: !0 }),
                            (r.getRow(1).alignment = { vertical: "middle", horizontal: "center" }),
                            (r.getRow(2).height = 20),
                            (r.getRow(2).font = { size: 10, bold: !0 }),
                            (r.getRow(2).alignment = { vertical: "middle", horizontal: "center" }),
                            (r.getRow(3).height = 20),
                            (r.getRow(3).font = { size: 10, bold: !0 }),
                            (r.getRow(3).alignment = { vertical: "middle", horizontal: "center" }),
                            (r.getRow(k).font = { bold: !0 }),
                            (r.getRow(k).alignment = { vertical: "middle", horizontal: "right" });
                        let m = "Cetak Renja 1 - " + (null != (null === (t = this.skpd) || void 0 === t ? void 0 : t.nama_skpd) ? this.skpd.nama_skpd : " Per SKPD") + ".xlsx";
                        _.xlsx.writeBuffer(),
                            _.xlsx.writeBuffer().then(function (g) {
                                const C = new Blob([g], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" });
                                dt.saveAs(C, m);
                            });
                    }
                    cetakLampiranRenja() {
                        let n = this.konfigurasiSession.tahun;
                        var s = new Ja.default("l", "mm", [280, 460]);
                        (this.body = []),
                            s.setProperties({ title: "Sistem Informasi Pemerintahan Daerah - Cetak Cascading RENJA " + (null != this.dataTemp1[0] ? this.dataSKPD.nama_skpd : "Per SKPD"), author: "Siemen", creator: "-" }),
                            s.setFontSize(12),
                            s.setFont("helvetica", "bold"),
                            s.text("Program dan Kegiatan Perangkat Daerah", 230, 8, { align: "center" }),
                            s.text(this.nama_daerah, 230, 13, { align: "center" }),
                            s.text("Tahun " + this.konfigurasiSession.tahun, 230, 18, { align: "center" }),
                            s.setFontSize(9),
                            s.setFont("helvetica", "bold"),
                            s.text("Unit Organisasi : " + (null != this.dataTemp1[0] ? this.dataSKPD.kode_skpd : "-") + " " + (null != this.dataTemp1[0] ? this.dataSKPD.nama_skpd : "-"), 14, 25),
                            s.text("Sub Unit Organisasi : " + (null != this.dataTemp1[0] ? this.dataSKPD.kode_sub_skpd : "-") + " " + (null != this.dataTemp1[0] ? this.dataSKPD.nama_sub_skpd : "-"), 14, 29);
                        var o = [];
                        if (this.dataTemp1.length > 0) {
                            this.header = [
                                [
                                    { content: "Kode", colSpan: 5, rowSpan: 3, styles: { cellWidth: 10 } },
                                    { content: "Urusan / Bidang Urusan / Program / Kegiatan / Sub Kegiatan", rowSpan: 3, styles: { cellWidth: 30 } },
                                    { content: "Indikator Kinerja", colSpan: 3 },
                                    { content: "Rencana Tahun " + n, colSpan: 6 },
                                    { content: "Catatan Penting", rowSpan: 3, styles: { cellWidth: 20 } },
                                    { content: "Prakiraan Maju Rencana Tahun " + (n + 1), colSpan: 3 },
                                ],
                                [
                                    { content: "Capaian Program", rowSpan: 2, styles: { cellWidth: 40 } },
                                    { content: "Keluaran Sub Kegiatan", rowSpan: 2, styles: { cellWidth: 40 } },
                                    { content: "Hasil Kegiatan", rowSpan: 2, styles: { cellWidth: 40 } },
                                    { content: "Lokasi Output Kegiatan", rowSpan: 2, styles: { cellWidth: 20 } },
                                    { content: "Target Capaian Kinerja", colSpan: 3 },
                                    { content: "Pagu Indikatif (Rp.)", rowSpan: 2, styles: { cellWidth: 35 } },
                                    { content: "Sumber Dana", styles: { cellWidth: 20 }, rowSpan: 2 },
                                    { content: "Target Capaian Kinerja", colSpan: 2 },
                                    { content: "Kebutuhan Dana/Pagu Indikatif (Rp.)", styles: { cellWidth: 35 }, rowSpan: 2 },
                                ],
                                [
                                    { content: "Program", styles: { cellWidth: 18 } },
                                    { content: "Keluaran Sub Kegiatan", styles: { cellWidth: 18 } },
                                    { content: "Hasil Kegiatan", styles: { cellWidth: 18 } },
                                    { content: "Tolok Ukur", styles: { cellWidth: 20 } },
                                    { content: "Target", styles: { cellWidth: 15 } },
                                ],
                            ];
                            let _,
                                r,
                                u,
                                k,
                                m,
                                v,
                                g = 0,
                                C = 0;
                            for (let h = 0; h < this.dataTemp1.length; h++)
                                _ != this.dataTemp1[h].id_sub_skpd
                                    ? ((this.body = [
                                          [
                                              { content: "", styles: { cellWidth: 10 } },
                                              { content: "", styles: { cellWidth: 10 } },
                                              { content: "", styles: { cellWidth: 10 } },
                                              { content: "", styles: { cellWidth: 10 } },
                                              { content: "", styles: { cellWidth: 10 } },
                                              { content: this.dataTemp1[h].nama_sub_skpd, colSpan: 8, styles: { fontStyle: "bold", cellWidth: 30 } },
                                              {
                                                  content: new j.H9("id-ID").transform(String(this.dataTemp1[h].total_pagu_indikatif_sub_skpd >= 0 ? this.dataTemp1[h].total_pagu_indikatif_sub_skpd : 0), "", "", "1.2-2"),
                                                  styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                              },
                                              { content: "", colSpan: 4 },
                                              {
                                                  content: new j.H9("id-ID").transform(String(this.dataTemp1[h].total_pagu_n_depan_sub_skpd >= 0 ? this.dataTemp1[h].total_pagu_n_depan_sub_skpd : 0), "", "", "1.2-2"),
                                                  styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                              },
                                          ],
                                      ]),
                                      (_ = this.dataTemp1[h].id_sub_skpd),
                                      (r = void 0),
                                      (u = void 0),
                                      (k = void 0),
                                      (m = void 0),
                                      (v = void 0))
                                    : (this.body = []),
                                    _ == this.dataTemp1[h].id_sub_skpd &&
                                        r != this.dataTemp1[h].id_urusan &&
                                        (this.body.push([
                                            { content: this.dataTemp1[h].kode_urusan ? this.dataTemp1[h].kode_urusan : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[h].nama_urusan, colSpan: 8, styles: { fontStyle: "bold", cellWidth: 30 } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[h].total_pagu_indikatif_urusan >= 0 ? this.dataTemp1[h].total_pagu_indikatif_urusan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                            { content: "", colSpan: 4 },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[h].total_pagu_n_depan_urusan >= 0 ? this.dataTemp1[h].total_pagu_n_depan_urusan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                        ]),
                                        (r = this.dataTemp1[h].id_urusan),
                                        (u = void 0),
                                        (k = void 0),
                                        (m = void 0),
                                        (v = void 0)),
                                    u != this.dataTemp1[h].id_bidang_urusan &&
                                        (this.body.push([
                                            { content: this.dataTemp1[h].kode_urusan ? this.dataTemp1[h].kode_urusan : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: this.dataTemp1[h].kode_bidang_urusan ? this.dataTemp1[h].kode_bidang_urusan.split(".")[1] : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[h].nama_bidang_urusan ? this.dataTemp1[h].nama_bidang_urusan : "-", colSpan: 8, styles: { fontStyle: "bold", cellWidth: 30 } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[h].total_pagu_indikatif_bidang_urusan >= 0 ? this.dataTemp1[h].total_pagu_indikatif_bidang_urusan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                            { content: "", colSpan: 4 },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[h].total_pagu_n_depan_bidang_urusan >= 0 ? this.dataTemp1[h].total_pagu_n_depan_bidang_urusan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                        ]),
                                        (u = this.dataTemp1[h].id_bidang_urusan),
                                        (k = void 0),
                                        (m = void 0),
                                        (v = void 0)),
                                    k != this.dataTemp1[h].id_program &&
                                        (this.body.push([
                                            { content: this.dataTemp1[h].kode_urusan ? this.dataTemp1[h].kode_urusan : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: this.dataTemp1[h].kode_bidang_urusan ? this.dataTemp1[h].kode_bidang_urusan.split(".")[1] : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: this.dataTemp1[h].kode_program ? this.dataTemp1[h].kode_program.split(".")[2] : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[h].nama_program ? this.dataTemp1[h].nama_program : "-", colSpan: 8, styles: { fontStyle: "bold", cellWidth: 30 } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[h].total_pagu_indikatif_program >= 0 ? this.dataTemp1[h].total_pagu_indikatif_program : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                            { content: "", colSpan: 4 },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[h].total_pagu_n_depan_program >= 0 ? this.dataTemp1[h].total_pagu_n_depan_program : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                        ]),
                                        (k = this.dataTemp1[h].id_program),
                                        (m = void 0),
                                        (v = void 0)),
                                    m != this.dataTemp1[h].id_giat &&
                                        (this.body.push([
                                            { content: this.dataTemp1[h].kode_urusan ? this.dataTemp1[h].kode_urusan : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: this.dataTemp1[h].kode_bidang_urusan ? this.dataTemp1[h].kode_bidang_urusan.split(".")[1] : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: this.dataTemp1[h].kode_program ? this.dataTemp1[h].kode_program.split(".")[2] : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: this.dataTemp1[h].kode_giat ? this.dataTemp1[h].kode_giat.split(".")[3] + "." + this.dataTemp1[h].kode_giat.split(".")[4] : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[h].nama_giat ? this.dataTemp1[h].nama_giat : "-", colSpan: 8, styles: { fontStyle: "bold", cellWidth: 30 } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[h].total_pagu_indikatif_kegiatan >= 0 ? this.dataTemp1[h].total_pagu_indikatif_kegiatan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                            { content: "", colSpan: 4 },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[h].total_pagu_n_depan_kegiatan >= 0 ? this.dataTemp1[h].total_pagu_n_depan_kegiatan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                        ]),
                                        (m = this.dataTemp1[h].id_giat)),
                                    v != this.dataTemp1[h].id_sub_giat &&
                                        (this.body.push([
                                            { content: this.dataTemp1[h].kode_urusan ? this.dataTemp1[h].kode_urusan : "-", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[h].kode_bidang_urusan ? this.dataTemp1[h].kode_bidang_urusan.split(".")[1] : "-", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[h].kode_program ? this.dataTemp1[h].kode_program.split(".")[2] : "-", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[h].kode_giat ? this.dataTemp1[h].kode_giat.split(".")[3] + "." + this.dataTemp1[h].kode_giat.split(".")[4] : "-", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[h].kode_sub_giat ? this.dataTemp1[h].kode_sub_giat.split(".")[5] : "-", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[h].nama_sub_giat ? this.dataTemp1[h].nama_sub_giat : "-", colSpan: 14, styles: { cellWidth: 30 } },
                                        ]),
                                        (v = this.dataTemp1[h].id_sub_giat)),
                                    this.body.push([
                                        { content: "", styles: { cellWidth: 10 } },
                                        { content: "", styles: { cellWidth: 10 } },
                                        { content: "", styles: { cellWidth: 10 } },
                                        { content: "", styles: { cellWidth: 10 } },
                                        { content: "", styles: { cellWidth: 10 } },
                                        { content: "", styles: { cellWidth: 30 } },
                                        { content: this.dataTemp1[h].tolak_ukur_capaian ? this.dataTemp1[h].tolak_ukur_capaian : "-" },
                                        { content: this.dataTemp1[h].tolak_ukur_output ? this.dataTemp1[h].tolak_ukur_output : "-" },
                                        { content: this.dataTemp1[h].tolok_ukur_sub ? this.dataTemp1[h].tolok_ukur_sub : "-" },
                                        {
                                            content: this.dataTemp1[h].lokasi_bl ? this.dataTemp1[h].lokasi_bl : (this.dataTemp1[h].nama_daerah ? this.dataTemp1[h].nama_daerah : "-") + " Semua Kecamatan, Semua Kel/Desa",
                                            styles: { cellWidth: 30 },
                                        },
                                        { content: this.dataTemp1[h].target_teks_capaian ? this.dataTemp1[h].target_teks_capaian : "-" },
                                        { content: this.dataTemp1[h].target_teks_output ? this.dataTemp1[h].target_teks_output : "-" },
                                        { content: this.dataTemp1[h].target_sub_teks ? this.dataTemp1[h].target_sub_teks : "-" },
                                        { content: new j.H9("id-ID").transform(this.dataTemp1[h].pagu_indikatif, "", "", "1.2-2"), styles: { halign: "right" } },
                                        { content: this.dataTemp1[h].nama_dana ? this.dataTemp1[h].nama_dana : "-" },
                                        { content: "" },
                                        { content: this.dataTemp1[h].tolak_ukur_n ? this.dataTemp1[h].tolak_ukur_n : "-" },
                                        { content: this.dataTemp1[h].target_teks_n ? this.dataTemp1[h].target_teks_n : "-" },
                                        { content: new j.H9("id-ID").transform(this.dataTemp1[h].pagu_n_depan, "", "", "1.2-2"), styles: { halign: "right" } },
                                    ]),
                                    (g += this.dataTemp1[h].pagu_indikatif),
                                    (C += this.dataTemp1[h].pagu_n_depan),
                                    o.push(this.body);
                            this.foot = [
                                [
                                    { content: "TOTAL", colSpan: 13, styles: { fontStyle: "bold" } },
                                    { content: new j.H9("id-ID").transform(String(g), "", "", "1.2-2"), styles: { fontStyle: "bold" } },
                                    { content: "", colSpan: 4 },
                                    { content: new j.H9("id-ID").transform(String(C), "", "", "1.2-2"), styles: { fontStyle: "bold" } },
                                ],
                            ];
                        } else
                            (this.header = [
                                [
                                    { content: "Kode", colSpan: 3, rowSpan: 3, styles: { cellWidth: 30 } },
                                    { content: "Urusan / Bidang Urusan / Program / Kegiatan / Sub Kegiatan", rowSpan: 3, styles: { cellWidth: 30 } },
                                    { content: "Indikator Kinerja", colSpan: 3 },
                                    { content: "Rencana Tahun " + n, colSpan: 6 },
                                    { content: "Catatan Penting", rowSpan: 3, styles: { cellWidth: 15 } },
                                    { content: "Prakiraan Maju Rencana Tahun " + (n + 1), colSpan: 3 },
                                ],
                                [
                                    { content: "Capaian Program", rowSpan: 2, styles: { cellWidth: 40 } },
                                    { content: "Keluaran Sub Kegiatan", rowSpan: 2, styles: { cellWidth: 40 } },
                                    { content: "Hasil Kegiatan", rowSpan: 2, styles: { cellWidth: 40 } },
                                    { content: "Lokasi Output Kegiatan", rowSpan: 2, styles: { cellWidth: 20 } },
                                    { content: "Target Capaian Kinerja", colSpan: 3 },
                                    { content: "Pagu Indikatif (Rp.)", rowSpan: 2, styles: { cellWidth: 25 } },
                                    { content: "Sumber Dana", rowSpan: 2 },
                                    { content: "Target Capaian Kinerja", colSpan: 2 },
                                    { content: "Kebutuhan Dana / Pagu Indikatif (Rp.)", rowSpan: 2 },
                                ],
                                [
                                    { content: "Program", styles: { cellWidth: 18 } },
                                    { content: "Keluaran Sub Kegiatan", styles: { cellWidth: 18 } },
                                    { content: "Hasil Kegiatan", styles: { cellWidth: 18 } },
                                    { content: "Tolok Ukur", styles: { cellWidth: 20 } },
                                    { content: "Target", styles: { cellWidth: 15 } },
                                ],
                            ]),
                                (this.body = [[{ content: "DATA LAPORAN KOSONG", colSpan: 17, styles: { fontStyle: "bold", halign: "center" } }]]),
                                o.push(this.body),
                                (this.foot = [[{ content: "TOTAL", colSpan: 13, styles: { fontStyle: "bold" } }]]);
                        var l = [];
                        for (let _ = 0; _ < o.length; _++) l = l.concat(o[_]);
                        s.autoTable({
                            startY: 31,
                            theme: "grid",
                            body: l,
                            head: this.header,
                            foot: this.foot,
                            showFoot: "lastPage",
                            rowPageBreak: "avoid",
                            styles: { fontSize: 8, textColor: 0 },
                            headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                            bodyStyles: { lineWidth: 0.2, lineColor: 0 },
                            footStyles: { fillColor: 255, valign: "middle", halign: "right", lineWidth: 0.2, lineColor: 0 },
                        }),
                            s.save("Cetak Renja - " + (null != this.dataTemp1[0] ? this.dataTemp1[0].nama_skpd : " Per SKPD") + ".pdf");
                    }
                    cetakLampiranRenjaBangda() {
                        var t, e, n, s, o;
                        let l = this.konfigurasiSession.tahun;
                        var _ = new Ja.default("l", "mm", [280, 480]);
                        (this.body = []),
                            _.setProperties({
                                title:
                                    "Sistem Informasi Pemerintahan Daerah - Cetak Cascading RENJA " +
                                    (null != (null === (t = this.skpd) || void 0 === t ? void 0 : t.nama_skpd) ? (null === (e = this.skpd) || void 0 === e ? void 0 : e.nama_skpd) : "Per SKPD"),
                                author: "Siemen",
                                creator: "-",
                            }),
                            _.setFontSize(12),
                            _.setFont("helvetica", "bold"),
                            _.text("RENCANA KERJA ORGANISASI PERANGKAT DAERAH (RENJA OPD)", 240, 8, { align: "center" }),
                            _.text(
                                (null != (null === (n = this.skpd) || void 0 === n ? void 0 : n.nama_skpd) ? (null === (s = this.skpd) || void 0 === s ? void 0 : s.nama_skpd.toUpperCase()) : "-") +
                                    " " +
                                    (this.nama_daerah ? this.nama_daerah.toUpperCase() : "-"),
                                240,
                                13,
                                { align: "center" }
                            ),
                            _.text("TAHUN " + this.konfigurasiSession.tahun, 240, 18, { align: "center" });
                        var r = [];
                        if (this.dataTemp1.length > 0) {
                            let k,
                                m,
                                v,
                                g,
                                C,
                                h,
                                f,
                                y = 0,
                                B = 0;
                            this.header = [
                                [
                                    { content: "NO", rowSpan: 3, styles: { cellWidth: 10 } },
                                    { content: "KODE", rowSpan: 3, styles: { cellWidth: 30 } },
                                    { content: "URUSAN / BIDANG URUSAN / PROGRAM / KEGIATAN / SUB KEGIATAN", rowSpan: 3, styles: { cellWidth: 40 } },
                                    { content: "INDIKATOR PROGRAM / KEGIATAN / SUB KEGIATAN", rowSpan: 3, styles: { cellWidth: 40 } },
                                    { content: "TARGET AKHIR PERIODE RENSTRA OPD", rowSpan: 3, styles: { cellWidth: 20 } },
                                    { content: "REALISASI CAPAIAN RENJA OPD TAHUN " + (l - 2), rowSpan: 3, styles: { cellWidth: 20 } },
                                    { content: "PRAKIRAAN CAPAIAN TARGET RENJA OPD TAHUN " + (l - 1), rowSpan: 3, styles: { cellWidth: 25 } },
                                    { content: "CAPAIAN KINERJA DAN KERANGKA PENDANAAN", colSpan: 6 },
                                    { content: "KELOMPOK SASARAN", rowSpan: 3, styles: { cellWidth: 30 } },
                                    { content: "PRAKIRAAN MAJU RENCANA\t TAHUN " + (l + 1), colSpan: 2 },
                                    { content: "PERANGKAT DAERAH PENANGGUNG JAWAB", rowSpan: 3 },
                                ],
                                [
                                    { content: "TARGET " + l, rowSpan: 2, styles: { cellWidth: 20 } },
                                    { content: "PAGU INDIKATIF (Rp)", rowSpan: 2, styles: { cellWidth: 35 } },
                                    { content: "LOKASI", rowSpan: 2, styles: { cellWidth: 25 } },
                                    { content: "SUMBER DANA", rowSpan: 2, styles: { cellWidth: 25 } },
                                    { content: "PRIORITAS", colSpan: 2 },
                                    { content: "TARGET", rowSpan: 2, styles: { cellWidth: 20 } },
                                    { content: "PAGU INDIKATIF (Rp)", rowSpan: 2, styles: { cellWidth: 35 } },
                                ],
                                [
                                    { content: "NASIONAL", styles: { cellWidth: 18 } },
                                    { content: "DAERAH", styles: { cellWidth: 18 } },
                                ],
                                [
                                    { content: "1", styles: { fontStyle: "normal" } },
                                    { content: "2", styles: { fontStyle: "normal" } },
                                    { content: "3", styles: { fontStyle: "normal" } },
                                    { content: "4", styles: { fontStyle: "normal" } },
                                    { content: "5", styles: { fontStyle: "normal" } },
                                    { content: "6", styles: { fontStyle: "normal" } },
                                    { content: "7", styles: { fontStyle: "normal" } },
                                    { content: "8", styles: { fontStyle: "normal" } },
                                    { content: "9", styles: { fontStyle: "normal" } },
                                    { content: "10", styles: { fontStyle: "normal" } },
                                    { content: "11", styles: { fontStyle: "normal" } },
                                    { content: "12", styles: { fontStyle: "normal" } },
                                    { content: "13", styles: { fontStyle: "normal" } },
                                    { content: "14", styles: { fontStyle: "normal" } },
                                    { content: "15", styles: { fontStyle: "normal" } },
                                    { content: "16", styles: { fontStyle: "normal" } },
                                    { content: "17", styles: { fontStyle: "normal" } },
                                ],
                            ];
                            let F = 1;
                            for (let c = 0; c < this.dataTemp1.length; c++)
                                k != this.dataTemp1[c].id_sub_skpd
                                    ? ((this.body = [
                                          [
                                              { content: "", styles: { fillColor: "#e6c8fe" } },
                                              { content: "", styles: { fillColor: "#e6c8fe" } },
                                              { content: this.dataTemp1[c].nama_sub_skpd ? this.dataTemp1[c].nama_sub_skpd.toUpperCase() : "-", styles: { fontStyle: "bold", fillColor: "#e6c8fe" }, colSpan: 6 },
                                              {
                                                  content: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_indikatif_sub_skpd ? this.dataTemp1[c].total_pagu_indikatif_sub_skpd : 0), "", "", "1.2-2"),
                                                  styles: { fontStyle: "bold", halign: "right", fillColor: "#e6c8fe" },
                                              },
                                              { content: "", styles: { fillColor: "#e6c8fe" }, colSpan: 6 },
                                              {
                                                  content: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_n_depan_sub_skpd ? this.dataTemp1[c].total_pagu_n_depan_sub_skpd : 0), "", "", "1.2-2"),
                                                  styles: { fontStyle: "bold", halign: "right", fillColor: "#e6c8fe" },
                                              },
                                              { content: "", styles: { fillColor: "#e6c8fe" } },
                                          ],
                                      ]),
                                      (k = this.dataTemp1[c].id_sub_skpd),
                                      (m = void 0),
                                      (v = void 0),
                                      (g = void 0),
                                      (C = void 0),
                                      (h = void 0))
                                    : (this.body = []),
                                    k == this.dataTemp1[c].id_sub_skpd &&
                                        m != this.dataTemp1[c].id_urusan &&
                                        (this.body.push([
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: this.dataTemp1[c].kode_urusan ? this.dataTemp1[c].kode_urusan : "-", styles: { fontStyle: "bold", fillColor: "#f7d4f5" } },
                                            { content: this.dataTemp1[c].nama_urusan ? this.dataTemp1[c].nama_urusan : "-", styles: { fontStyle: "bold", fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_indikatif_urusan ? this.dataTemp1[c].total_pagu_indikatif_urusan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right", fillColor: "#f7d4f5" },
                                            },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_n_depan_urusan ? this.dataTemp1[c].total_pagu_n_depan_urusan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right", fillColor: "#f7d4f5" },
                                            },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                        ]),
                                        (m = this.dataTemp1[c].id_urusan)),
                                    v != this.dataTemp1[c].id_bidang_urusan &&
                                        (this.body.push([
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: this.dataTemp1[c].kode_bidang_urusan ? this.dataTemp1[c].kode_bidang_urusan : "-", styles: { fontStyle: "bold", fillColor: "#d6fced" } },
                                            { content: this.dataTemp1[c].nama_bidang_urusan ? this.dataTemp1[c].nama_bidang_urusan : "-", styles: { fontStyle: "bold", fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_indikatif_bidang_urusan ? this.dataTemp1[c].total_pagu_indikatif_bidang_urusan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right", fillColor: "#d6fced" },
                                            },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_n_depan_bidang_urusan ? this.dataTemp1[c].total_pagu_n_depan_bidang_urusan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right", fillColor: "#d6fced" },
                                            },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                        ]),
                                        (v = this.dataTemp1[c].id_bidang_urusan),
                                        (F = 1)),
                                    g != this.dataTemp1[c].id_program &&
                                        (this.body.push([
                                            { content: F++ + ".", styles: { halign: "center" } },
                                            { content: this.dataTemp1[c].kode_program ? this.dataTemp1[c].kode_program : "-", styles: { fontStyle: "bold" } },
                                            { content: this.dataTemp1[c].nama_program ? this.dataTemp1[c].nama_program : "-", styles: { fontStyle: "bold" } },
                                            { content: this.dataTemp1[c].migrated_at ? "" : this.dataTemp1[c].tolak_ukur_capaian ? this.dataTemp1[c].tolak_ukur_capaian : "-", styles: { fontStyle: "bolditalic" } },
                                            { content: this.dataTemp1[c].migrated_at ? "" : this.dataTemp1[c].target_akhir_program_renstra ? this.dataTemp1[c].target_akhir_program_renstra : "-", styles: { fontStyle: "bold" } },
                                            { content: "" },
                                            { content: "" },
                                            { content: this.dataTemp1[c].migrated_at ? "" : this.dataTemp1[c].target_teks_capaian ? this.dataTemp1[c].target_teks_capaian : "-", styles: { fontStyle: "bold" } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_indikatif_program ? this.dataTemp1[c].total_pagu_indikatif_program : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                            { content: "" },
                                            { content: "" },
                                            { content: "" },
                                            { content: "" },
                                            { content: "" },
                                            { content: this.dataTemp1[c].migrated_at ? "" : this.dataTemp1[c].target_n_program_renstra ? this.dataTemp1[c].target_n_program_renstra : "-", styles: { fontStyle: "bold" } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_n_depan_program ? this.dataTemp1[c].total_pagu_n_depan_program : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                            { content: "" },
                                        ]),
                                        (g = this.dataTemp1[c].id_program)),
                                    C != this.dataTemp1[c].id_giat &&
                                        (this.body.push([
                                            { content: "" },
                                            { content: this.dataTemp1[c].kode_giat ? this.dataTemp1[c].kode_giat : "-" },
                                            { content: this.dataTemp1[c].nama_giat ? this.dataTemp1[c].nama_giat : "-" },
                                            { content: this.dataTemp1[c].migrated_at ? "" : this.dataTemp1[c].tolok_ukur_sub ? this.dataTemp1[c].tolok_ukur_sub : "-", styles: { fontStyle: "italic" } },
                                            { content: this.dataTemp1[c].migrated_at ? "" : this.dataTemp1[c].target_akhir_giat_renstra ? this.dataTemp1[c].target_akhir_giat_renstra : "-" },
                                            { content: "" },
                                            { content: "" },
                                            { content: this.dataTemp1[c].migrated_at ? "" : this.dataTemp1[c].target_sub_teks ? this.dataTemp1[c].target_sub_teks : "-" },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_indikatif_kegiatan ? this.dataTemp1[c].total_pagu_indikatif_kegiatan : 0), "", "", "1.2-2"),
                                                styles: { cellWidth: 8, halign: "right" },
                                            },
                                            { content: "" },
                                            { content: "" },
                                            { content: this.dataTemp1[c].label_pusat ? this.dataTemp1[c].label_pusat : "-" },
                                            {
                                                content:
                                                    this.dataTemp1[c].label_prov || this.dataTemp1[c].label_kokab
                                                        ? (this.dataTemp1[c].label_prov ? this.dataTemp1[c].label_prov + "\n" : "") + (this.dataTemp1[c].label_kokab ? this.dataTemp1[c].label_kokab : "")
                                                        : "-",
                                            },
                                            { content: this.dataTemp1[c].kelompok_sasaran ? this.dataTemp1[c].kelompok_sasaran : "-" },
                                            { content: this.dataTemp1[c].migrated_at ? "" : this.dataTemp1[c].target_n_giat_renstra ? this.dataTemp1[c].target_n_giat_renstra : "-" },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_n_depan_kegiatan ? this.dataTemp1[c].total_pagu_n_depan_kegiatan : 0), "", "", "1.2-2"),
                                                styles: { cellWidth: 8, halign: "right" },
                                            },
                                            { content: this.dataTemp1[c].nama_skpd ? this.dataTemp1[c].nama_skpd.toUpperCase() : "-" },
                                        ]),
                                        (C = this.dataTemp1[c].id_giat)),
                                    h != this.dataTemp1[c].id_sub_giat &&
                                        (this.body.push([
                                            { content: "" },
                                            { content: this.dataTemp1[c].kode_sub_giat ? this.dataTemp1[c].kode_sub_giat : "-" },
                                            { content: this.dataTemp1[c].nama_sub_giat ? this.dataTemp1[c].nama_sub_giat : "-", colSpan: 15 },
                                        ]),
                                        (y += this.dataTemp1[c].pagu_indikatif),
                                        (B += this.dataTemp1[c].pagu_n_depan),
                                        (h = this.dataTemp1[c].id_sub_giat)),
                                    f != this.dataTemp1[c].id_output_bl &&
                                        (this.body.push([
                                            { content: "" },
                                            { content: "" },
                                            { content: "" },
                                            { content: this.dataTemp1[c].tolak_ukur_output ? this.dataTemp1[c].tolak_ukur_output : "-", styles: { fontStyle: "italic" } },
                                            { content: this.dataTemp1[c].migrated_at ? "" : this.dataTemp1[c].target_akhir_sub_giat_renstra ? this.dataTemp1[c].target_akhir_sub_giat_renstra : "-" },
                                            { content: "" },
                                            { content: "" },
                                            { content: this.dataTemp1[c].target_teks_output ? this.dataTemp1[c].target_teks_output : "-" },
                                            { content: new j.H9("id-ID").transform(String(this.dataTemp1[c].pagu_indikatif ? this.dataTemp1[c].pagu_indikatif : 0), "", "", "1.2-2"), styles: { cellWidth: 8, halign: "right" } },
                                            { content: this.dataTemp1[c].lokasi_bl ? this.dataTemp1[c].lokasi_bl : "-" },
                                            { content: this.dataTemp1[c].nama_dana ? this.dataTemp1[c].nama_dana.toUpperCase() : "-" },
                                            { content: this.dataTemp1[c].label_pusat ? this.dataTemp1[c].label_pusat : "-" },
                                            {
                                                content:
                                                    this.dataTemp1[c].label_prov || this.dataTemp1[c].label_kokab
                                                        ? (this.dataTemp1[c].label_prov ? this.dataTemp1[c].label_prov + "\n" : "") + (this.dataTemp1[c].label_kokab ? this.dataTemp1[c].label_kokab : "")
                                                        : "-",
                                            },
                                            { content: this.dataTemp1[c].kelompok_sasaran ? this.dataTemp1[c].kelompok_sasaran : "-" },
                                            { content: this.dataTemp1[c].migrated_at ? "" : this.dataTemp1[c].target_n_sub_giat_renstra ? this.dataTemp1[c].target_n_sub_giat_renstra : "-" },
                                            { content: new j.H9("id-ID").transform(String(this.dataTemp1[c].pagu_n_depan ? this.dataTemp1[c].pagu_n_depan : 0), "", "", "1.2-2"), styles: { cellWidth: 8, halign: "right" } },
                                            { content: this.dataTemp1[c].nama_skpd ? this.dataTemp1[c].nama_skpd.toUpperCase() : "-" },
                                        ]),
                                        (f = this.dataTemp1[c].id_output_bl)),
                                    r.push(this.body);
                            this.foot = [
                                [
                                    { content: "" },
                                    { content: "J U M L A H", colSpan: 7, styles: { halign: "center", fontStyle: "bold" } },
                                    { content: new j.H9("id-ID").transform(String(y || 0), "", "", "1.2-2"), styles: { fontStyle: "bold" } },
                                    { content: "", colSpan: 6 },
                                    { content: new j.H9("id-ID").transform(String(B || 0), "", "", "1.2-2"), styles: { fontStyle: "bold" } },
                                ],
                            ];
                        } else
                            (this.header = [
                                [
                                    { content: "NO", rowSpan: 3, styles: { cellWidth: 10 } },
                                    { content: "KODE", rowSpan: 3, styles: { cellWidth: 30 } },
                                    { content: "URUSAN / BIDANG URUSAN / PROGRAM / KEGIATAN / SUB KEGIATAN", rowSpan: 3, styles: { cellWidth: 40 } },
                                    { content: "INDIKATOR PROGRAM / KEGIATAN / SUB KEGIATAN", rowSpan: 3, styles: { cellWidth: 40 } },
                                    { content: "TARGET AKHIR PERIODE RENSTRA OPD", rowSpan: 3, styles: { cellWidth: 20 } },
                                    { content: "REALISASI CAPAIAN RENJA OPD TAHUN " + (l - 2), rowSpan: 3, styles: { cellWidth: 20 } },
                                    { content: "PRAKIRAAN CAPAIAN TARGET RENJA OPD TAHUN " + (l - 1), rowSpan: 3, styles: { cellWidth: 25 } },
                                    { content: "CAPAIAN KINERJA DAN KERANGKA PENDANAAN", colSpan: 6 },
                                    { content: "KELOMPOK SASARAN", rowSpan: 3, styles: { cellWidth: 30 } },
                                    { content: "PRAKIRAAN MAJU RENCANA\t TAHUN " + (l + 1), colSpan: 2 },
                                    { content: "PERANGKAT DAERAH PENANGGUNG JAWAB", rowSpan: 3 },
                                ],
                                [
                                    { content: "TARGET " + l, rowSpan: 2, styles: { cellWidth: 20 } },
                                    { content: "PAGU INDIKATIF (Rp)", rowSpan: 2, styles: { cellWidth: 35 } },
                                    { content: "LOKASI", rowSpan: 2, styles: { cellWidth: 25 } },
                                    { content: "SUMBER DANA", rowSpan: 2, styles: { cellWidth: 25 } },
                                    { content: "PRIORITAS", colSpan: 2 },
                                    { content: "TARGET", rowSpan: 2, styles: { cellWidth: 20 } },
                                    { content: "PAGU INDIKATIF (Rp)", rowSpan: 2, styles: { cellWidth: 35 } },
                                ],
                                [
                                    { content: "NASIONAL", styles: { cellWidth: 18 } },
                                    { content: "DAERAH", styles: { cellWidth: 18 } },
                                ],
                                ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17"],
                            ]),
                                (this.body = [[{ content: "DATA LAPORAN KOSONG", colSpan: 17, styles: { fontStyle: "bold", halign: "center" } }]]),
                                r.push(this.body),
                                (this.foot = [[{ content: "" }, { content: "J U M L A H", colSpan: 7, styles: { halign: "center", fontStyle: "bold" } }, { content: "" }, { content: "", colSpan: 6 }, { content: "" }]]);
                        var u = [];
                        for (let k = 0; k < r.length; k++) u = u.concat(r[k]);
                        _.autoTable({
                            startY: 22,
                            theme: "grid",
                            body: u,
                            head: this.header,
                            foot: this.foot,
                            showFoot: "lastPage",
                            rowPageBreak: "avoid",
                            styles: { fontSize: 8, textColor: 0 },
                            headStyles: { fillColor: "#f5f5f5", valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                            bodyStyles: { lineWidth: 0.2, lineColor: 0 },
                            footStyles: { fillColor: "#f5f5f5", valign: "middle", halign: "right", lineWidth: 0.2, lineColor: 0 },
                        }),
                            _.save("Cetak Renja - " + (null != (null === (o = this.skpd) || void 0 === o ? void 0 : o.nama_skpd) ? this.skpd.nama_skpd : " Per SKPD") + ".pdf");
                    }
                    cetakLampiranRenjaBangdaExcel() {
                        var t, e, n;
                        let s = this.konfigurasiSession.tahun,
                            o = new ut.Workbook();
                        var l = o.addWorksheet("Sheet 1");
                        l.mergeCells("A1", "U1"),
                            (l.getCell("A1").value = "RENCANA KERJA ORGANISASI PERANGKAT DAERAH (RENJA OPD)"),
                            l.mergeCells("A2", "U2"),
                            (l.getCell("A2").value =
                                (null != (null === (t = this.skpd) || void 0 === t ? void 0 : t.nama_skpd) ? (null === (e = this.skpd) || void 0 === e ? void 0 : e.nama_skpd.toUpperCase()) : "-") + this.nama_daerah.toUpperCase()),
                            l.mergeCells("A3", "U3"),
                            (l.getCell("A3").value = "TAHUN " + s),
                            l.mergeCells("A6", "A8"),
                            (l.getCell("A6").value = "No"),
                            (l.getCell("A9").value = "1"),
                            l.mergeCells("B6", "F8"),
                            (l.getCell("B6").value = "Kode"),
                            l.mergeCells("B9", "F9"),
                            (l.getCell("B9").value = "2"),
                            l.mergeCells("G6", "G8"),
                            (l.getCell("G6").value = "Urusan / Bidang Urusan / Program / Kegiatan / Sub Kegiatan"),
                            (l.getCell("G9").value = "3"),
                            l.mergeCells("H6", "H8"),
                            (l.getCell("H6").value = "Indikator Program / Kegiatan / Sub Kegiatan"),
                            (l.getCell("H9").value = "4"),
                            l.mergeCells("I6", "I8"),
                            (l.getCell("I6").value = "Target Akhir Periode Renstra OPD"),
                            (l.getCell("I9").value = "5"),
                            l.mergeCells("J6", "J8"),
                            (l.getCell("J6").value = "Realisasi Capaian RENJA OPD Tahun " + (s - 2)),
                            (l.getCell("J9").value = "6"),
                            l.mergeCells("K6", "K8"),
                            (l.getCell("K6").value = "Prakiraan Capaian Target RENJA OPD Tahun " + (s - 1)),
                            (l.getCell("K9").value = "7"),
                            l.mergeCells("L6", "Q6"),
                            (l.getCell("L6").value = "Capaian Kinerja Dan Kerangka Pendanaan"),
                            l.mergeCells("L7", "L8"),
                            (l.getCell("L7").value = "Target " + s),
                            (l.getCell("L9").value = "8"),
                            l.mergeCells("M7", "M8"),
                            (l.getCell("M7").value = "Pagu Indikatif (Rp)"),
                            (l.getCell("M9").value = "9"),
                            l.mergeCells("N7", "N8"),
                            (l.getCell("N7").value = "Lokasi"),
                            (l.getCell("N9").value = "10"),
                            l.mergeCells("O7", "O8"),
                            (l.getCell("O7").value = "Sumber Dana"),
                            (l.getCell("O9").value = "11"),
                            l.mergeCells("P7", "Q7"),
                            (l.getCell("P7").value = "Prioritas"),
                            (l.getCell("P8").value = "Nasional"),
                            (l.getCell("P9").value = "12"),
                            (l.getCell("Q8").value = "Daerah"),
                            (l.getCell("Q9").value = "13"),
                            l.mergeCells("R6", "R8"),
                            (l.getCell("R6").value = "Kelompok Sasaran"),
                            (l.getCell("R9").value = "14"),
                            l.mergeCells("S6", "T6"),
                            (l.getCell("S6").value = "Prakiraan Maju Rencana Tahun " + (s - 1)),
                            l.mergeCells("S7", "S8"),
                            (l.getCell("S7").value = "Target"),
                            (l.getCell("S9").value = "15"),
                            l.mergeCells("T7", "T8"),
                            (l.getCell("T7").value = "Pagu Indikatif (Rp)"),
                            (l.getCell("T9").value = "16"),
                            l.mergeCells("U6", "U8"),
                            (l.getCell("U6").value = "Perangkat Daerah Penanggung Jawab"),
                            (l.getCell("U9").value = "17");
                        var _ = [];
                        if (this.dataTemp1.length > 0) {
                            l.columns = [
                                { key: "A", width: 5 },
                                { key: "B", width: 5 },
                                { key: "C", width: 5 },
                                { key: "D", width: 5 },
                                { key: "E", width: 5 },
                                { key: "F", width: 5 },
                                { key: "G", width: 30 },
                                { key: "H", width: 30 },
                                { key: "I", width: 15 },
                                { key: "J", width: 15 },
                                { key: "K", width: 15 },
                                { key: "L", width: 15 },
                                { key: "M", width: 25 },
                                { key: "N", width: 20 },
                                { key: "O", width: 22 },
                                { key: "P", width: 25 },
                                { key: "Q", width: 25 },
                                { key: "R", width: 20 },
                                { key: "S", width: 15 },
                                { key: "T", width: 25 },
                                { key: "U", width: 25 },
                            ];
                            let m,
                                v,
                                g,
                                C,
                                h,
                                f,
                                y,
                                B = 0,
                                F = 0,
                                c = 1,
                                b = 10,
                                I = 1;
                            for (let x = 0; x < this.dataTemp1.length; x++)
                                m != this.dataTemp1[x].id_sub_skpd &&
                                    (l.addRow({
                                        G: this.dataTemp1[x].nama_sub_skpd,
                                        M: new j.H9("id-ID").transform(String(this.dataTemp1[x].total_pagu_indikatif_sub_skpd >= 0 ? this.dataTemp1[x].total_pagu_indikatif_sub_skpd : 0), "", "", "1.2-2"),
                                        T: new j.H9("id-ID").transform(String(this.dataTemp1[x].total_pagu_n_depan_sub_skpd >= 0 ? this.dataTemp1[x].total_pagu_n_depan_sub_skpd : 0), "", "", "1.2-2"),
                                    }),
                                    l.mergeCells("G" + b, "L" + b),
                                    l.mergeCells("N" + b, "S" + b),
                                    (m = this.dataTemp1[x].id_sub_skpd),
                                    (b += 1),
                                    (v = void 0),
                                    (g = void 0),
                                    (C = void 0),
                                    (h = void 0),
                                    (f = void 0)),
                                    v != this.dataTemp1[x].id_urusan &&
                                        (l.addRow({
                                            B: this.dataTemp1[x].kode_urusan ? this.dataTemp1[x].kode_urusan : "-",
                                            G: this.dataTemp1[x].nama_urusan ? this.dataTemp1[x].nama_urusan : "-",
                                            M: new j.H9("id-ID").transform(String(this.dataTemp1[x].total_pagu_indikatif_urusan ? this.dataTemp1[x].total_pagu_indikatif_urusan : 0), "", "", "1.2-2"),
                                            T: new j.H9("id-ID").transform(String(this.dataTemp1[x].total_pagu_n_depan_urusan ? this.dataTemp1[x].total_pagu_n_depan_urusan : 0), "", "", "1.2-2"),
                                        }),
                                        l.mergeCells("G" + b, "L" + b),
                                        (v = this.dataTemp1[x].id_urusan),
                                        (b += 1),
                                        (g = void 0),
                                        (C = void 0),
                                        (h = void 0),
                                        (f = void 0),
                                        (I = 1)),
                                    g != this.dataTemp1[x].id_bidang_urusan &&
                                        (l.addRow({
                                            B: this.dataTemp1[x].kode_urusan ? this.dataTemp1[x].kode_urusan : "-",
                                            C: this.dataTemp1[x].kode_bidang_urusan ? this.dataTemp1[x].kode_bidang_urusan.split(".")[1] : "-",
                                            G: this.dataTemp1[x].nama_bidang_urusan ? this.dataTemp1[x].nama_bidang_urusan : "-",
                                            M: new j.H9("id-ID").transform(String(this.dataTemp1[x].total_pagu_indikatif_bidang_urusan ? this.dataTemp1[x].total_pagu_indikatif_bidang_urusan : 0), "", "", "1.2-2"),
                                            T: new j.H9("id-ID").transform(String(this.dataTemp1[x].total_pagu_n_depan_bidang_urusan ? this.dataTemp1[x].total_pagu_n_depan_bidang_urusan : 0), "", "", "1.2-2"),
                                        }),
                                        l.mergeCells("G" + b, "L" + b),
                                        (b += 1),
                                        (g = this.dataTemp1[x].id_bidang_urusan),
                                        (C = void 0),
                                        (h = void 0),
                                        (f = void 0),
                                        (I = 1)),
                                    C != this.dataTemp1[x].id_program &&
                                        (l.addRow({
                                            A: c,
                                            B: this.dataTemp1[x].kode_urusan ? this.dataTemp1[x].kode_urusan : "-",
                                            C: this.dataTemp1[x].kode_bidang_urusan ? this.dataTemp1[x].kode_bidang_urusan.split(".")[1] : "-",
                                            D: this.dataTemp1[x].kode_program ? this.dataTemp1[x].kode_program.split(".")[2] : "-",
                                            G: this.dataTemp1[x].nama_program ? this.dataTemp1[x].nama_program : "-",
                                            H: this.dataTemp1[x].tolak_ukur_capaian ? this.dataTemp1[x].tolak_ukur_capaian : "-",
                                            I: this.dataTemp1[x].target_akhir_program_renstra ? this.dataTemp1[x].target_akhir_program_renstra : "-",
                                            J: "",
                                            K: "",
                                            L: this.dataTemp1[x].target_teks_capaian ? this.dataTemp1[x].target_teks_capaian : "-",
                                            M: new j.H9("id-ID").transform(String(this.dataTemp1[x].total_pagu_indikatif_program ? this.dataTemp1[x].total_pagu_indikatif_program : 0), "", "", "1.2-2"),
                                            N: "",
                                            O: "",
                                            P: "",
                                            Q: "",
                                            R: "",
                                            S: this.dataTemp1[x].target_n_program_renstra ? this.dataTemp1[x].target_n_program_renstra : "-",
                                            T: new j.H9("id-ID").transform(String(this.dataTemp1[x].total_pagu_n_depan_program ? this.dataTemp1[x].total_pagu_n_depan_program : 0), "", "", "1.2-2"),
                                            U: "",
                                        }),
                                        (C = this.dataTemp1[x].id_program),
                                        (b += 1),
                                        (c += 1),
                                        (h = void 0),
                                        (f = void 0)),
                                    h != this.dataTemp1[x].id_giat &&
                                        (l.addRow({
                                            B: this.dataTemp1[x].kode_urusan ? this.dataTemp1[x].kode_urusan : "-",
                                            C: this.dataTemp1[x].kode_bidang_urusan ? this.dataTemp1[x].kode_bidang_urusan.split(".")[1] : "-",
                                            D: this.dataTemp1[x].kode_program ? this.dataTemp1[x].kode_program.split(".")[2] : "-",
                                            E: this.dataTemp1[x].kode_giat ? this.dataTemp1[x].kode_giat.split(".")[3] + "." + this.dataTemp1[x].kode_giat.split(".")[4] : "-",
                                            G: this.dataTemp1[x].nama_giat ? this.dataTemp1[x].nama_giat : "-",
                                            H: this.dataTemp1[x].tolok_ukur_sub ? this.dataTemp1[x].tolok_ukur_sub : "-",
                                            I: this.dataTemp1[x].target_akhir_giat_renstra ? this.dataTemp1[x].target_akhir_giat_renstra : "-",
                                            J: "",
                                            K: "",
                                            L: this.dataTemp1[x].target_sub_teks ? this.dataTemp1[x].target_sub_teks : "-",
                                            M: new j.H9("id-ID").transform(String(this.dataTemp1[x].total_pagu_indikatif_kegiatan ? this.dataTemp1[x].total_pagu_indikatif_kegiatan : 0), "", "", "1.2-2"),
                                            N: "",
                                            O: "",
                                            P: this.dataTemp1[x].label_pusat ? this.dataTemp1[x].label_pusat : "-",
                                            Q:
                                                this.dataTemp1[x].label_prov || this.dataTemp1[x].label_kokab
                                                    ? (this.dataTemp1[x].label_prov ? this.dataTemp1[x].label_prov + "\n" : "") + (this.dataTemp1[x].label_kokab ? this.dataTemp1[x].label_kokab : "")
                                                    : "-",
                                            R: this.dataTemp1[x].kelompok_sasaran ? this.dataTemp1[x].kelompok_sasaran : "-",
                                            S: this.dataTemp1[x].target_n_giat_renstra ? this.dataTemp1[x].target_n_giat_renstra : "-",
                                            T: new j.H9("id-ID").transform(String(this.dataTemp1[x].total_pagu_n_depan_kegiatan ? this.dataTemp1[x].total_pagu_n_depan_kegiatan : 0), "", "", "1.2-2"),
                                            U: "",
                                        }),
                                        (h = this.dataTemp1[x].id_giat),
                                        (b += 1),
                                        (f = void 0)),
                                    f != this.dataTemp1[x].id_sub_giat &&
                                        (l.addRow({
                                            B: this.dataTemp1[x].kode_urusan ? this.dataTemp1[x].kode_urusan : "-",
                                            C: this.dataTemp1[x].kode_bidang_urusan ? this.dataTemp1[x].kode_bidang_urusan.split(".")[1] : "-",
                                            D: this.dataTemp1[x].kode_program ? this.dataTemp1[x].kode_program.split(".")[2] : "-",
                                            E: this.dataTemp1[x].kode_giat ? this.dataTemp1[x].kode_giat.split(".")[3] + "." + this.dataTemp1[x].kode_giat.split(".")[4] : "-",
                                            F: this.dataTemp1[x].kode_sub_giat ? this.dataTemp1[x].kode_sub_giat.split(".")[5] : "-",
                                            G: this.dataTemp1[x].nama_sub_giat ? this.dataTemp1[x].nama_sub_giat : "-",
                                        }),
                                        l.mergeCells("G" + b, "U" + b),
                                        (B += this.dataTemp1[x].pagu_indikatif),
                                        (F += this.dataTemp1[x].pagu_n_depan),
                                        (f = this.dataTemp1[x].id_sub_giat),
                                        (b += 1)),
                                    y != this.dataTemp1[x].id_output_bl &&
                                        (l.addRow({
                                            B: "",
                                            C: "",
                                            D: "",
                                            E: "",
                                            G: "",
                                            H: this.dataTemp1[x].tolak_ukur_output ? this.dataTemp1[x].tolak_ukur_output : "-",
                                            I: this.dataTemp1[x].target_akhir_sub_giat_renstra ? this.dataTemp1[x].target_akhir_sub_giat_renstra : "-",
                                            J: "",
                                            K: "",
                                            L: this.dataTemp1[x].target_teks_output ? this.dataTemp1[x].target_teks_output : "-",
                                            M: new j.H9("id-ID").transform(String(this.dataTemp1[x].pagu_indikatif ? this.dataTemp1[x].pagu_indikatif : 0), "", "", "1.2-2"),
                                            N: this.dataTemp1[x].lokasi_bl ? this.dataTemp1[x].lokasi_bl : "-",
                                            O: this.dataTemp1[x].nama_dana ? this.dataTemp1[x].nama_dana.toUpperCase() : "-",
                                            P: this.dataTemp1[x].label_pusat ? this.dataTemp1[x].label_pusat : "-",
                                            Q:
                                                this.dataTemp1[x].label_prov || this.dataTemp1[x].label_kokab
                                                    ? (this.dataTemp1[x].label_prov ? this.dataTemp1[x].label_prov + "\n" : "") + (this.dataTemp1[x].label_kokab ? this.dataTemp1[x].label_kokab : "")
                                                    : "-",
                                            R: this.dataTemp1[x].kelompok_sasaran ? this.dataTemp1[x].kelompok_sasaran : "-",
                                            S: this.dataTemp1[x].target_n_sub_giat_renstra ? this.dataTemp1[x].target_n_sub_giat_renstra : "-",
                                            T: new j.H9("id-ID").transform(String(this.dataTemp1[x].pagu_n_depan ? this.dataTemp1[x].pagu_n_depan : 0), "", "", "1.2-2"),
                                            U: this.dataTemp1[x].nama_skpd ? this.dataTemp1[x].nama_skpd.toUpperCase() : "-",
                                        }),
                                        (y = this.dataTemp1[x].id_output_bl),
                                        (b += 1)),
                                    _.push(this.body);
                            l.mergeCells("B" + b, "L" + b),
                                (l.getCell("A" + b).value = ""),
                                (l.getCell("B" + b).value = "J U M L A H"),
                                (l.getCell("M" + b).value = new j.H9("id-ID").transform(String(B || 0), "", "", "1.2-2")),
                                l.mergeCells("N" + b, "S" + b),
                                (l.getCell("N" + b).value = ""),
                                (l.getCell("T" + b).value = new j.H9("id-ID").transform(String(F || 0), "", "", "1.2-2"));
                        }
                        let r = l.rowCount;
                        if (null != r) {
                            for (let m = 6; m <= 9; m++) {
                                let g = 85;
                                for (let C = 65; C <= g; C++)
                                    (l.getCell(String.fromCharCode(C) + m).alignment = { vertical: "middle", horizontal: "center", wrapText: !0 }),
                                        (l.getCell(String.fromCharCode(C) + m).border = { top: { style: "thin" }, left: { style: "thin" }, bottom: { style: "thin" }, right: { style: "thin" } });
                            }
                            for (let m = 10; m <= r; m++) {
                                let g = 85;
                                for (let C = 65; C <= g; C++)
                                    m < r
                                        ? (l.getCell(String.fromCharCode(C) + m).alignment = { vertical: "top", horizontal: "left", wrapText: !0 })
                                        : m == r && (l.getCell(String.fromCharCode(C) + m).alignment = { vertical: "top", horizontal: "right", wrapText: !0 }),
                                        (l.getCell(String.fromCharCode(C) + m).border = { top: { style: "thin" }, left: { style: "thin" }, bottom: { style: "thin" }, right: { style: "thin" } });
                            }
                        }
                        (l.getRow(1).height = 20),
                            (l.getRow(1).font = { size: 10, bold: !0 }),
                            (l.getRow(1).alignment = { vertical: "middle", horizontal: "center" }),
                            (l.getRow(2).height = 20),
                            (l.getRow(2).font = { size: 10, bold: !0 }),
                            (l.getRow(2).alignment = { vertical: "middle", horizontal: "center" }),
                            (l.getRow(3).height = 20),
                            (l.getRow(3).font = { size: 10, bold: !0 }),
                            (l.getRow(3).alignment = { vertical: "middle", horizontal: "center" }),
                            this.dataTemp1.length > 0 && ((l.getRow(r).font = { bold: !0 }), (l.getRow(r).alignment = { vertical: "middle", horizontal: "right" }));
                        let u = "Cetak Renja 2 - " + (null != (null === (n = this.skpd) || void 0 === n ? void 0 : n.nama_skpd) ? this.skpd.nama_skpd : " Per SKPD") + ".xlsx";
                        o.xlsx.writeBuffer(),
                            o.xlsx.writeBuffer().then(function (m) {
                                const v = new Blob([m], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" });
                                dt.saveAs(v, u);
                            });
                    }
                    getDataLampiranKuaPpas(t) {
                        var e, n;
                        this.isLoading = !0;
                        const s = new FormData();
                        s.append("id_daerah", this.userSession.daerah_id),
                            s.append("tahun", this.konfigurasiSession.tahun),
                            s.append("id_skpd", String((null === (e = this.skpd) || void 0 === e ? void 0 : e.id_skpd) || 0)),
                            s.append("id_sub_skpd", String((null === (n = this.skpd) || void 0 === n ? void 0 : n.id_unit) || 0)),
                            this.dataTemp2
                                ? (this.cetakLampiranKuaPpas(), (this.isLoading = !1))
                                : (this.SubLaporan = this.laporanService.listDataLampiranKuaPpas(s).subscribe({
                                      next: (o) => {
                                          (this.dataTemp2 = o.data), this.cetakLampiranKuaPpas(), (this.isLoading = !1);
                                      },
                                      error: (o) => {
                                          this.toastr.error("Data Laporan Gagal DiLoad", "Error!", { positionClass: "toast-top-right", closeButton: !0, progressBar: !0 }), (this.isLoading = !1);
                                      },
                                  }));
                    }
                    cetakLampiranKuaPpas() {
                        let n = this.konfigurasiSession.tahun;
                        var s = new Ja.default("l", "mm", [280, 400]);
                        (this.body = []),
                            s.setProperties({ title: "Sistem Informasi Pemerintahan Daerah - Cetak KUA-PPAS", author: "Siemen", creator: "-" }),
                            s.setFontSize(12),
                            s.setFont("helvetica", "bold"),
                            s.text("Prioritas dan Plafon Anggaran Sementara Tahun " + n, 200, 8, { align: "center" }),
                            s.text(this.nama_daerah, 200, 13, { align: "center" }),
                            s.setFontSize(9),
                            s.setFont("helvetica", "bold"),
                            s.text("Unit Organisasi : " + (null != this.dataTemp2[0] ? this.dataTemp2[0].kode_skpd : "-") + " " + (null != this.dataTemp2[0] ? this.dataTemp2[0].nama_skpd : "-"), 14, 25),
                            s.text("Sub Unit Organisasi : " + (null != this.dataTemp2[0] ? this.dataTemp2[0].kode_skpd : "-") + " " + (null != this.dataTemp2[0] ? this.dataTemp2[0].nama_skpd : "-"), 14, 29);
                        var o = [];
                        if (this.dataTemp2.length > 0) {
                            this.header = [
                                [
                                    { content: "Kode", colSpan: 5, rowSpan: 2, styles: { cellWidth: 10 } },
                                    { content: "Program / Kegiatan", rowSpan: 2 },
                                    { content: "Sasaran Program", colSpan: 2 },
                                    { content: "Sasaran Kegiatan", colSpan: 4 },
                                    { content: "Lokasi Kegiatan", rowSpan: 2 },
                                    { content: "Plafon Anggaran Sementara (Rp.)", rowSpan: 2 },
                                    { content: "Keterangan", rowSpan: 2 },
                                ],
                                [{ content: "Indikator Kinerja" }, { content: "Target" }, { content: "Output Kegiatan" }, { content: "Target" }, { content: "Outcome Kegiatan" }, { content: "Target" }],
                            ];
                            let _,
                                r,
                                u,
                                k = 0,
                                m = 0,
                                v = 0,
                                g = 0,
                                C = 0;
                            for (let h = 0; h < this.dataTemp2.length; h++)
                                _ != this.dataTemp2[h].id_program
                                    ? ((m += this.dataTemp2[h].pagu_indikatif),
                                      this.body.push([
                                          { content: this.dataTemp2[h].kode_urusan ? this.dataTemp2[h].kode_urusan : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                          { content: this.dataTemp2[h].kode_bidang_urusan ? this.dataTemp2[h].kode_bidang_urusan.split(".")[1] : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                          { content: this.dataTemp2[h].kode_program ? this.dataTemp2[h].kode_program.split(".")[2] : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                          { content: "", styles: { cellWidth: 10 } },
                                          { content: "", styles: { cellWidth: 10 } },
                                          { content: this.dataTemp2[h].nama_program ? this.dataTemp2[h].nama_program : "-", colSpan: 8, styles: { fontStyle: "bold" } },
                                          { content: new j.H9("id-ID").transform(String(m), "", "", "1.2-2"), styles: { fontStyle: "bold", cellWidth: 30 } },
                                      ]),
                                      (_ = this.dataTemp2[h].id_program))
                                    : (this.body = []),
                                    r != this.dataTemp2[h].id_giat &&
                                        ((v += this.dataTemp2[h].pagu_indikatif),
                                        this.body.push([
                                            { content: this.dataTemp2[h].kode_urusan ? this.dataTemp2[h].kode_urusan : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: this.dataTemp2[h].kode_bidang_urusan ? this.dataTemp2[h].kode_bidang_urusan.split(".")[1] : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: this.dataTemp2[h].kode_program ? this.dataTemp2[h].kode_program.split(".")[2] : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: this.dataTemp2[h].kode_giat ? this.dataTemp2[h].kode_giat.split(".")[3] + "." + this.dataTemp2[h].kode_giat.split(".")[4] : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp2[h].nama_giat ? this.dataTemp2[h].nama_giat : "-", colSpan: 8, styles: { fontStyle: "bold" } },
                                            { content: new j.H9("id-ID").transform(String(v), "", "", "1.2-2"), styles: { fontStyle: "bold", cellWidth: 30 } },
                                        ]),
                                        (r = this.dataTemp2[h].id_giat)),
                                    u != this.dataTemp2[h].id_sub_giat &&
                                        (this.body.push([
                                            { content: this.dataTemp2[h].kode_urusan ? this.dataTemp2[h].kode_urusan : "-", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp2[h].kode_bidang_urusan ? this.dataTemp2[h].kode_bidang_urusan.split(".")[1] : "-", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp2[h].kode_program ? this.dataTemp2[h].kode_program.split(".")[2] : "-", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp2[h].kode_giat ? this.dataTemp2[h].kode_giat.split(".")[3] + "." + this.dataTemp2[h].kode_giat.split(".")[4] : "-", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp2[h].kode_sub_giat ? this.dataTemp2[h].kode_sub_giat.split(".")[5] : "-", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp2[h].nama_sub_giat ? this.dataTemp2[h].nama_sub_giat : "-", styles: { cellWidth: 100 } },
                                            { content: "" },
                                            { content: "" },
                                            { content: this.dataTemp2[h].tolok_ukur_sub ? this.dataTemp2[h].tolok_ukur_sub : "-" },
                                            { content: this.dataTemp2[h].target_sub_teks ? this.dataTemp2[h].target_sub_teks : "-" },
                                            { content: "" },
                                            { content: "" },
                                            {
                                                content:
                                                    this.dataTemp2[h].nama_camat && this.dataTemp2[h].nama_lurah
                                                        ? this.dataTemp2[h].nama_kab_kota + ", " + this.dataTemp2[h].nama_camat + ", " + this.dataTemp2[h].nama_lurah
                                                        : (this.dataTemp2[h].nama_daerah ? this.dataTemp2[h].nama_daerah : "-") + " Semua Kecamatan, Semua Kelurahan",
                                                styles: { cellWidth: 30 },
                                            },
                                            { content: new j.H9("id-ID").transform(this.dataTemp2[h].pagu_indikatif, "", "", "1.2-2") },
                                        ]),
                                        (g += this.dataTemp2[h].pagu_indikatif),
                                        (u = this.dataTemp2[h].id_sub_giat)),
                                    o.push(this.body);
                            (C = g + k + m + v),
                                (this.foot = [
                                    [
                                        { content: "TOTAL", colSpan: 13, styles: { fontStyle: "bold" } },
                                        { content: new j.H9("id-ID").transform(String(C), "", "", "1.2-2"), styles: { fontStyle: "bold" } },
                                    ],
                                ]);
                        } else
                            (this.header = [
                                [
                                    { content: "Kode", colSpan: 5, rowSpan: 2, styles: { cellWidth: 30 } },
                                    { content: "Program / Kegiatan", rowSpan: 2 },
                                    { content: "Sasaran Program", colSpan: 2 },
                                    { content: "Sasaran Kegiatan", colSpan: 4 },
                                    { content: "Lokasi Kegiatan", rowSpan: 2 },
                                    { content: "Plafon Anggaran Sementara (Rp.)", rowSpan: 2 },
                                    { content: "Keterangan", rowSpan: 2 },
                                ],
                                [{ content: "Indikator Kinerja" }, { content: "Target" }, { content: "Output Kegiatan" }, { content: "Target" }, { content: "Outcome Kegiatan" }, { content: "Target" }],
                            ]),
                                (this.body = [[{ content: "DATA LAPORAN KOSONG", colSpan: 15, styles: { fontStyle: "bold", halign: "center" } }]]),
                                o.push(this.body),
                                (this.foot = [[{ content: "TOTAL", colSpan: 13, styles: { fontStyle: "bold" } }]]);
                        var l = [];
                        for (let _ = 0; _ < o.length; _++) l = l.concat(o[_]);
                        s.autoTable({
                            startY: 31,
                            theme: "grid",
                            body: l,
                            head: this.header,
                            foot: this.foot,
                            showFoot: "lastPage",
                            rowPageBreak: "avoid",
                            styles: { fontSize: 8, textColor: 0 },
                            headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                            bodyStyles: { lineWidth: 0.2, lineColor: 0 },
                            footStyles: { fillColor: 255, valign: "middle", halign: "right", lineWidth: 0.2, lineColor: 0 },
                        }),
                            s.save("Sistem Informasi Pemerintahan Daerah - Cetak KUA-PPAS.pdf");
                    }
                    getDataLampiranRKA(t, e) {
                        (this.id_to_cetak_rka = null == t ? void 0 : t.subBelanja.id_sub_bl), (this.isLoadingCetakRKA = !0);
                        const n = new FormData();
                        n.append("tahun", this.konfigurasiSession.tahun),
                            n.append("id_daerah", this.konfigurasiSession.id_daerah),
                            n.append("is_prop", this.userSession.is_prop),
                            n.append("id_sub_bl", null == t ? void 0 : t.subBelanja.id_sub_bl),
                            n.append("id_sub_giat", null == t ? void 0 : t.subBelanja.id_sub_giat),
                            (this.loadDataRKASub = this.laporanService.listDataLampiranRKA(n).subscribe({
                                next: (s) => {
                                    (this.dataTemp3 = s.data[0]), this.getDataListRKASubKegiatan(t, e);
                                },
                                error: (s) => {
                                    this.toastr.error("Data Laporan Gagal DiLoad", "Error!", { positionClass: "toast-top-right", closeButton: !0, progressBar: !0 }), (this.isLoadingCetakRKA = !1);
                                },
                            }));
                    }
                    getDataListRKASubKegiatan(t, e) {
                        const n = new FormData();
                        n.append("tahun", this.konfigurasiSession.tahun),
                            n.append("id_daerah", this.konfigurasiSession.id_daerah),
                            n.append("id_unit", null == t ? void 0 : t.subBelanja.id_unit),
                            n.append("id_sub_skpd", null == t ? void 0 : t.subBelanja.id_sub_skpd),
                            n.append("id_sub_bl", null == t ? void 0 : t.subBelanja.id_sub_bl),
                            e && n.append("is_anggaran", "1"),
                            (this.loadDataRKASub = this.laporanService.listDataRincianBelanjaSubKegiatan(n).subscribe({
                                next: (s) => {
                                    (this.dataTempRKA = s.data), e && (this.dataTempTAPD = s.data_setup_tapd), e ? this.cetakLampiranLaporanRKA() : this.cetakLampiranRKA();
                                },
                                error: (s) => {
                                    this.toastr.error("Data Laporan Gagal DiLoad", "Error!", { positionClass: "toast-top-right", closeButton: !0, progressBar: !0 }), (this.isLoadingCetakRKA = !1);
                                },
                            }));
                    }
                    cetakLampiranRKA() {
                        var t, e, n, s;
                        if (this.isLoadingCetakRKA) {
                            let m = this.dataTemp3,
                                v = this.konfigurasiSession.tahun;
                            var l,
                                o = new Ja.default("p", "mm", "a3");
                            (this.body = []),
                                o.setProperties({ title: "Sistem Informasi Pemerintahan Daerah - Cetak Rincian Belanja", author: "Siemen", creator: "-" }),
                                o.autoTable({
                                    startY: 7,
                                    theme: "grid",
                                    head: [
                                        [{ content: "RINCIAN BELANJA SUB KEGIATAN\nSATUAN KERJA PERANGKAT DAERAH", styles: { fontStyle: "bold", fontSize: 15 } }],
                                        [{ content: "Pemerintahan " + this.nama_daerah + " Tahun Anggaran " + v, styles: { fontStyle: "normal", fontSize: 12 } }],
                                    ],
                                    styles: { font: "helvetica", textColor: 0, cellPadding: [4, 0, 4, 0] },
                                    headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                                }),
                                o.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    body: [
                                        [
                                            { content: "Urusan", styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            { content: (m.kode_urusan ? m.kode_urusan : "-") + " " + (m.nama_urusan ? m.nama_urusan : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Bidang Urusan", styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            { content: (m.kode_bidang_urusan ? m.kode_bidang_urusan : "-") + " " + (m.nama_bidang_urusan ? m.nama_bidang_urusan : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Unit Organisasi", styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            { content: (m.kode_skpd ? m.kode_skpd : "-") + " " + (m.nama_skpd ? m.nama_skpd : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Sub Unit Organisasi", styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            { content: (m.kode_sub_skpd ? m.kode_sub_skpd : "-") + " " + (m.nama_sub_skpd ? m.nama_sub_skpd : ""), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Program", styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            { content: (m.kode_program ? m.kode_program : "-") + " " + (m.nama_program ? m.nama_program : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Kegiatan", styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            { content: (m.kode_giat ? m.kode_giat : "-") + " " + (m.nama_giat ? m.nama_giat : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Sub Kegiatan", styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            { content: (m.kode_sub_giat ? m.kode_sub_giat : "-") + " " + (m.nama_sub_giat ? m.nama_sub_giat : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "SPM", styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            { content: m.spm_teks ? m.spm_teks : "-", styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Jenis Layanan", styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            { content: m.layanan_teks ? m.layanan_teks : "-", styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Sumber Pendanaan", styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            { content: m.nama_dana ? m.nama_dana : "-", styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Lokasi", styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            { content: (m.nama_kab_kota ? m.nama_kab_kota : "-") + (m.nama_kecamatan ? m.nama_kecamatan : "-") + (m.nama_kelurahan ? m.nama_kelurahan : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Waktu Pelaksanaan", styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            { content: (m.waktu_mulai ? m.waktu_mulai : "-") + " s.d " + (m.waktu_akhir ? m.waktu_akhir : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Kelompok Sasaran", styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            { content: (m.sasaran ? m.sasaran + " " : "") + this.nama_daerah, styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Jumlah " + (v - 1), styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            { content: new j.H9("id-ID").transform(String(m.pagu_n_lalu ? m.pagu_n_lalu : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Jumlah " + v, styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            { content: new j.H9("id-ID").transform(String(m.pagu_indikatif ? m.pagu_indikatif : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Jumlah " + (v + 1), styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            { content: new j.H9("id-ID").transform(String(m.pagu_n_depan ? m.pagu_n_depan : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { halign: "left" } },
                                        ],
                                    ],
                                    styles: { font: "helvetica", fontStyle: "normal", fontSize: 10, textColor: 0, cellPadding: { top: 2, right: 2, bottom: 2, left: 0 } },
                                    bodyStyles: { valign: "middle", lineWidth: 0, lineColor: 0 },
                                }),
                                o.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    head: [[{ content: "APBD & Pergeseran/Perubahan APBD" }]],
                                    styles: { font: "helvetica", fontStyle: "bold", fontSize: 14, textColor: 0, cellPadding: [5, 0, 5, 0] },
                                    headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                                }),
                                o.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    head: [[{ content: "Indikator", styles: { cellWidth: 50 } }, { content: "Tolok Ukur Kinerja" }, { content: "Target Kinerja", styles: { cellWidth: 40 } }]],
                                    body: [
                                        [{ content: "Capaian Program" }, { content: m.tolak_ukur_capaian ? m.tolak_ukur_capaian : "-" }, { content: m.target_kinerja_capaian ? m.target_kinerja_capaian : "-" }],
                                        [{ content: "Masukan" }, { content: "Dana yang dibutuhkan" }, { content: new j.H9("id-ID").transform(String(m.pagu_indikatif ? m.pagu_indikatif : 0), "Rp. ", "symbol", "1.0-0", "id-ID") }],
                                        [{ content: "Keluaran" }, { content: m.tolak_ukur_keluaran ? m.tolak_ukur_keluaran : "-" }, { content: m.target_kinerja_keluaran ? m.target_kinerja_keluaran : "-" }],
                                        [{ content: "Hasil" }, { content: m.tolak_ukur_hasil ? m.tolak_ukur_hasil : "-" }, { content: m.target_kinerja_hasil ? m.target_kinerja_hasil : "-" }],
                                    ],
                                    styles: { font: "helvetica", fontStyle: "normal", fontSize: 9, textColor: 0 },
                                    headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                                    bodyStyles: { valign: "middle", lineWidth: 0.2, lineColor: 0 },
                                }),
                                o.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    head: [[{ content: "Rincian Belanja Sub Kegiatan" }]],
                                    styles: { font: "helvetica", fontStyle: "bold", fontSize: 14, textColor: 0, cellPadding: [5, 0, 5, 0] },
                                    headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                                }),
                                (l = [
                                    [
                                        { content: "Kode Rekening", styles: { cellWidth: 30 }, rowSpan: 2 },
                                        { content: "Uraian", styles: { cellWidth: 80 }, rowSpan: 2 },
                                        { content: "Rinci Perhitungan", colSpan: 4 },
                                        { content: "Jumlah", rowSpan: 2 },
                                    ],
                                    [{ content: "Koefisien", styles: { cellWidth: 40 } }, { content: "Satuan", styles: { cellWidth: 40 } }, { content: "Harga", styles: { cellWidth: 30 } }, { content: "PPN" }],
                                ]);
                            var _,
                                r = [],
                                u = this.dataTempRKA;
                            if (u.length > 0) {
                                let g, C, h, f, y, B, F, c;
                                for (let b = 0; b < u.length; b++)
                                    g != u[b].kode_akun_1
                                        ? ((_ = [
                                              [
                                                  { content: u[b].kode_akun_1 ? u[b].kode_akun_1 : "-", styles: { fontStyle: "bold" } },
                                                  { content: u[b].nama_akun_1 ? u[b].nama_akun_1 : "-", colSpan: 5, styles: { fontStyle: "bold" } },
                                                  {
                                                      content: new j.H9("id-ID").transform(String(u[b].total_akun_1 ? u[b].total_akun_1 : 0), "Rp. ", "symbol", "1.0-0", "id-ID"),
                                                      styles: { fontStyle: "bold", halign: "right", cellWidth: 30 },
                                                  },
                                              ],
                                          ]),
                                          (g = u[b].kode_akun_1))
                                        : (_ = []),
                                        C != u[b].kode_akun_2 &&
                                            (_.push([
                                                { content: u[b].kode_akun_2 ? u[b].kode_akun_2 : "-", styles: { fontStyle: "bold" } },
                                                { content: u[b].nama_akun_2 ? u[b].nama_akun_2 : "-", colSpan: 5, styles: { fontStyle: "bold" } },
                                                { content: new j.H9("id-ID").transform(String(u[b].total_akun_2 ? u[b].total_akun_2 : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { fontStyle: "bold", halign: "right", cellWidth: 30 } },
                                            ]),
                                            (C = u[b].kode_akun_2)),
                                        h != u[b].kode_akun_3 &&
                                            (_.push([
                                                { content: u[b].kode_akun_3 ? u[b].kode_akun_3 : "-", styles: { fontStyle: "bold" } },
                                                { content: u[b].nama_akun_3 ? u[b].nama_akun_3 : "-", colSpan: 5, styles: { fontStyle: "bold" } },
                                                { content: new j.H9("id-ID").transform(String(u[b].total_akun_3 ? u[b].total_akun_3 : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { fontStyle: "bold", halign: "right", cellWidth: 30 } },
                                            ]),
                                            (h = u[b].kode_akun_3)),
                                        f != u[b].kode_akun_4 &&
                                            (_.push([
                                                { content: u[b].kode_akun_4 ? u[b].kode_akun_4 : "-", styles: { fontStyle: "bold" } },
                                                { content: u[b].nama_akun_4 ? u[b].nama_akun_4 : "-", colSpan: 5, styles: { fontStyle: "bold" } },
                                                { content: new j.H9("id-ID").transform(String(u[b].total_akun_4 ? u[b].total_akun_4 : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { fontStyle: "bold", halign: "right", cellWidth: 30 } },
                                            ]),
                                            (f = u[b].kode_akun_4)),
                                        y != u[b].kode_akun_5 &&
                                            (_.push([
                                                { content: u[b].kode_akun_5 ? u[b].kode_akun_5 : "-", styles: { fontStyle: "bold" } },
                                                { content: u[b].nama_akun_5 ? u[b].nama_akun_5 : "-", colSpan: 5, styles: { fontStyle: "bold" } },
                                                { content: new j.H9("id-ID").transform(String(u[b].total_akun_5 ? u[b].total_akun_5 : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { fontStyle: "bold", halign: "right", cellWidth: 30 } },
                                            ]),
                                            (y = u[b].kode_akun_5)),
                                        B != u[b].kode_akun &&
                                            (_.push([
                                                { content: u[b].kode_akun ? u[b].kode_akun : "-", styles: { fontStyle: "bold" } },
                                                { content: u[b].nama_akun ? u[b].nama_akun : "-", colSpan: 5, styles: { fontStyle: "bold" } },
                                                { content: new j.H9("id-ID").transform(String(u[b].total_akun ? u[b].total_akun : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { fontStyle: "bold", halign: "right", cellWidth: 30 } },
                                            ]),
                                            (B = u[b].kode_akun)),
                                        F != u[b].subs_bl_teks + u[b].kode_akun &&
                                            (_.push([
                                                { content: "" },
                                                { content: "[ # ] " + (u[b].subs_bl_teks ? u[b].subs_bl_teks + "\n\tSumber Dana : " + (u[b].nama_dana ? u[b].nama_dana : "-") : "-"), colSpan: 5, styles: { fontStyle: "bold" } },
                                                {
                                                    content: new j.H9("id-ID").transform(String(u[b].total_subs_sub_bl ? u[b].total_subs_sub_bl : 0), "Rp. ", "symbol", "1.0-0", "id-ID"),
                                                    styles: { fontStyle: "bold", halign: "right", cellWidth: 30 },
                                                },
                                            ]),
                                            (F = u[b].subs_bl_teks + u[b].kode_akun)),
                                        c != u[b].ket_bl_teks + u[b].kode_akun &&
                                            (_.push([{ content: "" }, { content: "[ - ] " + (u[b].ket_bl_teks ? u[b].ket_bl_teks : "-"), colSpan: 5, styles: { fontStyle: "bold" } }]), (c = u[b].ket_bl_teks + u[b].kode_akun)),
                                        _.push([
                                            { content: "" },
                                            {
                                                content: u[b].lokus_akun
                                                    ? u[b].lokus_akun + " [" + u[b].jenis_bl + "] \n\tAlamat : " + (u[b].alamat_teks ? u[b].alamat_teks : "[?]") + "\n" + (u[b].nama_standar_harga ? u[b].nama_standar_harga : "")
                                                    : u[b].nama_standar_harga
                                                    ? u[b].nama_standar_harga + "\n\tSpesifikasi : " + (u[b].spek ? u[b].spek : "-")
                                                    : u[b].nama_akun +
                                                      ("BAGI-HASIL" == u[b].jenis_bl ||
                                                      "BANKEU" == u[b].jenis_bl ||
                                                      "BANKEU-KHUSUS" == u[b].jenis_bl ||
                                                      "BANSOS" == u[b].jenis_bl ||
                                                      "BANSOS-BRG" == u[b].jenis_bl ||
                                                      "HIBAH" == u[b].jenis_bl ||
                                                      "HIBAH-BRG" == u[b].jenis_bl
                                                          ? "\n\tAlamat : " + u[b].lokus_akun_teks
                                                          : ""),
                                                styles: { cellPadding: 7 },
                                            },
                                            { content: u[b].koefisien ? u[b].koefisien : "-" },
                                            { content: u[b].satuan ? u[b].satuan : "-" },
                                            { content: u[b].harga_satuan ? new j.H9("id-ID").transform(String(u[b].harga_satuan), "", "", "1.0-0", "id-ID") : "-" },
                                            { content: null != u[b].pajak ? u[b].pajak + " %" : "11 %" },
                                            { content: new j.H9("id-ID").transform(String(u[b].harga_akun ? u[b].harga_akun : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { halign: "right", cellWidth: 30 } },
                                        ]),
                                        r.push(_);
                            } else r.push((_ = [[{ content: "Data Laporan Kosong", colSpan: 7, styles: { halign: "center" } }]]));
                            var k = [];
                            for (let g = 0; g < r.length; g++) k = k.concat(r[g]);
                            o.autoTable({
                                startY: "auto",
                                theme: "grid",
                                body: k,
                                head: l,
                                foot: [
                                    [
                                        { content: "Jumlah : ", colSpan: 6, styles: { halign: "right" } },
                                        { content: new j.H9("id-ID").transform(String(m.grand_total ? m.grand_total : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { fontStyle: "bold", halign: "right" } },
                                    ],
                                    [
                                        { content: "", colSpan: 3 },
                                        {
                                            content:
                                                this.nama_daerah +
                                                "," +
                                                ".".repeat(30) +
                                                "\n" +
                                                ("PLT" == (null === (t = this.skpd) || void 0 === t ? void 0 : t.status_kepala) ? "Plt. " : "") +
                                                " Kepala " +
                                                (null === (e = this.skpd) || void 0 === e ? void 0 : e.nama_skpd) +
                                                "\n".repeat(10) +
                                                (null === (n = this.skpd) || void 0 === n ? void 0 : n.nama_kepala) +
                                                "\nNIP. " +
                                                (null === (s = this.skpd) || void 0 === s ? void 0 : s.nip_kepala),
                                            colSpan: 4,
                                            styles: { halign: "center", fontStyle: "normal" },
                                        },
                                    ],
                                ],
                                showFoot: "lastPage",
                                rowPageBreak: "avoid",
                                styles: { font: "helvetica", fontSize: 9, textColor: 0 },
                                headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0, fontStyle: "bold" },
                                bodyStyles: { fillColor: 255, valign: "middle", lineWidth: 0.2, lineColor: 0 },
                                footStyles: { fillColor: 255, valign: "middle", lineWidth: 0.2, lineColor: 0 },
                            }),
                                o.save("Sistem Informasi Pemerintahan Daerah - Cetak RKA.pdf"),
                                (this.isLoadingCetakRKA = !1);
                        }
                    }
                    cetakLampiranLaporanRKA() {
                        var t, e, n, s;
                        if (this.isLoadingCetakRKA) {
                            let h = this.dataTemp3,
                                f = this.konfigurasiSession.tahun;
                            var l,
                                o = new Ja.default("p", "mm", "a3");
                            (this.body = []),
                                o.setProperties({ title: "Sistem Informasi Pemerintahan Daerah - Cetak Rincian Belanja", author: "Siemen", creator: "-" }),
                                o.autoTable({
                                    startY: 7,
                                    theme: "grid",
                                    head: [
                                        [
                                            { content: "RENCANA KERJA DAN ANGGARAN \nSATUAN KERJA PERANGKAT DAERAH", styles: { fontStyle: "bold", fontSize: 15, cellPadding: [4, 0, 4, 0] } },
                                            { content: "Formulir\nRKA-BELANJA\nSKPD", styles: { fontStyle: "bold", fontSize: 12, cellWidth: 70, cellPadding: [4, 0, 4, 0] } },
                                        ],
                                        [{ content: "Pemerintahan " + this.nama_daerah + " Tahun Anggaran " + f, colSpan: 2, styles: { fontStyle: "normal", fontSize: 12 } }],
                                    ],
                                    styles: { font: "helvetica", textColor: 0 },
                                    headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                                }),
                                o.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    head: [[{ content: "Rincian Anggaran Belanja Menurut Program dan Kegiatan", colSpan: 2 }]],
                                    body: [
                                        [
                                            { content: "Urusan Pemerintahan", styles: { cellWidth: 50 } },
                                            { content: " : " + (h.kode_urusan ? h.kode_urusan : "-") + " " + (h.nama_urusan ? h.nama_urusan : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Bidang Urusan", styles: { cellWidth: 50 } },
                                            { content: " : " + (h.kode_bidang_urusan ? h.kode_bidang_urusan : "-") + " " + (h.nama_bidang_urusan ? h.nama_bidang_urusan : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Unit Organisasi", styles: { cellWidth: 50 } },
                                            { content: " : " + (h.kode_skpd ? h.kode_skpd : "-") + " " + (h.nama_skpd ? h.nama_skpd : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Sub Unit Organisasi", styles: { cellWidth: 50 } },
                                            { content: " : " + (h.kode_sub_skpd ? h.kode_sub_skpd : "-") + " " + (h.nama_sub_skpd ? h.nama_sub_skpd : ""), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Program", styles: { cellWidth: 50 } },
                                            { content: " : " + (h.kode_program ? h.kode_program : "-") + " " + (h.nama_program ? h.nama_program : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Kegiatan", styles: { cellWidth: 50 } },
                                            { content: " : " + (h.kode_giat ? h.kode_giat : "-") + " " + (h.nama_giat ? h.nama_giat : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Sub Kegiatan", styles: { cellWidth: 50 } },
                                            { content: " : " + (h.kode_sub_giat ? h.kode_sub_giat : "-") + " " + (h.nama_sub_giat ? h.nama_sub_giat : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "SPM", styles: { cellWidth: 50 } },
                                            { content: " : " + (h.spm_teks ? h.spm_teks : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Jenis Layanan", styles: { cellWidth: 50 } },
                                            { content: " : " + (h.layanan_teks ? h.layanan_teks : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Sumber Pendanaan", styles: { cellWidth: 50 } },
                                            { content: " : " + (h.nama_dana ? h.nama_dana : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Lokasi", styles: { cellWidth: 50 } },
                                            { content: " : " + (h.nama_kab_kota ? h.nama_kab_kota : "-") + (h.nama_kecamatan ? h.nama_kecamatan : "-") + (h.nama_kelurahan ? h.nama_kelurahan : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Waktu Pelaksanaan", styles: { cellWidth: 50 } },
                                            { content: " : " + (h.waktu_mulai ? h.waktu_mulai : "-") + " s.d " + (h.waktu_akhir ? h.waktu_akhir : "-"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Kelompok Sasaran", styles: { cellWidth: 50 } },
                                            { content: " : " + (h.sasaran ? h.sasaran + " " : "") + this.nama_daerah, styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Alokasi " + (f - 1), styles: { cellWidth: 50 } },
                                            { content: " : " + new j.H9("id-ID").transform(String(h.pagu_n_lalu ? h.pagu_n_lalu : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Alokasi " + f, styles: { cellWidth: 50 } },
                                            { content: " : " + new j.H9("id-ID").transform(String(h.pagu_indikatif ? h.pagu_indikatif : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { halign: "left" } },
                                        ],
                                        [
                                            { content: "Alokasi " + (f + 1), styles: { cellWidth: 50 } },
                                            { content: " : " + new j.H9("id-ID").transform(String(h.pagu_n_depan ? h.pagu_n_depan : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { halign: "left" } },
                                        ],
                                    ],
                                    styles: { font: "helvetica", fontStyle: "normal", valign: "middle", textColor: 0, lineWidth: 0.2, lineColor: 0 },
                                    headStyles: { fillColor: 255, fontSize: 12, halign: "center", cellPadding: { top: 4, right: 0, bottom: 4, left: 0 } },
                                    bodyStyles: { fontSize: 9, cellPadding: { top: 2, right: 2, bottom: 2, left: 2 } },
                                }),
                                o.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    head: [
                                        [{ content: "Indikator dan Tolak Ukur Kinerja Kegiatan", colSpan: 3 }],
                                        [{ content: "Indikator", styles: { cellWidth: 50 } }, { content: "Tolok Ukur Kinerja" }, { content: "Target Kinerja", styles: { cellWidth: 40 } }],
                                    ],
                                    body: [
                                        [{ content: "Capaian Program" }, { content: h.tolak_ukur_capaian ? h.tolak_ukur_capaian : "-" }, { content: h.target_kinerja_capaian ? h.target_kinerja_capaian : "-" }],
                                        [{ content: "Masukan" }, { content: "Dana yang dibutuhkan" }, { content: new j.H9("id-ID").transform(String(h.pagu_indikatif ? h.pagu_indikatif : 0), "Rp. ", "symbol", "1.0-0", "id-ID") }],
                                        [{ content: "Keluaran" }, { content: h.tolak_ukur_keluaran ? h.tolak_ukur_keluaran : "-" }, { content: h.target_kinerja_keluaran ? h.target_kinerja_keluaran : "-" }],
                                        [{ content: "Hasil" }, { content: h.tolak_ukur_hasil ? h.tolak_ukur_hasil : "-" }, { content: h.target_kinerja_hasil ? h.target_kinerja_hasil : "-" }],
                                    ],
                                    styles: { font: "helvetica", fontStyle: "normal", textColor: 0 },
                                    headStyles: { fontSize: 12, fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                                    bodyStyles: { fontSize: 9, valign: "middle", lineWidth: 0.2, lineColor: 0 },
                                }),
                                o.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    head: [[{ content: "Rincian Anggaran Belanja Kegiatan\nSatuan Kerja Perangkat Daerah", colSpan: 2 }]],
                                    body: [
                                        [{ content: "Sub Kegiatan", styles: { cellWidth: 50 } }, { content: " : " + (h.kode_sub_giat ? h.kode_sub_giat : "-") + " " + (h.nama_sub_giat ? h.nama_sub_giat : "-") }],
                                        [{ content: "Sumber Pendanaan", styles: { cellWidth: 50 } }, { content: " : " + (h.nama_dana ? h.nama_dana : "-") }],
                                        [
                                            { content: "Lokasi", styles: { cellWidth: 50 } },
                                            { content: " : " + (h.nama_kab_kota ? h.nama_kab_kota : "-") + (h.nama_kecamatan ? h.nama_kecamatan : "-") + (h.nama_kelurahan ? h.nama_kelurahan : "-") },
                                        ],
                                        [{ content: "Keluaran Sub Kegiatan", styles: { cellWidth: 50 } }, { content: " : " + (h.tolak_ukur_keluaran ? h.tolak_ukur_keluaran : "-") }],
                                        [{ content: "Waktu Pelaksanaan", styles: { cellWidth: 50 } }, { content: " : " + (h.waktu_mulai ? h.waktu_mulai : "-") + " s.d " + (h.waktu_akhir ? h.waktu_akhir : "-") }],
                                        [{ content: "Keterangan", styles: { cellWidth: 50 } }, { content: " : " }],
                                    ],
                                    styles: { font: "helvetica", valign: "middle", textColor: 0 },
                                    headStyles: { fillColor: 255, fontSize: 12, fontStyle: "normal", halign: "center", lineWidth: 0.2, lineColor: 0 },
                                    bodyStyles: { fontSize: 9, lineWidth: 0.2, lineColor: 0 },
                                }),
                                (l = [
                                    [{ content: "Rincian Anggaran Belanja Kegiatan\nSatuan Kerja Perangkat Daerah", styles: { fontSize: 12 }, colSpan: 7 }],
                                    [
                                        { content: "Kode Rekening", styles: { cellWidth: 30, fontSize: 9 }, rowSpan: 2 },
                                        { content: "Uraian", styles: { cellWidth: 80, fontSize: 9 }, rowSpan: 2 },
                                        { content: "Rinci Perhitungan", styles: { fontSize: 9 }, colSpan: 4 },
                                        { content: "Jumlah", styles: { fontSize: 9 }, rowSpan: 2 },
                                    ],
                                    [
                                        { content: "Koefisien", styles: { cellWidth: 40, fontSize: 9 } },
                                        { content: "Satuan", styles: { cellWidth: 40, fontSize: 9 } },
                                        { content: "Harga", styles: { cellWidth: 30, fontSize: 9 } },
                                        { content: "PPN", styles: { fontSize: 9 } },
                                    ],
                                ]);
                            var _,
                                r = [],
                                u = this.dataTempRKA;
                            if (u.length > 0) {
                                let y, B, F, c, b, I, x, q;
                                for (let T = 0; T < u.length; T++)
                                    y != u[T].kode_akun_1
                                        ? ((_ = [
                                              [
                                                  { content: u[T].kode_akun_1 ? u[T].kode_akun_1 : "-", styles: { fontStyle: "bold" } },
                                                  { content: u[T].nama_akun_1 ? u[T].nama_akun_1 : "-", colSpan: 5, styles: { fontStyle: "bold" } },
                                                  {
                                                      content: new j.H9("id-ID").transform(String(u[T].total_akun_1 ? u[T].total_akun_1 : 0), "Rp. ", "symbol", "1.0-0", "id-ID"),
                                                      styles: { fontStyle: "bold", halign: "right", cellWidth: 30 },
                                                  },
                                              ],
                                          ]),
                                          (y = u[T].kode_akun_1))
                                        : (_ = []),
                                        B != u[T].kode_akun_2 &&
                                            (_.push([
                                                { content: u[T].kode_akun_2 ? u[T].kode_akun_2 : "-", styles: { fontStyle: "bold" } },
                                                { content: u[T].nama_akun_2 ? u[T].nama_akun_2 : "-", colSpan: 5, styles: { fontStyle: "bold" } },
                                                { content: new j.H9("id-ID").transform(String(u[T].total_akun_2 ? u[T].total_akun_2 : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { fontStyle: "bold", halign: "right", cellWidth: 30 } },
                                            ]),
                                            (B = u[T].kode_akun_2)),
                                        F != u[T].kode_akun_3 &&
                                            (_.push([
                                                { content: u[T].kode_akun_3 ? u[T].kode_akun_3 : "-", styles: { fontStyle: "bold" } },
                                                { content: u[T].nama_akun_3 ? u[T].nama_akun_3 : "-", colSpan: 5, styles: { fontStyle: "bold" } },
                                                { content: new j.H9("id-ID").transform(String(u[T].total_akun_3 ? u[T].total_akun_3 : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { fontStyle: "bold", halign: "right", cellWidth: 30 } },
                                            ]),
                                            (F = u[T].kode_akun_3)),
                                        c != u[T].kode_akun_4 &&
                                            (_.push([
                                                { content: u[T].kode_akun_4 ? u[T].kode_akun_4 : "-", styles: { fontStyle: "bold" } },
                                                { content: u[T].nama_akun_4 ? u[T].nama_akun_4 : "-", colSpan: 5, styles: { fontStyle: "bold" } },
                                                { content: new j.H9("id-ID").transform(String(u[T].total_akun_4 ? u[T].total_akun_4 : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { fontStyle: "bold", halign: "right", cellWidth: 30 } },
                                            ]),
                                            (c = u[T].kode_akun_4)),
                                        b != u[T].kode_akun_5 &&
                                            (_.push([
                                                { content: u[T].kode_akun_5 ? u[T].kode_akun_5 : "-", styles: { fontStyle: "bold" } },
                                                { content: u[T].nama_akun_5 ? u[T].nama_akun_5 : "-", colSpan: 5, styles: { fontStyle: "bold" } },
                                                { content: new j.H9("id-ID").transform(String(u[T].total_akun_5 ? u[T].total_akun_5 : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { fontStyle: "bold", halign: "right", cellWidth: 30 } },
                                            ]),
                                            (b = u[T].kode_akun_5)),
                                        I != u[T].kode_akun &&
                                            (_.push([
                                                { content: u[T].kode_akun ? u[T].kode_akun : "-", styles: { fontStyle: "bold" } },
                                                { content: u[T].nama_akun ? u[T].nama_akun : "-", colSpan: 5, styles: { fontStyle: "bold" } },
                                                { content: new j.H9("id-ID").transform(String(u[T].total_akun ? u[T].total_akun : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { fontStyle: "bold", halign: "right", cellWidth: 30 } },
                                            ]),
                                            (I = u[T].kode_akun)),
                                        x != u[T].subs_bl_teks + u[T].kode_akun &&
                                            (_.push([
                                                { content: "" },
                                                { content: "[ # ] " + (u[T].subs_bl_teks ? u[T].subs_bl_teks + "\n\tSumber Dana : " + (u[T].nama_dana ? u[T].nama_dana : "-") : "-"), colSpan: 5, styles: { fontStyle: "bold" } },
                                                {
                                                    content: new j.H9("id-ID").transform(String(u[T].total_subs_sub_bl ? u[T].total_subs_sub_bl : 0), "Rp. ", "symbol", "1.0-0", "id-ID"),
                                                    styles: { fontStyle: "bold", halign: "right", cellWidth: 30 },
                                                },
                                            ]),
                                            (x = u[T].subs_bl_teks + u[T].kode_akun)),
                                        q != u[T].ket_bl_teks + u[T].kode_akun &&
                                            (_.push([{ content: "" }, { content: "[ - ] " + (u[T].ket_bl_teks ? u[T].ket_bl_teks : "-"), colSpan: 5, styles: { fontStyle: "bold" } }]), (q = u[T].ket_bl_teks + u[T].kode_akun)),
                                        _.push([
                                            { content: "" },
                                            {
                                                content: u[T].lokus_akun
                                                    ? u[T].lokus_akun + " [" + u[T].jenis_bl + "] \n\tAlamat : " + (u[T].alamat_teks ? u[T].alamat_teks : "[?]") + "\n" + (u[T].nama_standar_harga ? u[T].nama_standar_harga : "")
                                                    : u[T].nama_standar_harga
                                                    ? u[T].nama_standar_harga + "\n\tSpesifikasi : " + (u[T].spek ? (u[T].spek.length > 50 ? u[T].spek.slice(0, 50) + "..." : u[T].spek) : "-")
                                                    : u[T].nama_akun,
                                                styles: { cellPadding: 7 },
                                            },
                                            { content: u[T].koefisien ? u[T].koefisien : "-" },
                                            { content: u[T].satuan ? u[T].satuan : "-" },
                                            { content: u[T].harga_satuan ? new j.H9("id-ID").transform(String(u[T].harga_satuan), "", "", "1.0-0", "id-ID") : "-" },
                                            { content: null != u[T].pajak ? u[T].pajak + " %" : "11 %" },
                                            { content: new j.H9("id-ID").transform(String(u[T].harga_akun ? u[T].harga_akun : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { halign: "right", cellWidth: 30 } },
                                        ]),
                                        r.push(_);
                            } else r.push((_ = [[{ content: "Data Laporan Kosong", colSpan: 7, styles: { halign: "center" } }]]));
                            var k = [];
                            for (let y = 0; y < r.length; y++) k = k.concat(r[y]);
                            o.autoTable({
                                startY: "auto",
                                theme: "grid",
                                body: k,
                                head: l,
                                foot: [
                                    [
                                        { content: "Jumlah : ", colSpan: 6, styles: { halign: "right" } },
                                        { content: new j.H9("id-ID").transform(String(h.grand_total ? h.grand_total : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { fontStyle: "bold", halign: "right" } },
                                    ],
                                    [
                                        { content: "", colSpan: 3 },
                                        {
                                            content:
                                                this.nama_daerah +
                                                "," +
                                                ".".repeat(30) +
                                                "\n" +
                                                ("PLT" == (null === (t = this.skpd) || void 0 === t ? void 0 : t.status_kepala) ? "Plt. " : "") +
                                                " Kepala " +
                                                (null === (e = this.skpd) || void 0 === e ? void 0 : e.nama_skpd) +
                                                "\n".repeat(10) +
                                                (null === (n = this.skpd) || void 0 === n ? void 0 : n.nama_kepala) +
                                                "\nNIP. " +
                                                (null === (s = this.skpd) || void 0 === s ? void 0 : s.nip_kepala),
                                            colSpan: 4,
                                            styles: { halign: "center", fontStyle: "normal" },
                                        },
                                    ],
                                ],
                                showFoot: "lastPage",
                                rowPageBreak: "avoid",
                                styles: { font: "helvetica", textColor: 0 },
                                headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0, fontStyle: "bold" },
                                bodyStyles: { fontSize: 9, fillColor: 255, valign: "middle", lineWidth: 0.2, lineColor: 0 },
                                footStyles: { fontSize: 9, fillColor: 255, valign: "middle", lineWidth: 0.2, lineColor: 0 },
                            }),
                                o.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    head: [
                                        [{ content: "Pembahasan", styles: { cellWidth: 50 } }, { content: ":", styles: { cellWidth: 10, halign: "center" } }, { content: "" }],
                                        [{ content: "Tanggal", styles: { cellWidth: 50 } }, { content: ":", styles: { cellWidth: 10, halign: "center" } }, { content: "" }],
                                        [{ content: "Catatan", styles: { cellWidth: 50 } }, { content: ":", styles: { cellWidth: 10, halign: "center" } }, { content: "" }],
                                        [{ content: "1.", styles: { cellWidth: 50 }, colSpan: 3 }],
                                        [{ content: "2.", styles: { cellWidth: 50 }, colSpan: 3 }],
                                        [{ content: "Dst", styles: { cellWidth: 50 }, colSpan: 3 }],
                                    ],
                                    styles: { font: "helvetica", fontStyle: "normal", textColor: 0 },
                                    headStyles: { fontSize: 9, fillColor: 255, valign: "middle", halign: "left", lineWidth: 0.2, lineColor: 0 },
                                });
                            var v = [],
                                g = this.dataTempTAPD;
                            if (g.length > 0) for (let y = 0; y < g.length; y++) v = [{ content: y + 1, styles: { halign: "center" } }, { content: g[y].nama_tapd }, { content: g[y].nip_tapd }, { content: g[y].jabatan_tapd }];
                            else v.push([[{ content: "Data Kosong", colSpan: 5, styles: { halign: "center" } }]]);
                            var C = [];
                            for (let y = 0; y < v.length; y++) C = C.concat(v[y]);
                            o.autoTable({
                                startY: "auto",
                                theme: "grid",
                                head: [
                                    [{ content: "Tim Anggaran Pemerintahan Daerah", colSpan: 5, styles: { fontSize: 12 } }],
                                    [
                                        { content: "No", styles: { cellWidth: 10, fontSize: 9 } },
                                        { content: "Nama", styles: { fontSize: 9 } },
                                        { content: "NIP", styles: { cellWidth: 50, fontSize: 9 } },
                                        { content: "Jabatan", styles: { cellWidth: 50, fontSize: 9 } },
                                        { content: "Tanda Tangan", styles: { cellWidth: 50, fontSize: 9 } },
                                    ],
                                ],
                                body: C,
                                styles: { font: "helvetica", fontStyle: "normal", textColor: 0 },
                                headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                                bodyStyles: { fontSize: 9, fillColor: 255, valign: "middle", lineWidth: 0.2, lineColor: 0 },
                            }),
                                o.save("Sistem Informasi Pemerintahan Daerah - Cetak RKA Belanja SKPD.pdf"),
                                (this.isLoadingCetakRKA = !1);
                        }
                    }
                    getDataListRKASKPD() {
                        var t, e;
                        this.isLoading = !0;
                        const n = new FormData();
                        n.append("tahun", this.konfigurasiSession.tahun),
                            n.append("id_daerah", this.konfigurasiSession.id_daerah),
                            n.append("id_skpd", String((null === (t = this.skpd) || void 0 === t ? void 0 : t.id_skpd) || 0)),
                            n.append("id_sub_skpd", String((null === (e = this.skpd) || void 0 === e ? void 0 : e.id_unit) || 0)),
                            (this.loadDataRKASub = this.laporanService.listDataRincianSKPD(n).subscribe({
                                next: (s) => {
                                    (this.dataTemp4 = s.data), this.cetakLampiranRKASKPD();
                                },
                                error: (s) => {
                                    this.toastr.error("Data Laporan Gagal DiLoad", "Error!", { positionClass: "toast-top-right", closeButton: !0, progressBar: !0 }), (this.isLoading = !1);
                                },
                            }));
                    }
                    cetakLampiranRKASKPD() {
                        var t, e, n, s, o, l, _;
                        if (this.isLoading) {
                            let f = this.konfigurasiSession.tahun;
                            var u,
                                r = new Ja.default("p", "mm", "a3");
                            (this.body = []),
                                r.setProperties({ title: "Sistem Informasi Pemerintahan Daerah - Cetak RKA SKPD", author: "Siemen", creator: "-" }),
                                r.autoTable({
                                    startY: 7,
                                    theme: "grid",
                                    head: [
                                        [
                                            { content: "RENCANA KERJA DAN ANGGARAN\nSATUAN KERJA PERANGKAT DAERAH", styles: { fontStyle: "bold", fontSize: 15 } },
                                            { content: "Formulir\nRKA SKPD", rowSpan: 2, styles: { fontStyle: "bold", fontSize: 12, cellWidth: 70 } },
                                        ],
                                        [{ content: "Pemerintahan " + this.nama_daerah + " Tahun Anggaran " + f, styles: { fontStyle: "normal", fontSize: 12 } }],
                                    ],
                                    styles: { font: "helvetica", textColor: 0, cellPadding: [4, 0, 4, 0] },
                                    headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                                }),
                                r.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    body: [
                                        [
                                            { content: "Organisasi", styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            {
                                                content:
                                                    (null != (null === (t = this.skpd) || void 0 === t ? void 0 : t.kode_skpd) ? this.skpd.kode_skpd : "-") +
                                                    " " +
                                                    (null != (null === (e = this.skpd) || void 0 === e ? void 0 : e.nama_skpd) ? this.skpd.nama_skpd : "-"),
                                                styles: { halign: "left" },
                                            },
                                        ],
                                    ],
                                    styles: { font: "helvetica", fontStyle: "normal", fontSize: 10, textColor: 0, cellPadding: { top: 2, right: 2, bottom: 2, left: 0 } },
                                    bodyStyles: { valign: "middle", lineWidth: 0, lineColor: 0 },
                                }),
                                r.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    head: [[{ content: "Ringkasan Anggaran Pendapatan dan Belanja Daerah\nSatuan Kerja Perangkat Daerah" }]],
                                    styles: { font: "helvetica", fontStyle: "bold", fontSize: 14, textColor: 0, cellPadding: [5, 0, 5, 0] },
                                    headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                                }),
                                (u = [[{ content: "Kode Rekening", colSpan: 3 }, { content: "Uraian" }, { content: "Jumlah (Rp)", styles: { cellWidth: 90 } }]]);
                            var k,
                                m = [],
                                v = this.dataTemp4;
                            if (v) {
                                if (0 != v.jumlah_pendapatan) {
                                    var g = v.pendapatan;
                                    if (g.length > 0)
                                        for (let B = 0; B < g.length; B++)
                                            (k = [
                                                [
                                                    { content: g[B].kode_1, styles: { halign: "center", cellWidth: 10, fontStyle: "" == g[B].kode_2 || "" == g[B].kode_3 ? "bold" : "normal" } },
                                                    { content: "" != g[B].kode_2 ? g[B].kode_2.split(".")[1] : "", styles: { halign: "center", cellWidth: 10, fontStyle: "" == g[B].kode_3 ? "bold" : "normal" } },
                                                    { content: "" != g[B].kode_3 ? g[B].kode_3.split(".")[2] : "", styles: { halign: "center", cellWidth: 10 } },
                                                    { content: g[B].uraian, styles: { fontStyle: g[B].kode_1 && g[B].kode_2 && g[B].kode_3 ? "normal" : "bold" } },
                                                    {
                                                        content: "" != g[B].jumlah ? new j.H9("id-ID").transform(String(0 != g[B].jumlah ? g[B].jumlah : 0), "Rp. ", "symbol", "1.0-0", "id-ID") : "",
                                                        styles: { halign: "right", fontStyle: g[B].kode_1 && g[B].kode_2 && g[B].kode_3 ? "normal" : "bold" },
                                                    },
                                                ],
                                            ]),
                                                m.push(k);
                                    else k = [];
                                    (k = [
                                        [
                                            { content: "", colSpan: 3 },
                                            { content: "Jumlah Pendapatan", styles: { halign: "right", fontStyle: "bold" } },
                                            { content: new j.H9("id-ID").transform(String(v.jumlah_pendapatan), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { halign: "right", fontStyle: "bold" } },
                                        ],
                                    ]),
                                        m.push(k);
                                }
                                if (0 != v.jumlah_belanja) {
                                    var C = v.rincian;
                                    if (C.length > 0)
                                        for (let B = 0; B < C.length; B++)
                                            (k = [
                                                [
                                                    { content: C[B].kode_1, styles: { halign: "center", cellWidth: 10, fontStyle: "" == C[B].kode_2 || "" == C[B].kode_3 ? "bold" : "normal" } },
                                                    { content: "" != C[B].kode_2 ? C[B].kode_2.split(".")[1] : "", styles: { halign: "center", cellWidth: 10, fontStyle: "" == C[B].kode_3 ? "bold" : "normal" } },
                                                    { content: "" != C[B].kode_3 ? C[B].kode_3.split(".")[2] : "", styles: { halign: "center", cellWidth: 10 } },
                                                    { content: C[B].uraian, styles: { fontStyle: C[B].kode_1 && C[B].kode_2 && C[B].kode_3 ? "normal" : "bold" } },
                                                    {
                                                        content: "" != C[B].jumlah ? new j.H9("id-ID").transform(String(0 != C[B].jumlah ? C[B].jumlah : 0), "Rp. ", "symbol", "1.0-0", "id-ID") : "",
                                                        styles: { halign: "right", fontStyle: C[B].kode_1 && C[B].kode_2 && C[B].kode_3 ? "normal" : "bold" },
                                                    },
                                                ],
                                            ]),
                                                m.push(k);
                                    else k = [];
                                    (k = [
                                        [
                                            { content: "", colSpan: 3 },
                                            { content: "Jumlah Belanja", styles: { halign: "right", fontStyle: "bold" } },
                                            { content: new j.H9("id-ID").transform(String(v.jumlah_belanja), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { halign: "right", fontStyle: "bold" } },
                                        ],
                                    ]),
                                        m.push(k);
                                }
                                let y = v.defisit < 0 ? Math.abs(v.defisit) : v.defisit;
                                if (
                                    ((k = [
                                        [
                                            { content: "", colSpan: 3 },
                                            { content: "Total Surplus / (Defisit)", styles: { halign: "right", fontStyle: "bold" } },
                                            { content: "(" + new j.H9("id-ID").transform(String(0 != y ? y : 0), "Rp. ", "symbol", "1.0-0", "id-ID") + ")", styles: { halign: "right", fontStyle: "bold" } },
                                        ],
                                    ]),
                                    m.push(k),
                                    0 != v.pembiayaan.penerimaan || 0 != v.pembiayaan.pengeluaran || 0 != v.netto)
                                ) {
                                    m.push(
                                        (k = [
                                            [
                                                { content: "6", styles: { halign: "center", fontStyle: "bold", cellWidth: 10 } },
                                                { content: "", styles: { halign: "center", cellWidth: 10 } },
                                                { content: "", styles: { halign: "center", cellWidth: 10 } },
                                                { content: "PEMBIAYAAN", styles: { fontStyle: "bold" } },
                                            ],
                                        ])
                                    );
                                    let B = v.pembiayaan;
                                    (k = [
                                        [
                                            { content: "", colSpan: 3 },
                                            { content: "Jumlah Penerima Pembiayaan", styles: { halign: "right", fontStyle: "bold" } },
                                            { content: new j.H9("id-ID").transform(String(B.penerimaan), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { halign: "right", fontStyle: "bold" } },
                                        ],
                                    ]),
                                        m.push(k),
                                        (k = [
                                            [
                                                { content: "", colSpan: 3 },
                                                { content: "Jumlah Pengeluaran Pembiayaan", styles: { halign: "right", fontStyle: "bold" } },
                                                { content: new j.H9("id-ID").transform(String(B.pengeluaran), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { halign: "right", fontStyle: "bold" } },
                                            ],
                                        ]),
                                        m.push(k),
                                        (k = [
                                            [
                                                { content: "", colSpan: 3 },
                                                { content: "Pembiayaan Netto :", styles: { halign: "right", fontStyle: "bold" } },
                                                { content: new j.H9("id-ID").transform(String(v.netto), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { halign: "right", fontStyle: "bold" } },
                                            ],
                                        ]),
                                        m.push(k);
                                }
                            } else m.push((k = [[{ content: "Data Laporan Kosong", colSpan: 5, styles: { halign: "center" } }]]));
                            var h = [];
                            for (let y = 0; y < m.length; y++) h = h.concat(m[y]);
                            r.autoTable({
                                startY: "auto",
                                theme: "grid",
                                body: h,
                                head: u,
                                foot: [
                                    [
                                        { content: "", colSpan: 4 },
                                        {
                                            content:
                                                this.nama_daerah +
                                                "," +
                                                ".".repeat(30) +
                                                "\n" +
                                                ("PLT" == (null === (n = this.skpd) || void 0 === n ? void 0 : n.status_kepala) ? "Plt. " : "") +
                                                " Kepala " +
                                                (null === (s = this.skpd) || void 0 === s ? void 0 : s.nama_skpd) +
                                                "\n".repeat(10) +
                                                (null === (o = this.skpd) || void 0 === o ? void 0 : o.nama_kepala) +
                                                "\nNIP. " +
                                                (null === (l = this.skpd) || void 0 === l ? void 0 : l.nip_kepala),
                                            styles: { halign: "center", fontStyle: "normal" },
                                        },
                                    ],
                                ],
                                showFoot: "lastPage",
                                rowPageBreak: "avoid",
                                styles: { font: "helvetica", fontSize: 9, textColor: 0 },
                                headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0, fontStyle: "bold" },
                                bodyStyles: { fillColor: 255, valign: "middle", lineWidth: 0.2, lineColor: 0 },
                                footStyles: { fillColor: 255, valign: "middle", lineWidth: 0.2, lineColor: 0 },
                            }),
                                r.save("Sistem Informasi Pemerintahan Daerah - Cetak RKA SKPD " + (null != (null === (_ = this.skpd) || void 0 === _ ? void 0 : _.nama_skpd) ? this.skpd.nama_skpd : " Per SKPD") + ".pdf"),
                                (this.isLoading = !1);
                        }
                    }
                    getDataListRKAPembiayaan() {
                        var t, e;
                        this.isLoading = !0;
                        const n = new FormData();
                        n.append("tahun", this.konfigurasiSession.tahun),
                            n.append("id_daerah", this.konfigurasiSession.id_daerah),
                            n.append("id_skpd", String((null === (t = this.skpd) || void 0 === t ? void 0 : t.id_skpd) || 0)),
                            n.append("id_sub_skpd", String((null === (e = this.skpd) || void 0 === e ? void 0 : e.id_unit) || 0)),
                            (this.loadDataRKASub = this.laporanService.listDataRincianPembiayaan(n).subscribe({
                                next: (s) => {
                                    (this.dataTemp5 = s.data), this.cetakLampiranRKAPembiayaan();
                                },
                                error: (s) => {
                                    this.toastr.error("Data Laporan Gagal DiLoad", "Error!", { positionClass: "toast-top-right", closeButton: !0, progressBar: !0 }), (this.isLoading = !1);
                                },
                            }));
                    }
                    cetakLampiranRKAPembiayaan() {
                        var t, e, n, s, o, l, _;
                        if (this.isLoading) {
                            let c = this.konfigurasiSession.tahun;
                            var r = new Ja.default("p", "mm", "a3");
                            (this.body = []),
                                r.setProperties({ title: "Sistem Informasi Pemerintahan Daerah - Cetak RKA Pembiayaan SKPD", author: "Siemen", creator: "-" }),
                                r.autoTable({
                                    startY: 7,
                                    theme: "grid",
                                    head: [
                                        [
                                            { content: "RENCANA KERJA DAN ANGGARAN\nSATUAN KERJA PERANGKAT DAERAH", styles: { fontStyle: "bold", fontSize: 15 } },
                                            { content: "Formulir\nRKA-PEMBIAYAAN\nSKPD", rowSpan: 2, styles: { fontStyle: "bold", fontSize: 12, cellWidth: 70 } },
                                        ],
                                        [{ content: "Pemerintahan " + this.nama_daerah + " Tahun Anggaran " + c, styles: { fontStyle: "normal", fontSize: 12 } }],
                                    ],
                                    styles: { font: "helvetica", textColor: 0, cellPadding: [4, 0, 4, 0] },
                                    headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                                }),
                                r.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    body: [
                                        [
                                            { content: "Organisasi", styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            {
                                                content:
                                                    (null != (null === (t = this.skpd) || void 0 === t ? void 0 : t.kode_skpd) ? this.skpd.kode_skpd : "-") +
                                                    " " +
                                                    (null != (null === (e = this.skpd) || void 0 === e ? void 0 : e.nama_skpd) ? this.skpd.nama_skpd : "-"),
                                                styles: { halign: "left" },
                                            },
                                        ],
                                    ],
                                    styles: { font: "helvetica", fontStyle: "normal", fontSize: 10, textColor: 0, cellPadding: { top: 2, right: 2, bottom: 2, left: 0 } },
                                    bodyStyles: { valign: "middle", lineWidth: 0, lineColor: 0 },
                                }),
                                r.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    head: [[{ content: "Rincian Anggaran Pembiayaan\nSatuan Kerja Perangkat Daerah" }]],
                                    styles: { font: "helvetica", fontStyle: "bold", fontSize: 14, textColor: 0, cellPadding: [5, 0, 5, 0] },
                                    headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                                });
                            var u,
                                k,
                                m = [],
                                v = this.dataTemp5;
                            if (0 != v.penerimaan_pembiayaan.length || 0 != v.pengeluaran_pembiayaan.length) {
                                if (((u = [[{ content: "Kode Rekening", styles: { cellWidth: 30 } }, { content: "Uraian" }, { content: "Jumlah (Rp)", styles: { cellWidth: 90 } }]]), 0 != v.jumlah_penerimaan_pembiayaan)) {
                                    var g = v.penerimaan_pembiayaan;
                                    if (g.length > 0)
                                        for (let b = 0; b < g.length; b++)
                                            (k = [
                                                [
                                                    { content: g[b].kode, styles: { halign: "left", fontStyle: "normal" } },
                                                    { content: g[b].uraian, styles: { fontStyle: "normal" } },
                                                    {
                                                        content: "" != g[b].jumlah ? new j.H9("id-ID").transform(String(0 != g[b].jumlah ? g[b].jumlah : 0), "Rp. ", "symbol", "1.0-0", "id-ID") : "",
                                                        styles: { halign: "right", fontStyle: "normal" },
                                                    },
                                                ],
                                            ]),
                                                m.push(k);
                                    else k = [];
                                    (k = [
                                        [
                                            { content: "" },
                                            { content: "Jumlah Penerimaan Pembiayaan", styles: { halign: "right", fontStyle: "bold" } },
                                            { content: new j.H9("id-ID").transform(String(v.jumlah_penerimaan_pembiayaan), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { halign: "right", fontStyle: "bold" } },
                                        ],
                                    ]),
                                        m.push(k);
                                }
                                if (0 != v.jumlah_pengeluaran_pembiayaan) {
                                    var C = v.pengeluaran_pembiayaan;
                                    if (C.length > 0)
                                        for (let b = 0; b < C.length; b++)
                                            (k = [
                                                [
                                                    { content: C[b].kode, styles: { halign: "left", fontStyle: "normal" } },
                                                    { content: C[b].uraian, styles: { fontStyle: "normal" } },
                                                    {
                                                        content: "" != C[b].jumlah ? new j.H9("id-ID").transform(String(0 != C[b].jumlah ? C[b].jumlah : 0), "Rp. ", "symbol", "1.0-0", "id-ID") : "",
                                                        styles: { halign: "right", fontStyle: "normal" },
                                                    },
                                                ],
                                            ]),
                                                m.push(k);
                                    else k = [];
                                    (k = [
                                        [
                                            { content: "" },
                                            { content: "Jumlah Pengeluaran Pembiayaan", styles: { halign: "right", fontStyle: "bold" } },
                                            { content: new j.H9("id-ID").transform(String(v.jumlah_pengeluaran_pembiayaan), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { halign: "right", fontStyle: "bold" } },
                                        ],
                                    ]),
                                        m.push(k);
                                }
                            } else
                                (u = [[{ content: "Kode Rekening", styles: { cellWidth: 30 } }, { content: "Uraian" }, { content: "Jumlah (Rp)", styles: { cellWidth: 90 } }]]),
                                    m.push((k = [[{ content: "Data Laporan Kosong", colSpan: 5, styles: { halign: "center" } }]]));
                            var h = [];
                            for (let b = 0; b < m.length; b++) h = h.concat(m[b]);
                            r.autoTable({
                                startY: "auto",
                                theme: "grid",
                                body: h,
                                head: u,
                                foot: [
                                    [
                                        { content: "Jumlah Pembiayaan Netto : ", styles: { halign: "right" }, colSpan: 2 },
                                        { content: new j.H9("id-ID").transform(String(0 != v.netto ? v.netto : 0), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { fontStyle: "bold", halign: "right" } },
                                    ],
                                    [
                                        { content: "", colSpan: 2 },
                                        {
                                            content:
                                                this.nama_daerah +
                                                "," +
                                                ".".repeat(30) +
                                                "\n" +
                                                ("PLT" == (null === (n = this.skpd) || void 0 === n ? void 0 : n.status_kepala) ? "Plt. " : "") +
                                                " Kepala " +
                                                (null === (s = this.skpd) || void 0 === s ? void 0 : s.nama_skpd) +
                                                "\n".repeat(10) +
                                                (null === (o = this.skpd) || void 0 === o ? void 0 : o.nama_kepala) +
                                                "\nNIP. " +
                                                (null === (l = this.skpd) || void 0 === l ? void 0 : l.nip_kepala),
                                            styles: { halign: "center", fontStyle: "normal" },
                                        },
                                    ],
                                ],
                                showFoot: "lastPage",
                                rowPageBreak: "avoid",
                                styles: { font: "helvetica", fontSize: 9, textColor: 0 },
                                headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0, fontStyle: "bold" },
                                bodyStyles: { fillColor: 255, valign: "middle", lineWidth: 0.2, lineColor: 0 },
                                footStyles: { fillColor: 255, valign: "middle", lineWidth: 0.2, lineColor: 0 },
                            }),
                                r.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    head: [
                                        [{ content: "Pembahasan", styles: { cellWidth: 50 } }, { content: ":", styles: { cellWidth: 10, halign: "center" } }, { content: "" }],
                                        [{ content: "Tanggal", styles: { cellWidth: 50 } }, { content: ":", styles: { cellWidth: 10, halign: "center" } }, { content: "" }],
                                        [{ content: "Catatan", styles: { cellWidth: 50 } }, { content: ":", styles: { cellWidth: 10, halign: "center" } }, { content: "" }],
                                        [{ content: "1.", styles: { cellWidth: 50 }, colSpan: 3 }],
                                        [{ content: "2.", styles: { cellWidth: 50 }, colSpan: 3 }],
                                        [{ content: "Dst", styles: { cellWidth: 50 }, colSpan: 3 }],
                                    ],
                                    styles: { font: "helvetica", fontStyle: "normal", textColor: 0 },
                                    headStyles: { fillColor: 255, valign: "middle", halign: "left", lineWidth: 0.2, lineColor: 0 },
                                });
                            var y = [],
                                B = v.data_setup_tapd;
                            if (B.length > 0) for (let b = 0; b < B.length; b++) y = [{ content: b + 1, styles: { halign: "center" } }, { content: B[b].nama_tapd }, { content: B[b].nip_tapd }, { content: B[b].jabatan_tapd }];
                            else y.push([[{ content: "Data Kosong", colSpan: 5, styles: { halign: "center" } }]]);
                            var F = [];
                            for (let b = 0; b < y.length; b++) F = F.concat(y[b]);
                            r.autoTable({
                                startY: "auto",
                                theme: "grid",
                                head: [
                                    [{ content: "Tim Anggaran Pemerintahan Daerah", colSpan: 5 }],
                                    [
                                        { content: "No", styles: { cellWidth: 10 } },
                                        { content: "Nama" },
                                        { content: "NIP", styles: { cellWidth: 50 } },
                                        { content: "Jabatan", styles: { cellWidth: 50 } },
                                        { content: "Tanda Tangan", styles: { cellWidth: 50 } },
                                    ],
                                ],
                                body: F,
                                styles: { font: "helvetica", fontStyle: "normal", textColor: 0 },
                                headStyles: { fillColor: 255, valign: "middle", halign: "center", fontStyle: "bold", lineWidth: 0.2, lineColor: 0 },
                                bodyStyles: { fillColor: 255, valign: "middle", lineWidth: 0.2, lineColor: 0 },
                            }),
                                r.save("Sistem Informasi Pemerintahan Daerah - Cetak RKA Pembiayaan SKPD " + (null != (null === (_ = this.skpd) || void 0 === _ ? void 0 : _.nama_skpd) ? this.skpd.nama_skpd : " Per SKPD") + ".pdf"),
                                (this.isLoading = !1);
                        }
                    }
                    getDataListRKAPendapatan() {
                        var t, e;
                        this.isLoading = !0;
                        const n = new FormData();
                        n.append("tahun", this.konfigurasiSession.tahun),
                            n.append("id_daerah", this.konfigurasiSession.id_daerah),
                            n.append("id_skpd", String((null === (t = this.skpd) || void 0 === t ? void 0 : t.id_skpd) || 0)),
                            n.append("id_sub_skpd", String((null === (e = this.skpd) || void 0 === e ? void 0 : e.id_unit) || 0)),
                            (this.loadDataRKASub = this.laporanService.listDataRincianPendapatan(n).subscribe({
                                next: (s) => {
                                    (this.dataTemp5 = s.data), this.cetakLampiranRKAPendapatan();
                                },
                                error: (s) => {
                                    this.toastr.error("Data Laporan Gagal DiLoad", "Error!", { positionClass: "toast-top-right", closeButton: !0, progressBar: !0 }), (this.isLoading = !1);
                                },
                            }));
                    }
                    cetakLampiranRKAPendapatan() {
                        var t, e, n, s, o, l, _;
                        if (this.isLoading) {
                            let F = this.konfigurasiSession.tahun;
                            var r = new Ja.default("p", "mm", "a3");
                            (this.body = []),
                                r.setProperties({ title: "Sistem Informasi Pemerintahan Daerah - Cetak RKA Pendapatan SKPD", author: "Siemen", creator: "-" }),
                                r.autoTable({
                                    startY: 7,
                                    theme: "grid",
                                    head: [
                                        [
                                            { content: "RENCANA KERJA DAN ANGGARAN\nSATUAN KERJA PERANGKAT DAERAH", styles: { fontStyle: "bold", fontSize: 15 } },
                                            { content: "Formulir\nRKA-PENDAPATAN\nSKPD", rowSpan: 2, styles: { fontStyle: "bold", fontSize: 12, cellWidth: 70 } },
                                        ],
                                        [{ content: "Pemerintahan " + this.nama_daerah + " Tahun Anggaran " + F, styles: { fontStyle: "normal", fontSize: 12 } }],
                                    ],
                                    styles: { font: "helvetica", textColor: 0, cellPadding: [4, 0, 4, 0] },
                                    headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                                }),
                                r.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    body: [
                                        [
                                            { content: "Organisasi", styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            {
                                                content:
                                                    (null != (null === (t = this.skpd) || void 0 === t ? void 0 : t.kode_skpd) ? this.skpd.kode_skpd : "-") +
                                                    " " +
                                                    (null != (null === (e = this.skpd) || void 0 === e ? void 0 : e.nama_skpd) ? this.skpd.nama_skpd : "-"),
                                                styles: { halign: "left" },
                                            },
                                        ],
                                    ],
                                    styles: { font: "helvetica", fontStyle: "normal", fontSize: 10, textColor: 0, cellPadding: { top: 2, right: 2, bottom: 2, left: 0 } },
                                    bodyStyles: { valign: "middle", lineWidth: 0, lineColor: 0 },
                                }),
                                r.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    head: [[{ content: "Rincian Anggaran Pendapatan\nSatuan Kerja Perangkat Daerah" }]],
                                    styles: { font: "helvetica", fontStyle: "bold", fontSize: 14, textColor: 0, cellPadding: [5, 0, 5, 0] },
                                    headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                                });
                            var u,
                                k,
                                m = [],
                                v = this.dataTemp5;
                            if (v.pendapatan.length > 0) {
                                if (
                                    ((u = [
                                        [
                                            { content: "Kode Rekening", styles: { cellWidth: 30 }, rowSpan: 2 },
                                            { content: "Uraian", rowSpan: 2 },
                                            { content: "Rincian Perhitungan", colSpan: 3 },
                                            { content: "Jumlah (Rp)", rowSpan: 2 },
                                        ],
                                        [
                                            { content: "Volume / Koefisien", styles: { cellWidth: 40 } },
                                            { content: "Satuan", styles: { cellWidth: 40 } },
                                            { content: "Tarif / Harga", styles: { cellWidth: 40 } },
                                        ],
                                    ]),
                                    0 != v.jumlah_pendapatan)
                                ) {
                                    var g = v.pendapatan;
                                    if (g.length > 0)
                                        for (let c = 0; c < g.length; c++)
                                            (k = [
                                                [
                                                    { content: g[c].kode, styles: { halign: "left", fontStyle: "normal" } },
                                                    { content: g[c].uraian, styles: { fontStyle: "normal" } },
                                                    { content: g[c].volume, styles: { fontStyle: "normal", halign: "center" } },
                                                    { content: g[c].satuan, styles: { fontStyle: "normal", halign: "center" } },
                                                    { content: "" != g[c].harga ? new j.H9("id-ID").transform(String(g[c].harga), "Rp. ", "symbol", "1.0-0", "id-ID") : "", styles: { fontStyle: "normal", halign: "right" } },
                                                    {
                                                        content: "" != g[c].jumlah ? new j.H9("id-ID").transform(String(0 != g[c].jumlah ? g[c].jumlah : 0), "Rp. ", "symbol", "1.0-0", "id-ID") : "",
                                                        styles: { halign: "right", fontStyle: "normal" },
                                                    },
                                                ],
                                            ]),
                                                m.push(k);
                                    else k = [];
                                    (k = [
                                        [
                                            { content: "Jumlah Pendapatan", styles: { halign: "right", fontStyle: "bold" }, colSpan: 5 },
                                            { content: new j.H9("id-ID").transform(String(v.jumlah_pendapatan), "Rp. ", "symbol", "1.0-0", "id-ID"), styles: { halign: "right", fontStyle: "bold" } },
                                        ],
                                    ]),
                                        m.push(k);
                                }
                            } else
                                (u = [
                                    [
                                        { content: "Kode Rekening", styles: { cellWidth: 30 }, rowSpan: 2 },
                                        { content: "Uraian", rowSpan: 2 },
                                        { content: "Rincian Perhitungan", colSpan: 3 },
                                        { content: "Jumlah (Rp)", styles: { cellWidth: 90 }, rowSpan: 2 },
                                    ],
                                    [
                                        { content: "Volume / Koefisien", styles: { cellWidth: 40 } },
                                        { content: "Satuan", styles: { cellWidth: 40 } },
                                        { content: "Tarif / Harga", styles: { cellWidth: 40 } },
                                    ],
                                ]),
                                    m.push((k = [[{ content: "Data Laporan Kosong", colSpan: 6, styles: { halign: "center" } }]]));
                            var C = [];
                            for (let c = 0; c < m.length; c++) C = C.concat(m[c]);
                            r.autoTable({
                                startY: "auto",
                                theme: "grid",
                                body: C,
                                head: u,
                                foot: [
                                    [
                                        { content: "", colSpan: 4 },
                                        {
                                            content:
                                                this.nama_daerah +
                                                "," +
                                                ".".repeat(30) +
                                                "\n" +
                                                ("PLT" == (null === (n = this.skpd) || void 0 === n ? void 0 : n.status_kepala) ? "Plt. " : "") +
                                                " Kepala " +
                                                (null === (s = this.skpd) || void 0 === s ? void 0 : s.nama_skpd) +
                                                "\n".repeat(10) +
                                                (null === (o = this.skpd) || void 0 === o ? void 0 : o.nama_kepala) +
                                                "\nNIP. " +
                                                (null === (l = this.skpd) || void 0 === l ? void 0 : l.nip_kepala),
                                            colSpan: 2,
                                            styles: { halign: "center", fontStyle: "normal" },
                                        },
                                    ],
                                ],
                                showFoot: "lastPage",
                                rowPageBreak: "avoid",
                                styles: { font: "helvetica", fontSize: 9, textColor: 0 },
                                headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0, fontStyle: "bold" },
                                bodyStyles: { fillColor: 255, valign: "middle", lineWidth: 0.2, lineColor: 0 },
                                footStyles: { fillColor: 255, valign: "middle", lineWidth: 0.2, lineColor: 0 },
                            }),
                                r.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    head: [
                                        [{ content: "Pembahasan", styles: { cellWidth: 50 } }, { content: ":", styles: { cellWidth: 10, halign: "center" } }, { content: "" }],
                                        [{ content: "Tanggal", styles: { cellWidth: 50 } }, { content: ":", styles: { cellWidth: 10, halign: "center" } }, { content: "" }],
                                        [{ content: "Catatan", styles: { cellWidth: 50 } }, { content: ":", styles: { cellWidth: 10, halign: "center" } }, { content: "" }],
                                        [{ content: "1.", styles: { cellWidth: 50 }, colSpan: 3 }],
                                        [{ content: "2.", styles: { cellWidth: 50 }, colSpan: 3 }],
                                        [{ content: "Dst", styles: { cellWidth: 50 }, colSpan: 3 }],
                                    ],
                                    styles: { font: "helvetica", fontStyle: "normal", textColor: 0 },
                                    headStyles: { fillColor: 255, valign: "middle", halign: "left", lineWidth: 0.2, lineColor: 0 },
                                });
                            var f = [],
                                y = v.data_setup_tapd;
                            if (y.length > 0) for (let c = 0; c < y.length; c++) f = [{ content: c + 1, styles: { halign: "center" } }, { content: y[c].nama_tapd }, { content: y[c].nip_tapd }, { content: y[c].jabatan_tapd }];
                            else f.push([[{ content: "Data Kosong", colSpan: 5, styles: { halign: "center" } }]]);
                            var B = [];
                            for (let c = 0; c < f.length; c++) B = B.concat(f[c]);
                            r.autoTable({
                                startY: "auto",
                                theme: "grid",
                                head: [
                                    [{ content: "Tim Anggaran Pemerintahan Daerah", colSpan: 5 }],
                                    [
                                        { content: "No", styles: { cellWidth: 10 } },
                                        { content: "Nama" },
                                        { content: "NIP", styles: { cellWidth: 50 } },
                                        { content: "Jabatan", styles: { cellWidth: 50 } },
                                        { content: "Tanda Tangan", styles: { cellWidth: 50 } },
                                    ],
                                ],
                                body: B,
                                styles: { font: "helvetica", fontStyle: "normal", textColor: 0 },
                                headStyles: { fillColor: 255, valign: "middle", halign: "center", fontStyle: "bold", lineWidth: 0.2, lineColor: 0 },
                                bodyStyles: { fillColor: 255, valign: "middle", lineWidth: 0.2, lineColor: 0 },
                            }),
                                r.save("Sistem Informasi Pemerintahan Daerah - Cetak RKA Pendapatan SKPD " + (null != (null === (_ = this.skpd) || void 0 === _ ? void 0 : _.nama_skpd) ? this.skpd.nama_skpd : " Per SKPD") + ".pdf"),
                                (this.isLoading = !1);
                        }
                    }
                    getDataListRekapRKABelanjaSKPD() {
                        var t, e;
                        this.isLoading = !0;
                        const n = new FormData();
                        n.append("tahun", this.konfigurasiSession.tahun),
                            n.append("id_daerah", this.konfigurasiSession.id_daerah),
                            n.append("id_skpd", String((null === (t = this.skpd) || void 0 === t ? void 0 : t.id_skpd) || 0)),
                            n.append("id_sub_skpd", String((null === (e = this.skpd) || void 0 === e ? void 0 : e.id_unit) || 0)),
                            (this.loadDataRKASub = this.laporanService.listDataRincianRekapBelanjaSKPD(n).subscribe({
                                next: (s) => {
                                    (this.dataTemp6 = s.data), this.cetakLampiranRekapRKABelanjaSKPD();
                                },
                                error: (s) => {
                                    this.toastr.error("Data Laporan Gagal DiLoad", "Error!", { positionClass: "toast-top-right", closeButton: !0, progressBar: !0 }), (this.isLoading = !1);
                                },
                            }));
                    }
                    cetakLampiranRekapRKABelanjaSKPD() {
                        var t, e, n, s, o, l, _;
                        if (this.isLoading) {
                            let f = this.konfigurasiSession.tahun;
                            var r = new Ja.default("l", "mm", [280, 480]);
                            (this.body = []),
                                r.setProperties({ title: "Sistem Informasi Pemerintahan Daerah - Cetak Rekap RKA Belanja SKPD", author: "Siemen", creator: "-" }),
                                r.autoTable({
                                    startY: 7,
                                    theme: "grid",
                                    head: [
                                        [
                                            { content: "RENCANA KERJA DAN ANGGARAN\nSATUAN KERJA PERANGKAT DAERAH", styles: { fontStyle: "bold", fontSize: 15 } },
                                            { content: "REKAPITULASI\nRKA-BELANJA\nSKPD", rowSpan: 2, styles: { fontStyle: "bold", fontSize: 12, cellWidth: 70 } },
                                        ],
                                        [{ content: "Pemerintahan " + this.nama_daerah + " Tahun Anggaran " + f, styles: { fontStyle: "normal", fontSize: 12 } }],
                                    ],
                                    styles: { font: "helvetica", textColor: 0, cellPadding: [4, 0, 4, 0] },
                                    headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                                }),
                                r.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    body: [
                                        [
                                            { content: "Organisasi", styles: { halign: "left", cellWidth: 40 } },
                                            { content: " : ", styles: { halign: "center", cellWidth: 10 } },
                                            {
                                                content:
                                                    (null != (null === (t = this.skpd) || void 0 === t ? void 0 : t.kode_skpd) ? this.skpd.kode_skpd : "-") +
                                                    " " +
                                                    (null != (null === (e = this.skpd) || void 0 === e ? void 0 : e.nama_skpd) ? this.skpd.nama_skpd : "-"),
                                                styles: { halign: "left" },
                                            },
                                        ],
                                    ],
                                    styles: { font: "helvetica", fontStyle: "normal", fontSize: 10, textColor: 0, cellPadding: { top: 2, right: 2, bottom: 2, left: 0 } },
                                    bodyStyles: { valign: "middle", lineWidth: 0, lineColor: 0 },
                                }),
                                r.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    head: [[{ content: "Rincian Anggaran Belanja\nBerdasarkan Program dan Kegiatan" }]],
                                    styles: { font: "helvetica", fontStyle: "bold", fontSize: 14, textColor: 0, cellPadding: [5, 0, 5, 0] },
                                    headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                                });
                            var u,
                                k,
                                m = this.dataTemp6;
                            for (let y = 0; y < m.length; y++) {
                                var v = [];
                                if (
                                    (r.autoTable({
                                        startY: "auto",
                                        theme: "grid",
                                        body: [[{ content: (null != m[y].kode_skpd ? m[y].kode_skpd : "-") + " " + (null != m[y].nama_skpd ? m[y].nama_skpd : "-") }]],
                                        styles: { font: "helvetica", fontStyle: "normal", fontSize: 10, textColor: 0, cellPadding: { top: 2, right: 2, bottom: 2, left: 0 } },
                                        bodyStyles: { valign: "middle", lineWidth: 0, lineColor: 0 },
                                    }),
                                    m.length > 0)
                                ) {
                                    u = [
                                        [
                                            { content: "Kode", rowSpan: 3, colSpan: 5 },
                                            { content: "Uraian", rowSpan: 3 },
                                            { content: "Sumber Dana", rowSpan: 3 },
                                            { content: "Lokasi", rowSpan: 3 },
                                            { content: "Jumlah", colSpan: 7 },
                                        ],
                                        [
                                            { content: "Tahun - 1", rowSpan: 2 },
                                            { content: "Tahun N", colSpan: 5 },
                                            { content: "Tahun + 1", rowSpan: 2 },
                                        ],
                                        [{ content: "Belanja Operasi" }, { content: "Belanja Modal" }, { content: "Belanja Tidak Terduga" }, { content: "Belanja Transfer" }, { content: "Jumlah (Rp)" }],
                                    ];
                                    var g = m[y].data,
                                        C = m[y];
                                    for (let B = 0; B < g.length; B++)
                                        (k = [
                                            [
                                                { content: g[B].kode_urusan, styles: { cellWidth: 15, halign: "center" } },
                                                { content: g[B].kode_bidang_urusan.substring(2), styles: { cellWidth: 15, halign: "center" } },
                                                { content: g[B].kode_program.substring(5), styles: { cellWidth: 15, halign: "center" } },
                                                { content: g[B].kode_kegiatan.substring(8), styles: { cellWidth: 15, halign: "center" } },
                                                { content: g[B].kode_sub_kegiatan.substring(13), styles: { cellWidth: 15, halign: "center" } },
                                                { content: g[B].uraian },
                                                { content: g[B].sumber_dana, styles: { cellWidth: 30 } },
                                                { content: g[B].lokasi, styles: { cellWidth: 30 } },
                                                { content: "" != g[B]["tahun-1"] ? new j.H9("id-ID").transform(String(g[B]["tahun-1"]), "Rp. ", "symbol", "1.0-0", "id-ID") : "", styles: { halign: "right", cellWidth: 35 } },
                                                { content: 0 != g[B].belanja_operasi ? new j.H9("id-ID").transform(String(g[B].belanja_operasi), "Rp. ", "symbol", "1.0-0", "id-ID") : "", styles: { halign: "right", cellWidth: 35 } },
                                                { content: 0 != g[B].belanja_modal ? new j.H9("id-ID").transform(String(g[B].belanja_modal), "Rp. ", "symbol", "1.0-0", "id-ID") : "", styles: { halign: "right", cellWidth: 35 } },
                                                { content: 0 != g[B].belanja_tidak ? new j.H9("id-ID").transform(String(g[B].belanja_tidak), "Rp. ", "symbol", "1.0-0", "id-ID") : "", styles: { halign: "right", cellWidth: 35 } },
                                                { content: 0 != g[B].belanja_transfer ? new j.H9("id-ID").transform(String(g[B].belanja_transfer), "Rp. ", "symbol", "1.0-0", "id-ID") : "", styles: { halign: "right", cellWidth: 35 } },
                                                { content: 0 != g[B].belanja_jumlah ? new j.H9("id-ID").transform(String(g[B].belanja_jumlah), "Rp. ", "symbol", "1.0-0", "id-ID") : "", styles: { halign: "right", cellWidth: 35 } },
                                                { content: "" != g[B]["tahun+1"] ? new j.H9("id-ID").transform(String(g[B]["tahun+1"]), "Rp. ", "symbol", "1.0-0", "id-ID") : "", styles: { halign: "right", cellWidth: 35 } },
                                            ],
                                        ]),
                                            v.push(k);
                                    k.push([
                                        { content: "Jumlah ", colSpan: 8, styles: { halign: "right" } },
                                        { content: "", styles: { halign: "right" } },
                                        { content: 0 != C.jumlah_belanja_operasi ? new j.H9("id-ID").transform(String(C.jumlah_belanja_operasi), "Rp. ", "symbol", "1.0-0", "id-ID") : "", styles: { halign: "right" } },
                                        { content: 0 != C.jumlah_belanja_modal ? new j.H9("id-ID").transform(String(C.jumlah_belanja_modal), "Rp. ", "symbol", "1.0-0", "id-ID") : "", styles: { halign: "right" } },
                                        { content: 0 != C.jumlah_belanja_tidak ? new j.H9("id-ID").transform(String(C.jumlah_belanja_tidak), "Rp. ", "symbol", "1.0-0", "id-ID") : "", styles: { halign: "right" } },
                                        { content: 0 != C.jumlah_belanja_transfer ? new j.H9("id-ID").transform(String(C.jumlah_belanja_transfer), "Rp. ", "symbol", "1.0-0", "id-ID") : "", styles: { halign: "right" } },
                                        { content: 0 != C.jumlah_seluruh ? new j.H9("id-ID").transform(String(C.jumlah_seluruh), "Rp. ", "symbol", "1.0-0", "id-ID") : "", styles: { halign: "right" } },
                                        { content: 0 != C.jumlah_tahun_1 ? new j.H9("id-ID").transform(String(C.jumlah_tahun_1), "Rp. ", "symbol", "1.0-0", "id-ID") : "", styles: { halign: "right" } },
                                    ]);
                                } else
                                    (u = [
                                        [
                                            { content: "Kode", rowSpan: 3, colSpan: 5, styles: { cellWidth: 75 } },
                                            { content: "Uraian", rowSpan: 3 },
                                            { content: "Sumber Dana", rowSpan: 3, styles: { cellWidth: 30 } },
                                            { content: "Lokasi", rowSpan: 3, styles: { cellWidth: 30 } },
                                            { content: "Jumlah", colSpan: 7 },
                                        ],
                                        [
                                            { content: "Tahun - 1", rowSpan: 2, styles: { cellWidth: 35 } },
                                            { content: "Tahun N", colSpan: 5 },
                                            { content: "Tahun + 1", rowSpan: 2, styles: { cellWidth: 35 } },
                                        ],
                                        [
                                            { content: "Belanja Operasi", styles: { cellWidth: 35 } },
                                            { content: "Belanja Modal", styles: { cellWidth: 35 } },
                                            { content: "Belanja Tidak Terduga", styles: { cellWidth: 35 } },
                                            { content: "Belanja Transfer", styles: { cellWidth: 35 } },
                                            { content: "Jumlah (Rp)", styles: { cellWidth: 35 } },
                                        ],
                                    ]),
                                        v.push((k = [[{ content: "Data Laporan Kosong", colSpan: 15, styles: { halign: "center" } }]]));
                                var h = [];
                                for (let B = 0; B < v.length; B++) h = h.concat(v[B]);
                                r.autoTable({
                                    useCss: !0,
                                    startY: "auto",
                                    theme: "grid",
                                    head: u,
                                    body: h,
                                    rowPageBreak: "avoid",
                                    styles: { font: "helvetica", fontSize: 9, textColor: 0 },
                                    headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0, fontStyle: "bold" },
                                    bodyStyles: { fillColor: 255, valign: "middle", lineWidth: 0.2, lineColor: 0 },
                                    footStyles: { fontStyle: "bold", fillColor: 255, valign: "middle", lineWidth: 0.2, lineColor: 0 },
                                });
                            }
                            r.autoTable({
                                startY: "auto",
                                theme: "grid",
                                head: [
                                    [
                                        { content: "", colSpan: 9 },
                                        {
                                            content:
                                                this.nama_daerah +
                                                "," +
                                                ".".repeat(30) +
                                                "\n" +
                                                ("PLT" == (null === (n = this.skpd) || void 0 === n ? void 0 : n.status_kepala) ? "Plt. " : "") +
                                                " Kepala " +
                                                (null === (s = this.skpd) || void 0 === s ? void 0 : s.nama_skpd) +
                                                "\n".repeat(10) +
                                                (null === (o = this.skpd) || void 0 === o ? void 0 : o.nama_kepala) +
                                                "\nNIP. " +
                                                (null === (l = this.skpd) || void 0 === l ? void 0 : l.nip_kepala),
                                            colSpan: 6,
                                            styles: { halign: "center", fontStyle: "normal" },
                                        },
                                    ],
                                ],
                                styles: { font: "helvetica", fontStyle: "normal", fontSize: 9, textColor: 0 },
                                headStyles: { fillColor: 255, valign: "middle", lineWidth: 0.2, lineColor: 0 },
                            }),
                                r.save("Sistem Informasi Pemerintahan Daerah - Cetak Rekap RKA Belanja SKPD " + (null != (null === (_ = this.skpd) || void 0 === _ ? void 0 : _.nama_skpd) ? this.skpd.nama_skpd : " Per SKPD") + ".pdf"),
                                (this.isLoading = !1);
                        }
                    }
                    cetakLampiranRKACover() {
                        var t, e, n, s, o, l;
                        if (!this.isLoading) {
                            let r = this.konfigurasiSession.tahun;
                            var _ = new Ja.default("p", "mm", "a3");
                            let u = _.internal.pageSize.getWidth() / 2;
                            _.setProperties({ title: "Sistem Informasi Pemerintahan Daerah - Cetak Cover Dokumen Anggaran", author: "Siemen", creator: "-" }),
                                _.autoTable({
                                    head: [[{ content: "" }]],
                                    headStyles: { fillColor: 255, lineWidth: 0, lineColor: 0 },
                                    didDrawCell: (C) => {
                                        if ("localhost" == window.location.hostname) {
                                            const y = 35,
                                                B = new Image().height,
                                                c = (_.internal.pageSize.getWidth() - y) / 2,
                                                b = 15;
                                            var h;
                                            (h = "localhost" == window.location.hostname ? "./assets/media/users/logo_daerah/" + this.logo_daerah : "https://sipd-ri.kemendagri.go.id/assets/media/users/logo_daerah/" + this.logo_daerah),
                                                0 === C.row.index && 0 == C.column.index && _.addImage(h, "PNG", c, b, y, B);
                                        }
                                    },
                                }),
                                _.setFont("Times"),
                                _.setFontSize(14),
                                _.text(this.nama_daerah.toUpperCase(), u, 75, { align: "center" }),
                                _.text("RENCANA KERJA ANGGARAN\nSATUAN KERJA PERANGKAT DAERAH\n(RKA-SKPD)", u, 90, { align: "center" }),
                                _.text("TAHUN ANGGARAN " + r, u, 115, { align: "center" });
                            const m = this.subBelanjaList
                                    .filter((C, h, f) => h == f.findIndex((y) => y.nama_urusan == C.nama_urusan))
                                    .map((C) => C.nama_urusan)
                                    .join(", "),
                                g = this.subBelanjaList
                                    .filter((C, h, f) => h == f.findIndex((y) => y.nama_bidang_urusan == C.nama_bidang_urusan))
                                    .map((C) => (C.nama_bidang_urusan = C.nama_bidang_urusan.replace("URUSAN PEMERINTAHAN BIDANG ", "")))
                                    .join(", ");
                            _.autoTable({
                                startY: 130,
                                head: [
                                    [{ content: "URUSAN PEMERINTAHAN", styles: { cellWidth: 60 } }, { content: ":", styles: { cellWidth: 10, halign: "center" } }, { content: m }],
                                    [{ content: "BIDANG URUSAN", styles: { cellWidth: 60 } }, { content: ":", styles: { cellWidth: 10, halign: "center" } }, { content: g }],
                                    [{ content: "ORGANISASI", styles: { cellWidth: 60 } }, { content: ":", styles: { cellWidth: 10, halign: "center" } }, { content: null === (t = this.skpd) || void 0 === t ? void 0 : t.nama_skpd }],
                                ],
                                styles: { font: "times", fontStyle: "normal", fontSize: 12, textColor: 0 },
                                headStyles: { fillColor: 255, lineWidth: 0, lineColor: 0 },
                            }),
                                _.autoTable({
                                    startY: "auto",
                                    head: [
                                        [{ content: "Pengguna Anggaran", styles: { cellWidth: 60 } }, { content: ":", styles: { cellWidth: 10, halign: "center" } }, { content: "" }],
                                        [{ content: "a. Nama", styles: { cellWidth: 60 } }, { content: ":", styles: { cellWidth: 10, halign: "center" } }, { content: null === (e = this.skpd) || void 0 === e ? void 0 : e.nama_kepala }],
                                        [{ content: "b. NIP", styles: { cellWidth: 60 } }, { content: ":", styles: { cellWidth: 10, halign: "center" } }, { content: null === (n = this.skpd) || void 0 === n ? void 0 : n.nip_kepala }],
                                        [
                                            { content: "c. Jabatan", styles: { cellWidth: 60 } },
                                            { content: ":", styles: { cellWidth: 10, halign: "center" } },
                                            { content: null === (s = this.skpd) || void 0 === s ? void 0 : s.pangkat_kepala },
                                        ],
                                    ],
                                    styles: { font: "times", fontStyle: "normal", fontSize: 12, textColor: 0 },
                                    headStyles: { fillColor: 255, lineWidth: 0, lineColor: 0 },
                                }),
                                _.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    head: [
                                        [
                                            { content: "Kode", styles: { cellWidth: 120, halign: "center" } },
                                            { content: "Nama Formulir", styles: { halign: "center" } },
                                        ],
                                    ],
                                    body: [
                                        [{ content: "RKA-PENDAPATAN-SKPD" }, { content: "Rincian Anggaran Pendapatan SKPD" }],
                                        [{ content: "RKA-BELANJA-SKPD" }, { content: "Rincian Anggaran Belanja SKPD" }],
                                        [{ content: "RKA-PEMBIAYAAN-SKPD" }, { content: "Rincian Anggaran Pembiayaan Daerah SKPD" }],
                                    ],
                                    styles: { font: "times", fontStyle: "normal", fontSize: 12, textColor: 0 },
                                    headStyles: { fillColor: 255, lineWidth: 0.2, lineColor: 0 },
                                    bodyStyles: { fillColor: 255, lineWidth: 0.2, lineColor: 0 },
                                }),
                                _.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    head: [[{ content: "RKA REKAPITULASI *)", styles: { halign: "center" } }]],
                                    body: [
                                        [{ content: "Ringkasan APBD" }],
                                        [{ content: "Rekapitulasi Belanja per urusan" }],
                                        [{ content: "Rekapitulasi Belanja per urusan dan program" }],
                                        [{ content: "Rekapitulasi Belanja per Jenis Belanja" }],
                                    ],
                                    styles: { font: "times", fontStyle: "normal", fontSize: 12, textColor: 0 },
                                    headStyles: { fillColor: 255, lineWidth: 0.2, lineColor: 0 },
                                    bodyStyles: { fillColor: 255, lineWidth: 0.2, lineColor: 0 },
                                }),
                                _.autoTable({
                                    startY: "auto",
                                    theme: "grid",
                                    head: [
                                        [{ content: "Disetujui oleh," }, { content: "Disiapkan oleh," }],
                                        [{ content: "Pengguna Anggaran" }, { content: "Sub Bagian Program" }],
                                        [
                                            { content: "", styles: { cellWidth: 134, cellPadding: 15 } },
                                            { content: "", styles: { cellWidth: 134, cellPadding: 15 } },
                                        ],
                                        [{ content: null === (o = this.skpd) || void 0 === o ? void 0 : o.nama_kepala }, { content: "Nama" }],
                                        [{ content: "NIP: " + (null === (l = this.skpd) || void 0 === l ? void 0 : l.nip_kepala) }, { content: "NIP: \u2026\u2026\u2026." }],
                                    ],
                                    styles: { font: "times", fontStyle: "normal", halign: "center", valign: "middle", fontSize: 12, textColor: 0 },
                                    headStyles: { fillColor: 255, lineWidth: 0, lineColor: 0 },
                                }),
                                _.save("Sistem Informasi Pemerintahan Daerah - Cetak Cover Dokumen Anggaran.pdf"),
                                (this.isLoading = !1);
                        }
                    }
                    ambilArkas() {
                        var t;
                        const e = new FormData();
                        e.append("id_daerah", this.userSession.daerah_id),
                            e.append("tahun", this.konfigurasiSession.tahun),
                            e.append("rinci", String(null === (t = this.renjaJadwal) || void 0 === t ? void 0 : t.is_rinci_bl)),
                            e.append("id_user", String(this.userSession.user_id)),
                            (this.arkasIsLoading = !0),
                            this.renjaSubBelanjaService.ambilArkasDariTemp(e).subscribe({
                                next: (n) => {
                                    (this.arkasIsLoading = !1), this.toastr.success(n, "Sukses");
                                },
                                error: (n) => {
                                    const s = n.error;
                                    (this.arkasIsLoading = !1), s.hasOwnProperty("app-error") ? this.toastr.error(`${s.message}`, "Error") : this.toastr.error("Terjadi kesalahan saat memuat data akses", "Error");
                                },
                            });
                    }
                    makeid(t) {
                        let e = "";
                        const n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",
                            s = n.length;
                        let o = 0;
                        for (; o < t; ) (e += n.charAt(Math.floor(Math.random() * s))), (o += 1);
                        return e;
                    }
                    cekJadwalAktifRenstra() {
                        const t = new FormData();
                        t.append("id_daerah", this.konfigurasiSession.id_daerah),
                            t.append("tahun", this.konfigurasiSession.tahun),
                            (this.jadwalRenstraSub = this.jadwalRenstraService.cekAktif(t).subscribe({
                                next: (e) => {
                                    var n, s;
                                    e.data.length > 0
                                        ? ((this.renstraJadwal = e.data[0]),
                                          (this.tahun_awal = (null === (n = this.renstraJadwal) || void 0 === n ? void 0 : n.tahun_awal) || 0),
                                          (this.tahun_akhir = (null === (s = this.renstraJadwal) || void 0 === s ? void 0 : s.tahun_akhir) || 0))
                                        : this.toastr.info("Kesalah dalam cek jadwal renstra", "Pemberitahuan!", { positionClass: "toast-top-right", closeButton: !0, progressBar: !0 });
                                },
                            }));
                    }
                    rekapPemutakhiranSKPD() {
                        const t = new FormData();
                        t.append("tahun", this.konfigurasiSession.tahun),
                            t.append("id_daerah", this.userSession.daerah_id),
                            t.append("id_user", this.userSession.user_id),
                            t.append("id_skpd", String(this.queryParams.id_skpd || 0)),
                            this.renjaSubBelanjaService.rekapPemutakhiranSKPD(t).subscribe({
                                next: (e) => {
                                    this.rekapMutakhir = e.data;
                                },
                                error: (e) => {},
                            });
                    }
                    showDetailRekap(t) {}
                    decrip(t) {
                        let e = atob(t),
                            n = e.length - 1,
                            s = "";
                        for (; n >= 0; ) (s += e.charAt(n)), n--;
                        let o = atob(s),
                            l = o.length - 1,
                            _ = "";
                        for (; l >= 0; ) (_ += o.charAt(l)), l--;
                        return JSON.parse(_);
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(
                            a.Y36(Aa.gz),
                            a.Y36(Aa.F0),
                            a.Y36(aa.FF),
                            a.Y36(Na._W),
                            a.Y36(fl.e8),
                            a.Y36(Ra.W),
                            a.Y36(za.J),
                            a.Y36(Wa.x),
                            a.Y36($a),
                            a.Y36(Le.O),
                            a.Y36(it.b),
                            a.Y36(tt.b),
                            a.Y36(st.X),
                            a.Y36(ct.K),
                            a.Y36(It.d),
                            a.Y36(Sl.B),
                            a.Y36(jl.y),
                            a.Y36(Ce),
                            a.Y36(we.T),
                            a.Y36(Tl.A)
                        );
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-kegiatan-belanja-list"]],
                        viewQuery: function (t, e) {
                            if ((1 & t && (a.Gf(X.NW, 5), a.Gf(S.YE, 5)), 2 & t)) {
                                let n;
                                a.iGM((n = a.CRH())) && (e.paginator = n.first), a.iGM((n = a.CRH())) && (e.sort = n.first);
                            }
                        },
                        decls: 63,
                        vars: 15,
                        consts: [
                            [4, "ngIf"],
                            [1, "card", "card-xl-stretch", "mb-xl-8"],
                            [1, "card-header", "border-0", "pt-5"],
                            [1, "card-title"],
                            [1, "card-body", "py-3", "sipd-container"],
                            [1, "row", "align-items-center"],
                            [1, "col", "col-lg-2", "px-6", "py-5", "rounded-2", "me-1", "mb-1", 2, "width", "16% !important", 3, "ngClass"],
                            [1, "col"],
                            [1, "float-end", "text-light", "ms-auto"],
                            [1, "d-flex", "flex-column", "text-light-end"],
                            [1, "text-light", "fs-4", "mb-0"],
                            ["align", "right", 1, "text-light", "fs-5", "mb-0"],
                            ["ngbTooltip", "Sub Kegiatan yang perlu di mutakhirkan", "tooltipClass", "tooltip-dark", 1, "text-light", 3, "click"],
                            ["ngbTooltip", "Sumber Dana yang perlu di mutakhirkan", "tooltipClass", "tooltip-dark", 1, "text-light", 3, "click"],
                            ["ngbTooltip", "Rekening Belanja yang perlu di mutakhirkan", "tooltipClass", "tooltip-dark", 1, "text-light", 3, "click"],
                            ["ngbTooltip", "Pendapatan yang perlu di mutakhirkan", "tooltipClass", "tooltip-dark", 1, "text-light", 3, "click"],
                            ["ngbTooltip", "Pembiayaan yang perlu di mutakhirkan", "tooltipClass", "tooltip-dark", 1, "text-light", 3, "click"],
                            ["ngbTooltip", "Komponen yang perlu di mutakhirkan", "tooltipClass", "tooltip-dark", 1, "text-light", 3, "click"],
                            ["class", "card card-xl-stretch mb-xl-8", 4, "ngIf"],
                            [1, "row", "mx-5", "mt-5"],
                            [1, "text-semibold"],
                            ["class", "alert alert-warning", "role", "alert", 4, "ngIf"],
                            ["class", "row mx-5 mt-5", 4, "ngIf"],
                            [1, "row", "mx-3", "my-3"],
                            [1, "col-3"],
                            ["role", "alert", 1, "alert", "alert-primary", "mb-5"],
                            [1, "alert-heading"],
                            ["role", "alert", 1, "alert", "alert-warning", "mb-5"],
                            ["role", "alert", 1, "alert", "alert-success", "mb-5"],
                            ["role", "alert", 1, "alert", "alert-info", "mb-5"],
                            ["class", "d-flex justify-content-center align-items-center w-100 h-100 pt-5 pb-3", 4, "ngIf"],
                            [1, "card-header", "border-0", "pt-3"],
                            [1, "d-flex", "align-items-center", "position-relative", "my-1"],
                            [1, "svg-icon", "svg-icon-1", "position-absolute", "ms-4", 3, "inlineSVG"],
                            ["type", "text", "placeholder", "Pencarian", 1, "form-control", "w-250px", "ps-14", 3, "keyup"],
                            [1, "card-toolbar"],
                            ["ngbTooltip", "Ambil RKA dari Arkas", "class", "btn btn-info me-3", 3, "disabled", "click", 4, "ngIf"],
                            ["ngbTooltip", "Validasi Semua Pagu", "class", "btn btn-success me-3", 3, "disabled", "click", 4, "ngIf"],
                            ["class", "btn btn-primary", 3, "click", 4, "ngIf"],
                            ["ngbDropdown", "", 4, "ngIf"],
                            [1, "card-body", "py-3"],
                            [1, "table-responsive"],
                            ["mat-table", "", "matSort", "", "class", "table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4", 3, "dataSource", 4, "ngIf"],
                            ["showFirstLastButtons", "", 1, "pt-10", 3, "pageSizeOptions"],
                            ["role", "alert", 1, "alert", "alert-warning"],
                            ["role", "alert", 1, "alert", "alert-danger", "text-center"],
                            [1, "d-flex", "justify-content-center", "align-items-center", "w-100", "h-100", "pt-5", "pb-3"],
                            ["role", "alert"],
                            ["ngbTooltip", "Ambil RKA dari Arkas", 1, "btn", "btn-info", "me-3", 3, "disabled", "click"],
                            [1, "svg-icon", "svg-icon-3", 3, "inlineSVG"],
                            ["ngbTooltip", "Validasi Semua Pagu", 1, "btn", "btn-success", "me-3", 3, "disabled", "click"],
                            [1, "btn", "btn-primary", 3, "click"],
                            ["ngbDropdown", ""],
                            ["ngbDropdownMenu", "", 2, "z-index", "1000"],
                            ["ngbDropdownToggle", "", 1, "btn", "btn-small", "btn-light-primary", "mx-2"],
                            ["class", "svg-icon svg-icon-3", 3, "inlineSVG", 4, "ngIf"],
                            ["class", "spinner-border spinner-border-sm me-2", "role", "status", "style", "width: 17.54px; height: 17.54px", 4, "ngIf"],
                            ["role", "status", 1, "spinner-border", "spinner-border-sm", "me-2", 2, "width", "17.54px", "height", "17.54px"],
                            ["ngbDropdownItem", "", 1, "btn", "btn-small", 3, "disabled", "click"],
                            [1, "dropdown-divider"],
                            ["ngbDropdownItem", "", 1, "btn", "btn-small", 3, "click"],
                            ["ngbDropdownToggle", "", 1, "btn", "btn-small", "btn-light-success", "me-3", "mx-2"],
                            [1, "btn", "btn-small", "btn-light-success", "me-3", "mx-2"],
                            [1, "indicator-progress"],
                            [1, "spinner-border", "spinner-border-sm", "align-middle", "ms-2"],
                            ["mat-table", "", "matSort", "", 1, "table", "table-row-dashed", "table-row-gray-300", "align-middle", "gs-0", "gy-4", 3, "dataSource"],
                            ["matColumnDef", "aksi"],
                            ["mat-header-cell", "", "class", "fw-bolder text-center text-muted w-90px", 4, "matHeaderCellDef"],
                            ["mat-cell", "", "class", "text-center w-200px mx-2", 4, "matCellDef"],
                            ["matColumnDef", "teks"],
                            ["mat-header-cell", "", "class", "fw-bolder text-muted", 4, "matHeaderCellDef"],
                            ["mat-cell", "", "class", "pe-3", 4, "matCellDef"],
                            ["matColumnDef", "pagu"],
                            ["mat-cell", "", 4, "matCellDef"],
                            ["matColumnDef", "status_sub_giat"],
                            ["matColumnDef", "status_rincian"],
                            ["matColumnDef", "pagu_validasi"],
                            ["matColumnDef", "total_rincian"],
                            ["mat-header-row", "", 4, "matHeaderRowDef"],
                            ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-center", "text-muted", "w-90px"],
                            ["mat-cell", "", 1, "text-center", "w-200px", "mx-2"],
                            [1, "row"],
                            ["class", "btn btn-icon btn-light-warning btn-sm me-2", "ngbTooltip", "Ambil Indikator dari Renstra", "type", "button", 3, "click", 4, "ngIf"],
                            ["class", "btn btn-icon btn-light-primary btn-sm me-2", "ngbTooltip", "Edit Kegiatan", "type", "button", 3, "click", 4, "ngIf"],
                            ["ngbDropdown", "", "class", "d-inline-block me-2", 4, "ngIf"],
                            ["class", "btn btn-icon btn-sm btn-light-success me-2", "placement", "top", "ngbTooltip", "Validasi Pagu Belanja", 3, "disabled", "click", 4, "ngIf"],
                            ["class", "btn btn-sm btn-icon btn-light-danger", "ngbTooltip", "Hapus Kegiatan Belanja", 3, "disabled", "click", 4, "ngIf"],
                            ["ngbTooltip", "Ambil Indikator dari Renstra", "type", "button", 1, "btn", "btn-icon", "btn-light-warning", "btn-sm", "me-2", 3, "click"],
                            ["ngbTooltip", "Edit Kegiatan", "type", "button", 1, "btn", "btn-icon", "btn-light-primary", "btn-sm", "me-2", 3, "click"],
                            ["ngbDropdown", "", 1, "d-inline-block", "me-2"],
                            ["ngbDropdownItem", "", 3, "disabled", "click"],
                            ["ngbDropdownItem", "", 3, "ngClass", "disabled", "click", 4, "ngIf"],
                            ["type", "button", "ngbDropdownToggle", "", 1, "btn", "btn-light-info", "p-2"],
                            [1, "svg-icon", "svg-icon-3", 2, "-webkit-transform", "scale(1.5)", "transform", "scale(1.5)", 3, "inlineSVG"],
                            ["type", "button", 1, "btn", "btn-light-info", "p-2"],
                            ["clas", "indicator-progress"],
                            ["ngbDropdownItem", "", 3, "routerLink"],
                            ["ngbDropdownItem", "", 3, "ngClass", "disabled", "click"],
                            ["placement", "top", "ngbTooltip", "Validasi Pagu Belanja", 1, "btn", "btn-icon", "btn-sm", "btn-light-success", "me-2", 3, "disabled", "click"],
                            ["ngbTooltip", "Hapus Kegiatan Belanja", 1, "btn", "btn-sm", "btn-icon", "btn-light-danger", 3, "disabled", "click"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-muted"],
                            ["mat-cell", "", 1, "pe-3"],
                            ["class", "mb-0", 4, "ngIf"],
                            [3, "ngbCollapse", "ngbCollapseChange", 4, "ngIf"],
                            [1, "mb-0"],
                            ["role", "button", 1, "text-primary", 3, "click"],
                            ["class", "badge badge-warning svg-icon svg-icon-3 p-0", "ngbTooltip", "Sub Kegiatan telah di non aktifkan. Silahkan mutakhirkan Sub Kegiatan anda", 3, "inlineSVG", 4, "ngIf"],
                            ["class", "badge badge-light-success svg-icon svg-icon-3 p-0", 3, "inlineSVG", 4, "ngIf"],
                            ["class", "badge badge-danger", 4, "ngIf"],
                            ["ngbTooltip", "Sub Kegiatan telah di non aktifkan. Silahkan mutakhirkan Sub Kegiatan anda", 1, "badge", "badge-warning", "svg-icon", "svg-icon-3", "p-0", 3, "inlineSVG"],
                            [1, "badge", "badge-light-success", "svg-icon", "svg-icon-3", "p-0", 3, "inlineSVG"],
                            [1, "badge", "badge-danger"],
                            [1, "text-white", 3, "click"],
                            [3, "ngbCollapse", "ngbCollapseChange"],
                            ["collapse", "ngbCollapse"],
                            ["role", "alert", 1, "alert", "alert-secondary"],
                            ["mat-cell", ""],
                            ["class", "mb-0", "style", "color: red", 4, "ngIf"],
                            [1, "mb-0", 2, "color", "red"],
                            ["mat-header-row", ""],
                            ["mat-row", ""],
                        ],
                        template: function (t, e) {
                            1 & t &&
                                (a.YNc(0, Bl, 1, 0, "app-loading-spinner", 0),
                                a.YNc(1, xl, 2, 0, "div", 0),
                                a.TgZ(2, "div", 1)(3, "div", 2)(4, "div", 3),
                                a._uU(5, " Informasi Pemutakhiran Data "),
                                a.qZA()(),
                                a.TgZ(6, "div", 4)(7, "div", 5)(8, "div", 6)(9, "div", 7)(10, "span", 8),
                                a._UZ(11, "div", 9),
                                a.qZA(),
                                a.TgZ(12, "h6", 10),
                                a._uU(13, "Sub Kegiatan"),
                                a.qZA()(),
                                a.TgZ(14, "h4", 11)(15, "a", 12),
                                a.NdJ("click", function () {
                                    return e.showDetailRekap("sub_giat");
                                }),
                                a._uU(16),
                                a.qZA()()(),
                                a.TgZ(17, "div", 6)(18, "div", 7)(19, "span", 8),
                                a._UZ(20, "div", 9),
                                a.qZA(),
                                a.TgZ(21, "h6", 10),
                                a._uU(22, "Sumber Dana"),
                                a.qZA()(),
                                a.TgZ(23, "h4", 11)(24, "a", 13),
                                a.NdJ("click", function () {
                                    return e.showDetailRekap("sumber_dana");
                                }),
                                a._uU(25),
                                a.qZA()()(),
                                a.TgZ(26, "div", 6)(27, "div", 7)(28, "span", 8),
                                a._UZ(29, "div", 9),
                                a.qZA(),
                                a.TgZ(30, "h6", 10),
                                a._uU(31, "Rekening Belanja"),
                                a.qZA()(),
                                a.TgZ(32, "h4", 11)(33, "a", 14),
                                a.NdJ("click", function () {
                                    return e.showDetailRekap("rekening_bl");
                                }),
                                a._uU(34),
                                a.qZA()()(),
                                a.TgZ(35, "div", 6)(36, "div", 7)(37, "span", 8),
                                a._UZ(38, "div", 9),
                                a.qZA(),
                                a.TgZ(39, "h6", 10),
                                a._uU(40, "Pendapatan"),
                                a.qZA()(),
                                a.TgZ(41, "h4", 11)(42, "a", 15),
                                a.NdJ("click", function () {
                                    return e.showDetailRekap("pendapatan");
                                }),
                                a._uU(43),
                                a.qZA()()(),
                                a.TgZ(44, "div", 6)(45, "div", 7)(46, "span", 8),
                                a._UZ(47, "div", 9),
                                a.qZA(),
                                a.TgZ(48, "h6", 10),
                                a._uU(49, "Pembiayaan"),
                                a.qZA()(),
                                a.TgZ(50, "h4", 11)(51, "a", 16),
                                a.NdJ("click", function () {
                                    return e.showDetailRekap("pembiayaan");
                                }),
                                a._uU(52),
                                a.qZA()()(),
                                a.TgZ(53, "div", 6)(54, "div", 7)(55, "span", 8),
                                a._UZ(56, "div", 9),
                                a.qZA(),
                                a.TgZ(57, "h6", 10),
                                a._uU(58, "Komponen Belanja"),
                                a.qZA()(),
                                a.TgZ(59, "h4", 11)(60, "a", 17),
                                a.NdJ("click", function () {
                                    return e.showDetailRekap("ssh");
                                }),
                                a._uU(61),
                                a.qZA()()()()()(),
                                a.YNc(62, Yr, 53, 39, "div", 18)),
                                2 & t &&
                                    (a.Q6J("ngIf", e.jadwalCekAktifIsLoading || e.skpdListIsLoading || e.skpdViewIsLoading || e.bidangUrusanListIsLoading || e.subBelanjaListIsLoading || e.rincianBelanjaIsLoading || !e.currentUser),
                                    a.xp6(1),
                                    a.Q6J("ngIf", !e.jadwalCekAktifIsLoading && !e.skpdListIsLoading && !e.skpdViewIsLoading && !e.bidangUrusanListIsLoading && !e.subBelanjaListIsLoading && !e.rincianBelanjaIsLoading && e.currentUser),
                                    a.xp6(7),
                                    a.Q6J("ngClass", (null == e.rekapMutakhir ? null : e.rekapMutakhir.sub_giat) > 0 ? "bg-danger" : "bg-success"),
                                    a.xp6(8),
                                    a.Oqu(null == e.rekapMutakhir ? null : e.rekapMutakhir.sub_giat),
                                    a.xp6(1),
                                    a.Q6J("ngClass", (null == e.rekapMutakhir ? null : e.rekapMutakhir.sumber_dana) > 0 ? "bg-danger" : "bg-success"),
                                    a.xp6(8),
                                    a.Oqu(null == e.rekapMutakhir ? null : e.rekapMutakhir.sumber_dana),
                                    a.xp6(1),
                                    a.Q6J("ngClass", (null == e.rekapMutakhir ? null : e.rekapMutakhir.rekening_bl) > 0 ? "bg-danger" : "bg-success"),
                                    a.xp6(8),
                                    a.Oqu(null == e.rekapMutakhir ? null : e.rekapMutakhir.rekening_bl),
                                    a.xp6(1),
                                    a.Q6J("ngClass", (null == e.rekapMutakhir ? null : e.rekapMutakhir.pendapatan) > 0 ? "bg-danger" : "bg-success"),
                                    a.xp6(8),
                                    a.Oqu(null == e.rekapMutakhir ? null : e.rekapMutakhir.pendapatan),
                                    a.xp6(1),
                                    a.Q6J("ngClass", (null == e.rekapMutakhir ? null : e.rekapMutakhir.pembiayaan) > 0 ? "bg-danger" : "bg-success"),
                                    a.xp6(8),
                                    a.Oqu(null == e.rekapMutakhir ? null : e.rekapMutakhir.pembiayaan),
                                    a.xp6(1),
                                    a.Q6J("ngClass", (null == e.rekapMutakhir ? null : e.rekapMutakhir.ssh) > 0 ? "bg-danger" : "bg-success"),
                                    a.xp6(8),
                                    a.Oqu(null == e.rekapMutakhir ? null : e.rekapMutakhir.ssh),
                                    a.xp6(1),
                                    a.Q6J("ngIf", !e.jadwalCekAktifIsLoading && !e.skpdListIsLoading && !e.bidangUrusanListIsLoading && !e.subBelanjaListIsLoading && !e.rincianBelanjaIsLoading && e.currentUser && e.setupUnit && e.skpd));
                        },
                        directives: [j.O5, Ha.g, Il.H, j.mk, aa._L, Ma.d$, aa.jt, aa.iD, aa.Vi, aa.TH, L.BZ, S.YE, L.w1, L.fO, L.ge, L.Dz, L.ev, Aa.yS, aa._D, L.as, L.XQ, L.nj, L.Gk, X.NW],
                        pipes: [j.H9],
                        styles: [""],
                    })),
                    i
                );
            })();
            var Gr = D(54968),
                Qr = D(68675),
                Re = D(95698),
                Or = D(32609),
                Bt = D(1836),
                Er = D(985),
                xt = D(81570),
                Hr = D(18255);
            const $r = ["dokumenForm"];
            function zr(i, d) {
                1 & i && (a.TgZ(0, "div", 6), a._UZ(1, "div", 7), a.qZA());
            }
            function Vr(i, d) {
                1 & i && (a.ynx(0), a._uU(1, "Simpan"), a.BQk());
            }
            function Xr(i, d) {
                1 & i && (a.ynx(0), a.TgZ(1, "span", 20), a._uU(2), a._UZ(3, "span", 21), a.qZA(), a.BQk()), 2 & i && (a.xp6(1), a.Udp("display", "block"), a.xp6(1), a.hij(" Menyimpan...", " ", " "));
            }
            function ad(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "form", 10),
                        a.NdJ("submit", function () {
                            return a.CHM(t), a.oxw(2).onSubmit();
                        }),
                        a.TgZ(1, "div", 11)(2, "div", 12)(3, "label", 13),
                        a._uU(4, "Dokumen"),
                        a.qZA(),
                        a.TgZ(5, "div", 14)(6, "input", 15, 16),
                        a.NdJ("change", function (n) {
                            return a.CHM(t), a.oxw(2).onFileSelected(n);
                        }),
                        a.qZA(),
                        a.TgZ(8, "div", 17),
                        a._uU(9, " Dokumen yang di upload adalah file .pdf & Maksimal ukuran file 80 MB "),
                        a.qZA()()()(),
                        a.TgZ(10, "div", 18)(11, "button", 19),
                        a.YNc(12, Vr, 2, 0, "ng-container", 5),
                        a.YNc(13, Xr, 4, 3, "ng-container", 5),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw(2);
                    a.Q6J("formGroup", t.dokumentasiForm), a.xp6(11), a.Q6J("disabled", t.dokumentasiForm.invalid || t.isSaving), a.xp6(1), a.Q6J("ngIf", !t.isSaving), a.xp6(1), a.Q6J("ngIf", t.isSaving);
                }
            }
            function td(i, d) {
                if ((1 & i && (a.TgZ(0, "div")(1, "div", 8), a.YNc(2, ad, 14, 4, "form", 9), a.qZA()()), 2 & i)) {
                    const t = a.oxw();
                    a.xp6(2), a.Q6J("ngIf", t.dokumentasiForm);
                }
            }
            let ed = (() => {
                class i {
                    constructor(t, e, n, s, o) {
                        (this.modal = t),
                            (this.activeModal = e),
                            (this.dokUploadService = n),
                            (this.subRkpdService = s),
                            (this.toastr = o),
                            (this.pageTitle = "Upload Dokumentasi RKPD"),
                            (this.isLoading = !1),
                            (this.isSaving = !1),
                            (this.subTahap = "");
                    }
                    ngOnInit() {
                        this.loadSubtahap(), this.buildForm();
                    }
                    ngOnDestroy() {
                        var t, e, n;
                        null === (t = this.subTahapSub) || void 0 === t || t.unsubscribe(), null === (e = this.dokumentasiSub) || void 0 === e || e.unsubscribe(), null === (n = this.updateDokumentasiSub) || void 0 === n || n.unsubscribe();
                    }
                    onSubmit() {
                        var t;
                        (this.isSaving = !0), null === (t = this.dokumentasiForm) || void 0 === t || t.disable();
                        const e = new FormData();
                        e.append("id_user_log", this.id_user),
                            e.append("id_daerah_log", this.id_daerah),
                            e.append("tahun", this.tahun),
                            e.append("id_daerah", this.id_daerah),
                            e.append("id_dok", String(this.id_dok)),
                            e.append("kode_tahap", String(this.kode_tahap)),
                            e.append("dokumen_teks", this.dokumen_teks),
                            this.subTahap && e.append("sub_tahap_teks", this.subTahap),
                            e.append("tipe_tahap", this.tipe_tahap),
                            e.append("dokumen", this.file, this.file.name),
                            e.append("created_user", this.id_user),
                            (this.dokumentasiSub = this.dokUploadService.upload(e).subscribe({
                                next: (n) => {
                                    var s;
                                    n.hasOwnProperty("app-confirm")
                                        ? this.modalUpdateDokumen(n.message)
                                        : (this.toastr.success("Upload dokumen berhasil", "Sukses"), (this.isSaving = !1), null === (s = this.dokumentasiForm) || void 0 === s || s.enable(), this.activeModal.close());
                                },
                                error: (n) => {
                                    var s;
                                    this.toastr.error("Terjadi kesalahan saat melakukan upload", "Error!"), (this.isSaving = !1), null === (s = this.dokumentasiForm) || void 0 === s || s.enable(), this.activeModal.dismiss();
                                },
                            }));
                    }
                    onFileSelected(t) {
                        var e, n, s, o;
                        return (
                            (this.file = t.target.files[0]),
                            84e6 < this.file.size
                                ? (this.toastr.error("Ukuran file melebihi batas maksimal ukuran yang ditetapkan", "Kesalahan"),
                                  (this.dokumenFormVariable.nativeElement.value = ""),
                                  void (null === (n = null === (e = this.dokumentasiForm) || void 0 === e ? void 0 : e.get("dokumen_file")) || void 0 === n || n.setValue("")))
                                : ["application/pdf"].includes(this.file.type)
                                ? void 0
                                : (this.toastr.error("Tipe file tidak didukung, file yang di upload harus bertipe .pdf", "Kesalahan"),
                                  (this.dokumenFormVariable.nativeElement.value = ""),
                                  void (null === (o = null === (s = this.dokumentasiForm) || void 0 === s ? void 0 : s.get("dokumen_file")) || void 0 === o || o.setValue("")))
                        );
                    }
                    buildForm() {
                        this.dokumentasiForm = new p.cw({ dokumen_file: new p.NI("", p.kI.required) });
                    }
                    loadSubtahap() {
                        (this.isLoading = !0),
                            (this.subTahapSub = this.subRkpdService.view(String(this.id_sub_tahap)).subscribe({
                                next: (t) => {
                                    t.data.length > 0 && (this.subTahap = t.data[0].sub_rkpd_teks), (this.isLoading = !1);
                                },
                                error: (t) => {
                                    (this.subTahap = ""), (this.isLoading = !1);
                                },
                            }));
                    }
                    modalUpdateDokumen(t) {
                        const e = this.modal.open(Qa.D, { size: "md" });
                        (e.componentInstance.tipe_icon = "exclamation"),
                            (e.componentInstance.warna_icon = "warning"),
                            (e.componentInstance.isi_text = t),
                            (e.componentInstance.tombol_true_text = "Ya, Update Dokumen!"),
                            (e.componentInstance.tombol_false_text = "Tidak"),
                            e.result.then(
                                (n) => {
                                    var s;
                                    if (n) {
                                        const o = new FormData();
                                        o.append("id_user_log", this.id_user),
                                            o.append("id_daerah_log", this.id_daerah),
                                            o.append("tahun", this.tahun),
                                            o.append("id_daerah", this.id_daerah),
                                            o.append("id_dok", String(this.id_dok)),
                                            o.append("kode_tahap", String(this.kode_tahap)),
                                            o.append("dokumen_teks", this.dokumen_teks),
                                            this.subTahap && o.append("sub_tahap_teks", this.subTahap),
                                            o.append("tipe_tahap", this.tipe_tahap),
                                            o.append("dokumen", this.file, this.file.name),
                                            o.append("update_file", "Y"),
                                            o.append("updated_user", this.id_user),
                                            (this.updateDokumentasiSub = this.dokUploadService.upload(o).subscribe({
                                                next: (l) => {
                                                    var _;
                                                    (this.isSaving = !1), this.toastr.success("Update dokumen berhasil", "Sukses"), null === (_ = this.dokumentasiForm) || void 0 === _ || _.enable(), this.activeModal.close();
                                                },
                                                error: (l) => {
                                                    (this.isSaving = !1), this.toastr.error("Terjadi kesalahan saat melakukan upload", "Error!"), this.activeModal.dismiss();
                                                },
                                            }));
                                    } else (this.isSaving = !1), null === (s = this.dokumentasiForm) || void 0 === s || s.enable();
                                },
                                (n) => {
                                    var s;
                                    (this.isSaving = !1), null === (s = this.dokumentasiForm) || void 0 === s || s.enable();
                                }
                            );
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(aa.FF), a.Y36(aa.Kz), a.Y36(xt.B), a.Y36(Hr.u), a.Y36(Na._W));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-dokumentasi-upload"]],
                        viewQuery: function (t, e) {
                            if ((1 & t && a.Gf($r, 5), 2 & t)) {
                                let n;
                                a.iGM((n = a.CRH())) && (e.dokumenFormVariable = n.first);
                            }
                        },
                        inputs: { id_user: "id_user", tahun: "tahun", id_daerah: "id_daerah", id_dok: "id_dok", kode_tahap: "kode_tahap", dokumen_teks: "dokumen_teks", id_sub_tahap: "id_sub_tahap", tipe_tahap: "tipe_tahap" },
                        decls: 7,
                        vars: 3,
                        consts: [
                            [1, "modal-header"],
                            [1, "fw-bolder", "m-0"],
                            ["type", "button", "aria-label", "Close", 1, "btn-close", 3, "click"],
                            [1, "card", "mb-5", "mb-xl-10"],
                            ["class", "d-flex justify-content-center mt-20 mb-20", 4, "ngIf"],
                            [4, "ngIf"],
                            [1, "d-flex", "justify-content-center", "mt-20", "mb-20"],
                            [1, "spinner-border"],
                            [1, "collapse", "show"],
                            ["novalidate", "", "class", "form", 3, "formGroup", "submit", 4, "ngIf"],
                            ["novalidate", "", 1, "form", 3, "formGroup", "submit"],
                            [1, "card-body", "border-top", "p-9"],
                            [1, "row", "mb-6"],
                            ["for", "dokumen_file", 1, "col-lg-4", "col-form-label", "required", "fw-bold", "fs-6"],
                            [1, "col-lg-8", "fv-row"],
                            ["id", "dokumen_file", "type", "file", "placeholder", "Upload Dokumen", "formControlName", "dokumen_file", "aria-describedby", "dokumen_file_description", 1, "form-control", 3, "change"],
                            ["dokumenForm", ""],
                            ["id", "dokumen_file_description", 1, "form-text", "text-danger"],
                            [1, "card-footer", "d-flex", "justify-content-end", "py-6", "px-9"],
                            ["type", "submit", 1, "btn", "btn-success", 3, "disabled"],
                            ["clas", "indicator-progress"],
                            [1, "spinner-border", "spinner-border-sm", "align-middle", "ms-2"],
                        ],
                        template: function (t, e) {
                            1 & t &&
                                (a.TgZ(0, "div", 0)(1, "h3", 1),
                                a._uU(2),
                                a.qZA(),
                                a.TgZ(3, "button", 2),
                                a.NdJ("click", function () {
                                    return e.activeModal.dismiss("Cross click");
                                }),
                                a.qZA()(),
                                a.TgZ(4, "div", 3),
                                a.YNc(5, zr, 2, 0, "div", 4),
                                a.YNc(6, td, 3, 1, "div", 5),
                                a.qZA()),
                                2 & t && (a.xp6(2), a.Oqu(e.pageTitle), a.xp6(3), a.Q6J("ngIf", e.isLoading), a.xp6(1), a.Q6J("ngIf", !e.isLoading));
                        },
                        directives: [j.O5, p._Y, p.JL, p.sg, p.Fj, p.JJ, p.u],
                        styles: [""],
                    })),
                    i
                );
            })();
            function nd(i, d) {
                1 & i && (a.TgZ(0, "div", 6), a._UZ(1, "div", 7), a.qZA());
            }
            function id(i, d) {
                1 & i && (a.TgZ(0, "th", 29), a._uU(1, " Uraian Dokumen "), a.qZA());
            }
            function sd(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 30), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.xp6(1), a.Oqu(t.dokumen_teks);
                }
            }
            function od(i, d) {
                1 & i && (a.TgZ(0, "th", 31), a._uU(1, " Status Upload "), a.qZA());
            }
            function ld(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 30), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.xp6(1), a.Oqu(t.status);
                }
            }
            function rd(i, d) {
                1 & i && (a.TgZ(0, "th", 32), a._uU(1, " Aksi "), a.qZA());
            }
            function dd(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 37),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw().$implicit;
                            return a.oxw(2).onClickUploadFile(n.upload);
                        }),
                        a._UZ(1, "span", 36),
                        a.qZA();
                }
                2 & i && (a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen021.svg"));
            }
            function ud(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "td", 33),
                        a.YNc(1, dd, 2, 1, "button", 34),
                        a.TgZ(2, "button", 35),
                        a.NdJ("click", function () {
                            const s = a.CHM(t).$implicit;
                            return a.oxw(2).onClickUploadDocument(s);
                        }),
                        a._UZ(3, "span", 36),
                        a.qZA()();
                }
                if (2 & i) {
                    const t = d.$implicit;
                    a.xp6(1), a.Q6J("ngIf", t.isUpload), a.xp6(2), a.Q6J("inlineSVG", "./assets/media/icons/duotune/arrows/arr078.svg");
                }
            }
            function _d(i, d) {
                1 & i && a._UZ(0, "tr", 38);
            }
            function pd(i, d) {
                1 & i && a._UZ(0, "tr", 39);
            }
            function cd(i, d) {
                if ((1 & i && (a.TgZ(0, "table")(1, "tr")(2, "td"), a._uU(3, " No record found "), a.qZA()()()), 2 & i)) {
                    const t = a.oxw(2);
                    a.xp6(2), a.Udp("text-align", "center"), a.uIk("colspan", t.displayedColumns.length);
                }
            }
            const hd = function () {
                return [5];
            };
            function gd(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 8)(1, "div", 9)(2, "div", 10),
                        a._UZ(3, "span", 11),
                        a.TgZ(4, "input", 12),
                        a.NdJ("keyup", function (n) {
                            return a.CHM(t), a.oxw().applyFilter(n);
                        }),
                        a.qZA()(),
                        a.TgZ(5, "div", 13)(6, "table", 14),
                        a.ynx(7, 15),
                        a.YNc(8, id, 2, 0, "th", 16),
                        a.YNc(9, sd, 2, 1, "td", 17),
                        a.BQk(),
                        a.ynx(10, 18),
                        a.YNc(11, od, 2, 0, "th", 19),
                        a.YNc(12, ld, 2, 1, "td", 17),
                        a.BQk(),
                        a.ynx(13, 20),
                        a.YNc(14, rd, 2, 0, "th", 21),
                        a.YNc(15, ud, 4, 2, "td", 22),
                        a.BQk(),
                        a.YNc(16, _d, 1, 0, "tr", 23),
                        a.YNc(17, pd, 1, 0, "tr", 24),
                        a.qZA(),
                        a.YNc(18, cd, 4, 3, "table", 25),
                        a._UZ(19, "mat-paginator", 26),
                        a.qZA()(),
                        a.TgZ(20, "div", 27)(21, "button", 28),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().activeModal.dismiss();
                        }),
                        a._uU(22, " Tutup "),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw();
                    a.xp6(3),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen021.svg"),
                        a.xp6(3),
                        a.Q6J("dataSource", t.dataSource),
                        a.xp6(10),
                        a.Q6J("matHeaderRowDef", t.displayedColumns),
                        a.xp6(1),
                        a.Q6J("matRowDefColumns", t.displayedColumns),
                        a.xp6(1),
                        a.Q6J("ngIf", !t.dataSource.data.length),
                        a.xp6(1),
                        a.Q6J("pageSizeOptions", a.DdM(6, hd));
                }
            }
            let md = (() => {
                class i {
                    constructor(t, e, n, s, o) {
                        (this.toastr = t),
                            (this.daerahService = e),
                            (this.dokUploadService = n),
                            (this.modal = s),
                            (this.activeModal = o),
                            (this.API_URL_MEDIA = `${Ka.N.apiUrlMedia}`),
                            (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))),
                            (this.konfigurasiSession = JSON.parse(localStorage.getItem("sipd-konfigurasi"))),
                            (this.pageTitle = ""),
                            (this.isLoading = !1),
                            (this.dokumenisLoaded = !1),
                            (this.uploadisLoaded = !1),
                            (this.dokumenTemp = []),
                            (this.uploadTemp = []),
                            (this.displayData = []),
                            (this.displayedColumns = ["aksi", "dokumen_teks", "status"]),
                            (this.dataSource = new L.by(this.ELEMENT_DATA));
                    }
                    set paginator(t) {
                        this.dataSource.paginator = t;
                    }
                    set sort(t) {
                        this.dataSource.sort = t;
                    }
                    ngOnInit() {
                        (this.pageTitle = this.tahapan), this.loadDaerah();
                    }
                    ngOnDestroy() {
                        var t, e, n;
                        null === (t = this.daerahSub) || void 0 === t || t.unsubscribe(), null === (e = this.dokumenSub) || void 0 === e || e.unsubscribe(), null === (n = this.uploadSub) || void 0 === n || n.unsubscribe();
                    }
                    applyFilter(t) {
                        let e;
                        (e = t.target.value), (this.dataSource.filter = null == e ? void 0 : e.toLowerCase());
                    }
                    onClickUploadDocument(t) {
                        const e = this.modal.open(ed, { size: "lg" });
                        (e.componentInstance.id_user = this.userSession.user_id),
                            (e.componentInstance.tahun = this.konfigurasiSession.tahun),
                            (e.componentInstance.id_daerah = this.userSession.daerah_id),
                            (e.componentInstance.id_dok = t.id_dok),
                            (e.componentInstance.kode_tahap = t.kode_tahap),
                            (e.componentInstance.dokumen_teks = t.dokumen_teks),
                            (e.componentInstance.id_sub_tahap = this.id_sub_tahap),
                            (e.componentInstance.tipe_tahap = this.tipe_tahap),
                            e.result.then(
                                (n) => {
                                    this.loadData();
                                },
                                (n) => {}
                            );
                    }
                    onClickUploadFile(t) {
                        const e = t.tahun,
                            n = t.id_daerah,
                            s = t.dokumen_file,
                            o = new FormData();
                        o.append("tahun", e),
                            o.append("id_daerah", n),
                            o.append("tipe_tahap", this.tipe_tahap),
                            o.append("file_name", s),
                            (this.viewSub = this.dokUploadService.cekDokumen(o).subscribe({
                                next: (l) => {
                                    window.open(`${this.API_URL_MEDIA}/dok_perencanaan_upload/${this.tipe_tahap}/${e}/${n}/${s}`);
                                },
                                error: (l) => {
                                    this.toastr.error("File tidak ditemukan", "Kesalahan");
                                },
                            }));
                    }
                    loadData() {
                        this.isLoading = !0;
                        const t = new FormData();
                        t.append("kode_tahap", String(this.id_tahap)),
                            t.append("tipe", this.tipe),
                            (this.dokumenSub = this.dokUploadService.listDokumenDashboard(t).subscribe({
                                next: (n) => {
                                    (this.dokumenTemp = n.data), (this.dokumenisLoaded = !0), this.buildDataSource();
                                },
                                error: (n) => {
                                    this.toastr.error("Terjadi kesalahan saat memuat data", "Error"), (this.dokumenisLoaded = !0);
                                },
                            }));
                        const e = new FormData();
                        e.append("kode_tahap", String(this.id_tahap)),
                            e.append("tahun", this.konfigurasiSession.tahun),
                            e.append("id_daerah", this.userSession.daerah_id),
                            (this.uploadSub = this.dokUploadService.listUploadDashboard(e).subscribe({
                                next: (n) => {
                                    (this.uploadTemp = n.data), (this.uploadisLoaded = !0), this.buildDataSource();
                                },
                                error: (n) => {
                                    this.toastr.error("Terjadi kesalahan saat memuat data", "Error"), (this.uploadisLoaded = !0);
                                },
                            }));
                    }
                    loadDaerah() {
                        this.isLoading = !0;
                        const t = String(this.userSession.daerah_id);
                        this.daerahSub = this.daerahService.view(t).subscribe({
                            next: (e) => {
                                (this.daerah = e.data[0]), (this.tipe = this.daerah.is_prop ? "prov" : "kabkot"), this.loadData();
                            },
                            error: (e) => {
                                this.toastr.error("Terjadi kesalahan saat memuat data", "Error"), (this.isLoading = !1);
                            },
                        });
                    }
                    buildDataSource() {
                        this.dokumenisLoaded &&
                            this.uploadisLoaded &&
                            ((this.displayData = []),
                            (this.displayData = this.dokumenTemp.map((t) => {
                                const e = this.uploadTemp.find((n) => n.id_dok === t.id_dok && n.kode_tahap === t.kode_tahap);
                                return Object.assign(Object.assign({}, t), e ? { isUpload: !0, status: "Sudah Diupload", upload: Object.assign({}, e) } : { isUpload: !1, status: "Belum Diupload" });
                            })),
                            this.displayData.sort((t, e) => t.urutan_dok - e.urutan_dok),
                            (this.dataSource.data = this.displayData),
                            (this.dataSource.paginator = this.paginator),
                            (this.dataSource.sort = this.sort),
                            (this.isLoading = !1));
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(Na._W), a.Y36(nt.E), a.Y36(xt.B), a.Y36(aa.FF), a.Y36(aa.Kz));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-dokumentasi-tahapan"]],
                        viewQuery: function (t, e) {
                            if ((1 & t && (a.Gf(X.NW, 5), a.Gf(S.YE, 5)), 2 & t)) {
                                let n;
                                a.iGM((n = a.CRH())) && (e.paginator = n.first), a.iGM((n = a.CRH())) && (e.sort = n.first);
                            }
                        },
                        inputs: { tipe_tahap: "tipe_tahap", tahapan: "tahapan", id_tahap: "id_tahap", id_sub_tahap: "id_sub_tahap" },
                        decls: 7,
                        vars: 3,
                        consts: [
                            [1, "modal-header"],
                            [1, "fw-bolder", "m-0"],
                            ["type", "button", "aria-label", "Close", 1, "btn-close", 3, "click"],
                            [1, "card", "mb-5"],
                            ["class", "d-flex justify-content-center mt-20 mb-20", 4, "ngIf"],
                            ["class", "collapse show", 4, "ngIf"],
                            [1, "d-flex", "justify-content-center", "mt-20", "mb-20"],
                            [1, "spinner-border"],
                            [1, "collapse", "show"],
                            [1, "card-body", "border-top", "p-9"],
                            [1, "d-flex", "align-items-center", "position-relative", "mb-5"],
                            [1, "svg-icon", "svg-icon-1", "position-absolute", "ms-4", 3, "inlineSVG"],
                            ["type", "text", "placeholder", "Pencarian", 1, "form-control", "form-control-solid", "ps-14", 3, "keyup"],
                            [1, "table-responsive"],
                            [
                                "mat-table",
                                "",
                                "matSort",
                                "",
                                "matSortActive",
                                "kode_skpd",
                                "matSortDirection",
                                "asc",
                                "matSortDisableClear",
                                "",
                                1,
                                "table",
                                "table-row-dashed",
                                "table-row-gray-300",
                                "align-middle",
                                "gs-0",
                                "gy-4",
                                3,
                                "dataSource",
                            ],
                            ["matColumnDef", "dokumen_teks"],
                            ["mat-header-cell", "", "mat-sort-header", "", "class", "fw-bolder text-muted w-500px", 4, "matHeaderCellDef"],
                            ["mat-cell", "", 4, "matCellDef"],
                            ["matColumnDef", "status"],
                            ["mat-header-cell", "", "mat-sort-header", "", "class", "fw-bolder text-muted", 4, "matHeaderCellDef"],
                            ["matColumnDef", "aksi"],
                            ["mat-header-cell", "", "class", "fw-bolder text-center text-muted w-100px", 4, "matHeaderCellDef"],
                            ["mat-cell", "", "class", "text-center", 4, "matCellDef"],
                            ["mat-header-row", "", 4, "matHeaderRowDef"],
                            ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                            [4, "ngIf"],
                            ["showFirstLastButtons", "", 3, "pageSizeOptions"],
                            [1, "card-footer", "d-flex", "justify-content-end"],
                            [1, "btn", "btn-secondary", "btn-md", "text-dark", 3, "click"],
                            ["mat-header-cell", "", "mat-sort-header", "", 1, "fw-bolder", "text-muted", "w-500px"],
                            ["mat-cell", ""],
                            ["mat-header-cell", "", "mat-sort-header", "", 1, "fw-bolder", "text-muted"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-center", "text-muted", "w-100px"],
                            ["mat-cell", "", 1, "text-center"],
                            ["class", "btn btn-icon btn-light-info btn-sm me-2", "ngbTooltip", "Lihat Dokumen", 3, "click", 4, "ngIf"],
                            ["ngbTooltip", "Upload Dokumen", 1, "btn", "btn-icon", "btn-light-primary", "btn-sm", 3, "click"],
                            [1, "svg-icon", "svg-icon-3", 3, "inlineSVG"],
                            ["ngbTooltip", "Lihat Dokumen", 1, "btn", "btn-icon", "btn-light-info", "btn-sm", "me-2", 3, "click"],
                            ["mat-header-row", ""],
                            ["mat-row", ""],
                        ],
                        template: function (t, e) {
                            1 & t &&
                                (a.TgZ(0, "div", 0)(1, "h3", 1),
                                a._uU(2),
                                a.qZA(),
                                a.TgZ(3, "button", 2),
                                a.NdJ("click", function () {
                                    return e.activeModal.dismiss("Cross click");
                                }),
                                a.qZA()(),
                                a.TgZ(4, "div", 3),
                                a.YNc(5, nd, 2, 0, "div", 4),
                                a.YNc(6, gd, 23, 7, "div", 5),
                                a.qZA()),
                                2 & t && (a.xp6(2), a.Oqu(e.pageTitle), a.xp6(3), a.Q6J("ngIf", e.isLoading), a.xp6(1), a.Q6J("ngIf", !e.isLoading));
                        },
                        directives: [j.O5, Ma.d$, L.BZ, S.YE, L.w1, L.fO, L.ge, S.nU, L.Dz, L.ev, aa._L, L.as, L.XQ, L.nj, L.Gk, X.NW],
                        styles: [""],
                    })),
                    i
                );
            })();
            var Ae = D(51026);
            function bd(i, d) {
                1 & i && (a.TgZ(0, "div", 2)(1, "div", 3)(2, "h3", 4), a._uU(3, "Dashboard RKPD"), a.qZA()(), a.TgZ(4, "div", 5), a._UZ(5, "app-loading-shade"), a.qZA()());
            }
            function vd(i, d) {
                if ((1 & i && (a.TgZ(0, "div", 16), a._uU(1), a.qZA()), 2 & i)) {
                    const t = a.oxw().$implicit;
                    a.xp6(1), a.AsE(" ", t.waktu_mulai, " s/d ", t.waktu_selesai, " ");
                }
            }
            function kd(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 10)(1, "div", 11)(2, "div", 12),
                        a.NdJ("click", function () {
                            const s = a.CHM(t).$implicit;
                            return a.oxw(2).onClickTahapan(s.id_tahap, s.sub_tahap_teks, s.id_sub_tahap);
                        }),
                        a.TgZ(3, "div", 13),
                        a._uU(4),
                        a.qZA(),
                        a.YNc(5, vd, 2, 2, "div", 14),
                        a.qZA()(),
                        a._UZ(6, "div", 15),
                        a.qZA();
                }
                if (2 & i) {
                    const t = d.$implicit;
                    a.oxw(2);
                    const e = a.MAs(3);
                    a.xp6(2),
                        a.ekj("bg-color-success", 1 === t.kunci_jadwal || 0 === t.kunci_jadwal)("bg-color-light", null === t.kunci_jadwal)("blink", 0 === t.kunci_jadwal),
                        a.xp6(2),
                        a.Oqu(t.sub_tahap_teks),
                        a.xp6(1),
                        a.Q6J("ngIf", t.waktu_mulai && t.waktu_selesai)("ngIfElse", e);
                }
            }
            function fd(i, d) {
                if ((1 & i && (a.TgZ(0, "div", 2)(1, "div", 3)(2, "h3", 4), a._uU(3, "Dashboard RKPD"), a.qZA()(), a.TgZ(4, "div", 6)(5, "div", 7)(6, "div", 8), a.YNc(7, kd, 7, 9, "div", 9), a.qZA()()()()), 2 & i)) {
                    const t = a.oxw();
                    a.xp6(7), a.Q6J("ngForOf", t.data);
                }
            }
            function Sd(i, d) {
                1 & i && (a.TgZ(0, "div", 16), a._uU(1, "Belum Dimulai"), a.qZA());
            }
            let jd = (() => {
                class i {
                    constructor(t, e, n) {
                        (this.modal = t),
                            (this.toastr = e),
                            (this.dokUploadService = n),
                            (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))),
                            (this.konfigurasiSession = JSON.parse(localStorage.getItem("sipd-konfigurasi"))),
                            (this.isLoading = !1),
                            (this.data = []);
                    }
                    ngOnInit() {
                        this.loadData();
                    }
                    ngOnDestroy() {
                        var t;
                        null === (t = this.dataSub) || void 0 === t || t.unsubscribe();
                    }
                    onClickTahapan(t, e, n, s) {
                        const o = this.modal.open(md, { size: "lg" });
                        (o.componentInstance.tipe_tahap = "rkpd"),
                            (o.componentInstance.id_tahap = t),
                            (o.componentInstance.tahapan = e),
                            (o.componentInstance.id_sub_tahap = n),
                            o.result.then(
                                (l) => {},
                                (l) => {}
                            );
                    }
                    loadData() {
                        this.isLoading = !0;
                        const t = new FormData();
                        t.append("id_daerah", this.userSession.daerah_id),
                            t.append("tahun", this.konfigurasiSession.tahun),
                            t.append("tipe_tahap", "rkpd"),
                            (this.dataSub = this.dokUploadService.dashboard(t).subscribe({
                                next: (e) => {
                                    (this.data = e.data), (this.isLoading = !1);
                                },
                                error: (e) => {
                                    this.toastr.error("Terjadi kesalahan saat memuat data", "Error!"), (this.isLoading = !1);
                                },
                            }));
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(aa.FF), a.Y36(Na._W), a.Y36(xt.B));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-dashboard-rkpd"]],
                        decls: 4,
                        vars: 2,
                        consts: [
                            ["class", "card card-xl-stretch mb-xl-8 mb-lg-8 mb-md-4", 4, "ngIf"],
                            ["noJadwal", ""],
                            [1, "card", "card-xl-stretch", "mb-xl-8", "mb-lg-8", "mb-md-4"],
                            [1, "card-header", "border-0", "pt-3"],
                            [1, "card-title"],
                            [1, "card-body", "py-5", "sipd-table-container"],
                            [1, "card-body", "py-3"],
                            [1, "col-md-12", "col-sm-12"],
                            [1, "row"],
                            ["class", "col-md-3 col-sm-3", 4, "ngFor", "ngForOf"],
                            [1, "col-md-3", "col-sm-3"],
                            [1, "d-flex", "justify-content-center", "align-items-center"],
                            [1, "card", "tahapan", "card-stretch", "text-center", "h-md-100", 2, "width", "18rem", 3, "click"],
                            [1, "fs-4", "fw-bold", "px-3", "py-5"],
                            ["class", "card-body", 4, "ngIf", "ngIfElse"],
                            [1, "arrow-pointer", "opacity-75", "mb-10"],
                            [1, "card-body"],
                        ],
                        template: function (t, e) {
                            1 & t && (a.YNc(0, bd, 6, 0, "div", 0), a.YNc(1, fd, 8, 1, "div", 0), a.YNc(2, Sd, 2, 0, "ng-template", null, 1, a.W1O)), 2 & t && (a.Q6J("ngIf", e.isLoading), a.xp6(1), a.Q6J("ngIf", !e.isLoading));
                        },
                        directives: [j.O5, Ae.I, j.sg],
                        styles: [
                            '.arrow-pointer[_ngcontent-%COMP%]{margin:20px auto;width:75%;height:40px;position:relative;background:#f1416c}.arrow-pointer[_ngcontent-%COMP%]:after{content:"";position:absolute;left:0;bottom:0;width:0;height:0;border-left:20px solid white;border-top:20px solid transparent;border-bottom:20px solid transparent}.arrow-pointer[_ngcontent-%COMP%]:before{content:"";position:absolute;right:-20px;bottom:0;width:0;height:0;border-left:20px solid #f1416c;border-top:20px solid transparent;border-bottom:20px solid transparent}.card.tahapan[_ngcontent-%COMP%]{cursor:pointer}.bg-color-light[_ngcontent-%COMP%]{background-color:#f1faff}.bg-color-success[_ngcontent-%COMP%]{background-color:#e8fff3}.blink[_ngcontent-%COMP%]{animation:blinker 1s step-start infinite}@keyframes blinker{0%{opacity:0}50%{opacity:.5}to{opacity:1}}',
                        ],
                    })),
                    i
                );
            })();
            const Td = ["searchInput"];
            function Id(i, d) {
                1 & i && a._UZ(0, "app-dashboard-rkpd");
            }
            function Bd(i, d) {
                1 & i && a._UZ(0, "span", 44), 2 & i && a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen005.svg");
            }
            function xd(i, d) {
                1 & i && a._UZ(0, "span", 48);
            }
            function Cd(i, d) {
                if ((1 & i && (a.ynx(0), a.TgZ(1, "button", 45), a.YNc(2, Bd, 1, 1, "span", 46), a.YNc(3, xd, 1, 0, "span", 47), a._uU(4, " Pengaturan "), a.qZA(), a.BQk()), 2 & i)) {
                    const t = a.oxw(3);
                    a.xp6(2),
                        a.Q6J("ngIf", !t.kunciTambahGiatDaerahIsLoading && !t.kunciBelanjaDaerahIsLoading && !t.kunciRincianBelanjaDaerahIsLoading),
                        a.xp6(1),
                        a.Q6J("ngIf", t.kunciTambahGiatDaerahIsLoading || t.kunciBelanjaDaerahIsLoading || t.kunciRincianBelanjaDaerahIsLoading);
                }
            }
            function yd(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.ynx(0),
                        a.TgZ(1, "li")(2, "button", 49),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(3).updateKunciTambahGiatDaerah(1);
                        }),
                        a._UZ(3, "span", 44),
                        a._uU(4, " Kunci Semua Tambah Sub Kegiatan "),
                        a.qZA()(),
                        a.TgZ(5, "li")(6, "button", 49),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(3).updateKunciTambahGiatDaerah(0);
                        }),
                        a._UZ(7, "span", 44),
                        a._uU(8, " Buka Semua Tambah Sub Kegiatan "),
                        a.qZA()(),
                        a.TgZ(9, "li"),
                        a._UZ(10, "hr", 50),
                        a.qZA(),
                        a.TgZ(11, "li")(12, "button", 49),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(3).updateKunciBelanjaDaerah(1);
                        }),
                        a._UZ(13, "span", 44),
                        a._uU(14, " Kunci Semua Sub Kegiatan "),
                        a.qZA()(),
                        a.TgZ(15, "li")(16, "button", 49),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(3).updateKunciBelanjaDaerah(0);
                        }),
                        a._UZ(17, "span", 44),
                        a._uU(18, " Buka Semua Sub Kegiatan "),
                        a.qZA()(),
                        a.BQk();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(2),
                        a.Q6J("disabled", t.kunciTambahGiatDaerahIsLoading),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen047.svg"),
                        a.xp6(3),
                        a.Q6J("disabled", t.kunciTambahGiatDaerahIsLoading),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/coding/cod001.svg"),
                        a.xp6(5),
                        a.Q6J("disabled", t.kunciTambahGiatDaerahIsLoading),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen047.svg"),
                        a.xp6(3),
                        a.Q6J("disabled", t.kunciTambahGiatDaerahIsLoading),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/coding/cod001.svg");
                }
            }
            function Ld(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.ynx(0),
                        a.TgZ(1, "li")(2, "button", 49),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(3).updateKunciRincianBelanjaDaerah(1);
                        }),
                        a._UZ(3, "span", 44),
                        a._uU(4, " Kunci Semua Rincian Belanja "),
                        a.qZA()(),
                        a.TgZ(5, "li")(6, "button", 49),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(3).updateKunciRincianBelanjaDaerah(0);
                        }),
                        a._UZ(7, "span", 44),
                        a._uU(8, " Buka Semua Rincian Belanja "),
                        a.qZA()(),
                        a.BQk();
                }
                if (2 & i) {
                    const t = a.oxw(3);
                    a.xp6(2),
                        a.Q6J("disabled", t.kunciTambahGiatDaerahIsLoading),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen047.svg"),
                        a.xp6(3),
                        a.Q6J("disabled", t.kunciTambahGiatDaerahIsLoading),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/coding/cod001.svg");
                }
            }
            function wd(i, d) {
                if ((1 & i && (a.TgZ(0, "div", 41), a.YNc(1, Cd, 5, 2, "ng-container", 0), a.TgZ(2, "ul", 42), a.YNc(3, yd, 19, 8, "ng-container", 0), a.YNc(4, Ld, 9, 4, "ng-container", 0), a.qZA()()), 2 & i)) {
                    const t = a.oxw(2);
                    a.xp6(1),
                        a.Q6J("ngIf", !t.isLoading),
                        a.xp6(2),
                        a.Q6J("ngIf", 2 == t.userSession.level_id || 3 == t.userSession.level_id || 41 == t.userSession.level_id),
                        a.xp6(1),
                        a.Q6J("ngIf", 2 == t.userSession.level_id || 4 == t.userSession.level_id || 41 == t.userSession.level_id);
                }
            }
            function Dd(i, d) {
                1 & i && (a.ynx(0), a.TgZ(1, "button", 51), a._UZ(2, "span", 44), a._uU(3, " Cetak Laporan "), a.qZA(), a.BQk()), 2 & i && (a.xp6(2), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen005.svg"));
            }
            function Rd(i, d) {
                1 & i && (a.ynx(0), a.TgZ(1, "button", 52)(2, "span", 53), a._UZ(3, "span", 44), a._uU(4), a._UZ(5, "span", 54), a.qZA()(), a.BQk()),
                    2 & i && (a.xp6(2), a.Udp("display", "block"), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen005.svg"), a.xp6(1), a.hij(" Mencetak...", " ", " "));
            }
            function Ad(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 39),
                        a.YNc(1, wd, 5, 3, "div", 40),
                        a.TgZ(2, "div", 41),
                        a.YNc(3, Dd, 4, 1, "ng-container", 0),
                        a.YNc(4, Rd, 6, 4, "ng-container", 0),
                        a.TgZ(5, "ul", 42)(6, "li")(7, "button", 43),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().getDataLampiran("pdf");
                        }),
                        a._UZ(8, "span", 44),
                        a._uU(9, " Cetak Laporan (PDF) "),
                        a.qZA()(),
                        a.TgZ(10, "li")(11, "button", 43),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().getDataLampiran("excel");
                        }),
                        a._UZ(12, "span", 44),
                        a._uU(13, " Cetak Laporan (Excel) "),
                        a.qZA()()()()();
                }
                if (2 & i) {
                    const t = a.oxw();
                    a.xp6(1),
                        a.Q6J("ngIf", 2 == t.userSession.level_id || 3 == t.userSession.level_id || 4 == t.userSession.level_id || 41 == t.userSession.level_id),
                        a.xp6(2),
                        a.Q6J("ngIf", !t.isLoading && "anggaran" != t.activeUrl),
                        a.xp6(1),
                        a.Q6J("ngIf", t.isLoading),
                        a.xp6(4),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/arrows/arr091.svg"),
                        a.xp6(4),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/arrows/arr091.svg");
                }
            }
            function Fd(i, d) {
                1 & i && a._UZ(0, "app-loading-shade");
            }
            function Ud(i, d) {
                1 & i && (a.TgZ(0, "th", 55), a._uU(1, " Perangkat Daerah "), a.qZA());
            }
            const Zd = function (i) {
                    return [i];
                },
                Pd = function (i) {
                    return { id_skpd: i };
                };
            function Nd(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 56)(1, "a", 57), a._uU(2), a.qZA()()), 2 & i)) {
                    const t = d.$implicit,
                        e = a.oxw();
                    a.xp6(1), a.Q6J("routerLink", a.VKq(4, Zd, e.activeFullUrl + "/cascading/belanja"))("queryParams", a.VKq(6, Pd, t.id_skpd)), a.xp6(1), a.AsE(" ", t.kode_skpd, " ", t.nama_skpd, " ");
                }
            }
            function Md(i, d) {
                1 & i && (a.TgZ(0, "th", 55), a._uU(1, " Total Kegiatan Belanja "), a.qZA());
            }
            function Kd(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 56), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.xp6(1), a.hij(" ", t.total_giat, " ");
                }
            }
            function Jd(i, d) {
                1 & i && (a.TgZ(0, "th", 55), a._uU(1, " Kegiatan Belanja Terbuka "), a.qZA());
            }
            function qd(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 56), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.xp6(1), a.hij(" ", t.belanja_terbuka, " ");
                }
            }
            function Yd(i, d) {
                1 & i && (a.TgZ(0, "th", 55), a._uU(1, " Rincian Belanja Terbuka "), a.qZA());
            }
            function Wd(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 56), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.xp6(1), a.hij(" ", t.rincian_terbuka, " ");
                }
            }
            function Gd(i, d) {
                1 & i && (a.TgZ(0, "th", 55), a._uU(1, " Pagu Indikatif Belanja "), a.qZA());
            }
            function Qd(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 56), a._uU(1), a.ALo(2, "number"), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.xp6(1), a.hij(" ", a.xi3(2, 1, t.set_pagu_giat, "1.0-0"), " ");
                }
            }
            function Od(i, d) {
                1 & i && (a.TgZ(0, "th", 55), a._uU(1, " Pagu Indikatif SKPD "), a.qZA());
            }
            function Ed(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 56), a._uU(1), a.ALo(2, "number"), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.xp6(1), a.hij(" ", a.xi3(2, 1, t.set_pagu_skpd, "1.0-0"), " ");
                }
            }
            function Hd(i, d) {
                1 & i && (a.TgZ(0, "th", 55), a._uU(1, " Rincian Belanja "), a.qZA());
            }
            function $d(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 56), a._uU(1), a.ALo(2, "number"), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.xp6(1), a.hij(" ", a.xi3(2, 1, t.rinci_giat, "1.0-0"), " ");
                }
            }
            function zd(i, d) {
                1 & i && a._UZ(0, "tr", 58);
            }
            function Vd(i, d) {
                1 & i && a._UZ(0, "tr", 59);
            }
            const Xd = function () {
                return [10, 20, 50, 100];
            };
            let au = (() => {
                class i {
                    constructor(t, e, n, s, o, l, _, r, u, k, m) {
                        (this.changeDetectorRef = t),
                            (this.activatedRoute = e),
                            (this.router = n),
                            (this.modal = s),
                            (this.toastr = o),
                            (this.skpdService = l),
                            (this.konfigurasiService = _),
                            (this.laporanService = r),
                            (this.renjaSetupUnitService = u),
                            (this.renjaSubBelanjaService = k),
                            (this.jadwalRenstraService = m),
                            (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))),
                            (this.konfigurasiSession = JSON.parse(localStorage.getItem("sipd-konfigurasi"))),
                            (this.isDeleting = !1),
                            (this.id_to_delete = 0),
                            (this.displayedColumns = ["nama_perangkat_daerah", "total_giat", "belanja_terbuka", "rincian_terbuka", "set_pagu_giat", "set_pagu_skpd", "rinci_giat"]),
                            (this.dataSource = new L.by(this.data)),
                            (this.pageSize = 20),
                            (this.pageIndex = 0),
                            (this.filter = ""),
                            (this.search = ""),
                            (this.resultsLength = 0),
                            (this.isLoadingResults = !1),
                            (this.constData = new Or.ce()),
                            (this.isLoading = !1),
                            (this.kunciTambahGiatDaerahIsLoading = !1),
                            (this.idUnit = 0),
                            (this.idLevel = 0),
                            (this.tampilkanDaftarSkpd = !1),
                            (this.skpdList = []),
                            (this.skpdFindIsLoading = !1),
                            (this.tahun_awal = 0),
                            (this.tahun_akhir = 0);
                    }
                    ngOnInit() {
                        (this.idLevel = this.userSession.level_id), (this.idUnit = this.userSession.unit_id);
                        let t = this.router.url.split("/");
                        (5 == Number(this.idLevel) || 9 == Number(this.idLevel) || 13 == Number(this.idLevel)) &&
                            this.router.navigate("penganggaran" == t[1] ? ["/penganggaran/anggaran/cascading/belanja"] : ["/perencanaan/renja/cascading/belanja"], { queryParams: { id_skpd: this.idUnit } }),
                            (this.isAnggaran = "penganggaran" == t[1] ? "1" : "0"),
                            this.checkRoleAccess(),
                            this.getNamaDaerah(),
                            this.cekJadwalAktifRenstra(),
                            this.rekapPemutakhiran(),
                            (this.activeUrl = this.router.url.split("/")[2]),
                            (this.activeFullUrl = "/" + this.router.url.split("/")[1] + "/" + this.router.url.split("/")[2]);
                    }
                    ngOnDestroy() {
                        var t, e;
                        null === (t = this.modelSub) || void 0 === t || t.unsubscribe(), null === (e = this.jadwalRenstraSub) || void 0 === e || e.unsubscribe();
                    }
                    ngAfterViewInit() {
                        this.activatedRoute.queryParams.subscribe((t) => {
                            (this.pageIndex = t.pageIndex - 1),
                                (this.pageSize = t.pageSize ? +t.pageSize : 20),
                                this.pageSize < 10 && (this.pageSize = 10),
                                this.pageSize > 100 && (this.pageSize = 100),
                                (this.paginator.pageSize = this.pageSize),
                                (this.paginator.pageIndex = this.pageIndex),
                                this.changeDetectorRef.detectChanges(),
                                this.loadData();
                        });
                    }
                    applyFilter(t) {
                        "Enter" === t.key &&
                            ((this.search = t.target.value.trim().toLowerCase()), this.router.navigate([], { relativeTo: this.activatedRoute, queryParams: { page: 1, filter: t.target.value }, queryParamsHandling: "merge" }));
                    }
                    onPageChange(t) {
                        this.router.navigate([], { relativeTo: this.activatedRoute, queryParams: { pageIndex: t.pageIndex + 1, pageSize: t.pageSize }, queryParamsHandling: "merge" });
                    }
                    delete(t) {
                        (this.id_to_delete = t),
                            this.modal.open(Er.z).result.then((e) => {
                                if (e) {
                                    const n = new FormData();
                                    n.append("id_skpd", t),
                                        n.append("tahun", this.konfigurasiSession.tahun),
                                        n.append("id_daerah", this.konfigurasiSession.id_daerah),
                                        n.append("id_user_log", this.userSession.user_id),
                                        n.append("id_daerah_log", this.userSession.daerah_id),
                                        (this.isDeleting = !0),
                                        (this.skpdSub = this.skpdService.delete(n).subscribe({
                                            next: (s) => {
                                                (this.isDeleting = !1), this.toastr.success("Sukses", "SKPD berhasil dihapus"), this.loadData();
                                            },
                                            error: (s) => {
                                                this.isDeleting = !1;
                                                const o = s.error;
                                                o.hasOwnProperty("app-error") ? this.toastr.error(`${o.message}`, "Error!") : this.toastr.error("Terjadi kesalahan, data SKPD gagal dihapus!", "Error!");
                                            },
                                        }));
                                }
                            });
                    }
                    updateKunciTambahGiatDaerah(t) {
                        const e = this.modal.open(Bt.W, { size: "md" });
                        1 == t
                            ? ((e.componentInstance.warna = "warning"), (e.componentInstance.pesan = "mengunci"), (e.componentInstance.judul = "Mengunci"))
                            : ((e.componentInstance.warna = "success"), (e.componentInstance.pesan = "membuka"), (e.componentInstance.judul = "Membuka")),
                            e.result.then(
                                (n) => {
                                    if (n) {
                                        const s = new FormData();
                                        s.append("kunci_tambah_giat", String(t)),
                                            s.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                            s.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                                            s.append("id_user_log", this.userSession.user_id),
                                            s.append("id_daerah_log", this.userSession.daerah_id),
                                            (this.kunciTambahGiatDaerahIsLoading = !0),
                                            this.renjaSetupUnitService.updateKunciTambahGiatDaerah(s).subscribe({
                                                next: (o) => {
                                                    (this.kunciTambahGiatDaerahIsLoading = !1), this.toastr.success("Sukses", "Data berhasil diupdate"), this.loadData();
                                                },
                                                error: (o) => {
                                                    this.kunciTambahGiatDaerahIsLoading = !1;
                                                    const l = o.error;
                                                    l.hasOwnProperty("app-error") ? this.toastr.error(`${l.message}`, "Error!") : this.toastr.error("Terjadi kesalahan, data gagal diupdate!", "Error!");
                                                },
                                            });
                                    }
                                },
                                (n) => {}
                            );
                    }
                    updateKunciBelanjaDaerah(t) {
                        const e = this.modal.open(Bt.W, { size: "md" });
                        1 == t
                            ? ((e.componentInstance.warna = "warning"), (e.componentInstance.pesan = "mengunci"), (e.componentInstance.judul = "Mengunci"))
                            : ((e.componentInstance.warna = "success"), (e.componentInstance.pesan = "membuka"), (e.componentInstance.judul = "Membuka")),
                            e.result.then(
                                (n) => {
                                    if (n) {
                                        const s = new FormData();
                                        s.append("kunci_bl", String(t)),
                                            s.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                            s.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                                            s.append("id_user_log", this.userSession.user_id),
                                            s.append("id_daerah_log", this.userSession.daerah_id),
                                            (this.kunciBelanjaDaerahIsLoading = !0),
                                            this.renjaSubBelanjaService.updateKunciBelanjaDaerah(s).subscribe({
                                                next: (o) => {
                                                    (this.kunciBelanjaDaerahIsLoading = !1), this.toastr.success("Sukses", "Data berhasil diupdate"), this.loadData();
                                                },
                                                error: (o) => {
                                                    this.kunciBelanjaDaerahIsLoading = !1;
                                                    const l = o.error;
                                                    l.hasOwnProperty("app-error") ? this.toastr.error(`${l.message}`, "Error!") : this.toastr.error("Terjadi kesalahan, data gagal diupdate!", "Error!");
                                                },
                                            });
                                    }
                                },
                                (n) => {}
                            );
                    }
                    updateKunciRincianBelanjaDaerah(t) {
                        const e = this.modal.open(Bt.W, { size: "md" });
                        1 == t
                            ? ((e.componentInstance.warna = "warning"), (e.componentInstance.pesan = "mengunci"), (e.componentInstance.judul = "Mengunci"))
                            : ((e.componentInstance.warna = "success"), (e.componentInstance.pesan = "membuka"), (e.componentInstance.judul = "Membuka")),
                            e.result.then(
                                (n) => {
                                    if (n) {
                                        const s = new FormData();
                                        s.append("kunci_bl_rinci", String(t)),
                                            s.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                            s.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                                            s.append("id_user_log", this.userSession.user_id),
                                            s.append("id_daerah_log", this.userSession.daerah_id),
                                            (this.kunciRincianBelanjaDaerahIsLoading = !0),
                                            this.renjaSubBelanjaService.updateKunciRincianBelanjaDaerah(s).subscribe({
                                                next: (o) => {
                                                    (this.kunciRincianBelanjaDaerahIsLoading = !1), this.toastr.success("Sukses", "Data berhasil diupdate"), this.loadData();
                                                },
                                                error: (o) => {
                                                    this.kunciRincianBelanjaDaerahIsLoading = !1;
                                                    const l = o.error;
                                                    l.hasOwnProperty("app-error") ? this.toastr.error(`${l.message}`, "Error!") : this.toastr.error("Terjadi kesalahan, data gagal diupdate!", "Error!");
                                                },
                                            });
                                    }
                                },
                                (n) => {}
                            );
                    }
                    checkRoleAccess() {
                        let t = this.router.url;
                        t = t.substring(1).split("?")[0];
                        const e = new FormData();
                        e.append("id_level", this.userSession.level_id),
                            e.append("link", t),
                            this.skpdService.roleAccess(e).subscribe({
                                next: (n) => {
                                    (this.roleAccess = n.data), 0 === this.roleAccess.lihat && this.router.navigateByUrl("/dashboard");
                                },
                            });
                    }
                    loadData() {
                        var t;
                        this.tableSub = (0, ma.T)(
                            (0, Gr.R)(null === (t = this.searchInput) || void 0 === t ? void 0 : t.nativeElement, "keyup").pipe(
                                (0, ha.b)(200),
                                (0, ga.h)((e) => "Enter" === e.key),
                                (0, ba.x)(),
                                (0, fa.b)(() => {
                                    this.paginator.pageIndex = 0;
                                })
                            )
                        )
                            .pipe(
                                (0, Qr.O)({}),
                                (0, va.w)(() => {
                                    Promise.resolve().then(() => (this.isLoadingResults = !0));
                                    const e = new FormData();
                                    return (
                                        e.append("tahun", this.constData.consistentData.tahun.toString()),
                                        e.append("id_daerah", this.constData.consistentData.id_daerah.toString()),
                                        e.append("id_user", this.userSession.user_id || 0),
                                        e.append("id_unit", this.userSession.unit_id || 0),
                                        e.append("id_level", this.userSession.level_id || 0),
                                        e.append("search", this.search),
                                        e.append("limit", `${this.pageSize}`),
                                        e.append("offset", "" + this.paginator.pageIndex * this.pageSize),
                                        e.append("is_anggaran", this.isAnggaran),
                                        this.loadSkpd(e).pipe((0, Sa.K)(() => (0, ja.of)(null)))
                                    );
                                }),
                                (0, ka.U)((e) => {
                                    if ((Promise.resolve().then(() => (this.isLoadingResults = !1)), null === e)) return [];
                                    const { recordsFiltered: n, recordsTotal: s, data: o } = e;
                                    let l = this.decrip(o);
                                    return (this.resultsLength = n > 0 ? n : s), l;
                                })
                            )
                            .subscribe((e) => {
                                (this.skpdList = e), (this.skpdFindIsLoading = !1), (this.data = e), (this.dataSource.data = this.data), Promise.resolve().then(() => (this.isLoadingResults = !1));
                            });
                    }
                    getNamaDaerah() {
                        this.queryParamsSub = this.laporanService.getDaerah(this.userSession.daerah_id).subscribe({
                            next: (t) => {
                                this.nama_daerah = t.data[0].nama_daerah;
                            },
                        });
                    }
                    getDataLampiran(t) {
                        this.isLoading = !0;
                        const e = new FormData();
                        e.append("id_daerah", this.userSession.daerah_id),
                            e.append("tahun", this.konfigurasiSession.tahun),
                            e.append("tahun_awal", this.tahun_awal.toString()),
                            e.append("tahun_akhir", this.tahun_akhir.toString()),
                            e.append("is_anggaran", this.isAnggaran),
                            this.dataTemp1
                                ? ("pdf" == t ? this.cetakLampiranRenjaBangda() : this.cetakLampiranRenjaBangdaExcel(), (this.isLoading = !1))
                                : (this.SubLaporan = this.laporanService.listDataLampiran(e).subscribe({
                                      next: (n) => {
                                          (this.dataTemp1 = n.data), "pdf" == t ? this.cetakLampiranRenjaBangda() : this.cetakLampiranRenjaBangdaExcel(), (this.isLoading = !1);
                                      },
                                      error: (n) => {
                                          this.toastr.error("Data Laporan Gagal DiLoad", "Error!"), (this.isLoading = !1);
                                      },
                                  }));
                    }
                    cetakLampiran() {
                        let n = this.konfigurasiSession.tahun;
                        var s = new Ja.default("l", "mm", [280, 460]);
                        (this.body = []),
                            s.setProperties({ title: "Sistem Informasi Pemerintahan Daerah - Cetak Cascading RENJA Semua SKPD", author: "Siemen", creator: "-" }),
                            s.setFontSize(12),
                            s.setFont("helvetica", "bold"),
                            s.text("Program dan Kegiatan Perangkat Daerah", 230, 8, { align: "center" }),
                            s.text(this.nama_daerah, 230, 13, { align: "center" }),
                            s.text("Tahun " + this.konfigurasiSession.tahun, 230, 18, { align: "center" });
                        var o = [];
                        if (this.dataTemp1.length > 0) {
                            let _, r, u, k, m, v;
                            this.header = [
                                [
                                    { content: "Kode", colSpan: 5, rowSpan: 3, styles: { cellWidth: 10 } },
                                    { content: "Urusan / Bidang Urusan / Program / Kegiatan / Sub Kegiatan", rowSpan: 3, styles: { cellWidth: 30 } },
                                    { content: "Indikator Kinerja", colSpan: 3 },
                                    { content: "Rencana Tahun " + n, colSpan: 6 },
                                    { content: "Catatan Penting", rowSpan: 3, styles: { cellWidth: 20 } },
                                    { content: "Prakiraan Maju Rencana Tahun " + (n + 1), colSpan: 3 },
                                ],
                                [
                                    { content: "Capaian Program", rowSpan: 2, styles: { cellWidth: 40 } },
                                    { content: "Keluaran Sub Kegiatan", rowSpan: 2, styles: { cellWidth: 40 } },
                                    { content: "Hasil Kegiatan", rowSpan: 2, styles: { cellWidth: 40 } },
                                    { content: "Lokasi Output Kegiatan", rowSpan: 2, styles: { cellWidth: 20 } },
                                    { content: "Target Capaian Kinerja", colSpan: 3 },
                                    { content: "Pagu Indikatif (Rp.)", rowSpan: 2, styles: { cellWidth: 35 } },
                                    { content: "Sumber Dana", styles: { cellWidth: 20 }, rowSpan: 2 },
                                    { content: "Target Capaian Kinerja", colSpan: 2 },
                                    { content: "Kebutuhan Dana/Pagu Indikatif (Rp.)", styles: { cellWidth: 35 }, rowSpan: 2 },
                                ],
                                [
                                    { content: "Program", styles: { cellWidth: 18 } },
                                    { content: "Keluaran Sub Kegiatan", styles: { cellWidth: 18 } },
                                    { content: "Hasil Kegiatan", styles: { cellWidth: 18 } },
                                    { content: "Tolok Ukur", styles: { cellWidth: 20 } },
                                    { content: "Target", styles: { cellWidth: 15 } },
                                ],
                            ];
                            for (let g = 0; g < this.dataTemp1.length; g++)
                                _ != this.dataTemp1[g].id_sub_skpd
                                    ? ((this.body = [
                                          [
                                              { content: "", styles: { cellWidth: 10 } },
                                              { content: "", styles: { cellWidth: 10 } },
                                              { content: "", styles: { cellWidth: 10 } },
                                              { content: "", styles: { cellWidth: 10 } },
                                              { content: "", styles: { cellWidth: 10 } },
                                              { content: this.dataTemp1[g].nama_sub_skpd, colSpan: 8, styles: { fontStyle: "bold", cellWidth: 30 } },
                                              {
                                                  content: new j.H9("id-ID").transform(String(this.dataTemp1[g].total_pagu_indikatif_sub_skpd >= 0 ? this.dataTemp1[g].total_pagu_indikatif_sub_skpd : 0), "", "", "1.2-2"),
                                                  styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                              },
                                              { content: "", colSpan: 4 },
                                              {
                                                  content: new j.H9("id-ID").transform(String(this.dataTemp1[g].total_pagu_n_depan_sub_skpd >= 0 ? this.dataTemp1[g].total_pagu_n_depan_sub_skpd : 0), "", "", "1.2-2"),
                                                  styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                              },
                                          ],
                                      ]),
                                      (_ = this.dataTemp1[g].id_sub_skpd))
                                    : (this.body = []),
                                    r != this.dataTemp1[g].id_urusan &&
                                        (this.body.push([
                                            { content: this.dataTemp1[g].kode_urusan ? this.dataTemp1[g].kode_urusan : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[g].nama_urusan, colSpan: 8, styles: { fontStyle: "bold", cellWidth: 30 } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[g].total_pagu_indikatif_urusan >= 0 ? this.dataTemp1[g].total_pagu_indikatif_urusan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                            { content: "", colSpan: 4 },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[g].total_pagu_n_depan_urusan >= 0 ? this.dataTemp1[g].total_pagu_n_depan_urusan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                        ]),
                                        (r = this.dataTemp1[g].id_urusan)),
                                    u != this.dataTemp1[g].id_bidang_urusan &&
                                        (this.body.push([
                                            { content: this.dataTemp1[g].kode_urusan ? this.dataTemp1[g].kode_urusan : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: this.dataTemp1[g].kode_bidang_urusan ? this.dataTemp1[g].kode_bidang_urusan.split(".")[1] : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[g].nama_bidang_urusan ? this.dataTemp1[g].nama_bidang_urusan : "-", colSpan: 8, styles: { fontStyle: "bold", cellWidth: 30 } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[g].total_pagu_indikatif_bidang_urusan >= 0 ? this.dataTemp1[g].total_pagu_indikatif_bidang_urusan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                            { content: "", colSpan: 4 },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[g].total_pagu_n_depan_bidang_urusan >= 0 ? this.dataTemp1[g].total_pagu_n_depan_bidang_urusan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                        ]),
                                        (u = this.dataTemp1[g].id_bidang_urusan)),
                                    k != this.dataTemp1[g].id_program &&
                                        (this.body.push([
                                            { content: this.dataTemp1[g].kode_urusan ? this.dataTemp1[g].kode_urusan : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: this.dataTemp1[g].kode_bidang_urusan ? this.dataTemp1[g].kode_bidang_urusan.split(".")[1] : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: this.dataTemp1[g].kode_program ? this.dataTemp1[g].kode_program.split(".")[2] : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[g].nama_program ? this.dataTemp1[g].nama_program : "-", colSpan: 8, styles: { fontStyle: "bold", cellWidth: 30 } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[g].total_pagu_indikatif_program >= 0 ? this.dataTemp1[g].total_pagu_indikatif_program : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                            { content: "", colSpan: 4 },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[g].total_pagu_n_depan_program >= 0 ? this.dataTemp1[g].total_pagu_n_depan_program : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                        ]),
                                        (k = this.dataTemp1[g].id_program)),
                                    m != this.dataTemp1[g].id_giat &&
                                        (this.body.push([
                                            { content: this.dataTemp1[g].kode_urusan ? this.dataTemp1[g].kode_urusan : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: this.dataTemp1[g].kode_bidang_urusan ? this.dataTemp1[g].kode_bidang_urusan.split(".")[1] : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: this.dataTemp1[g].kode_program ? this.dataTemp1[g].kode_program.split(".")[2] : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: this.dataTemp1[g].kode_giat ? this.dataTemp1[g].kode_giat.split(".")[3] + "." + this.dataTemp1[g].kode_giat.split(".")[4] : "-", styles: { fontStyle: "bold", cellWidth: 10 } },
                                            { content: "", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[g].nama_giat ? this.dataTemp1[g].nama_giat : "-", colSpan: 8, styles: { fontStyle: "bold", cellWidth: 30 } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[g].total_pagu_indikatif_kegiatan >= 0 ? this.dataTemp1[g].total_pagu_indikatif_kegiatan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                            { content: "", colSpan: 4 },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[g].total_pagu_n_depan_kegiatan >= 0 ? this.dataTemp1[g].total_pagu_n_depan_kegiatan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                        ]),
                                        (m = this.dataTemp1[g].id_giat)),
                                    v != this.dataTemp1[g].id_sub_giat &&
                                        (this.body.push([
                                            { content: this.dataTemp1[g].kode_urusan ? this.dataTemp1[g].kode_urusan : "-", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[g].kode_bidang_urusan ? this.dataTemp1[g].kode_bidang_urusan.split(".")[1] : "-", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[g].kode_program ? this.dataTemp1[g].kode_program.split(".")[2] : "-", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[g].kode_giat ? this.dataTemp1[g].kode_giat.split(".")[3] + "." + this.dataTemp1[g].kode_giat.split(".")[4] : "-", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[g].kode_sub_giat ? this.dataTemp1[g].kode_sub_giat.split(".")[5] : "-", styles: { cellWidth: 10 } },
                                            { content: this.dataTemp1[g].nama_sub_giat ? this.dataTemp1[g].nama_sub_giat : "-", colSpan: 14, styles: { cellWidth: 30 } },
                                        ]),
                                        (v = this.dataTemp1[g].id_sub_giat)),
                                    this.body.push([
                                        { content: "", styles: { cellWidth: 10 } },
                                        { content: "", styles: { cellWidth: 10 } },
                                        { content: "", styles: { cellWidth: 10 } },
                                        { content: "", styles: { cellWidth: 10 } },
                                        { content: "", styles: { cellWidth: 10 } },
                                        { content: "", styles: { cellWidth: 30 } },
                                        { content: this.dataTemp1[g].tolak_ukur_capaian ? this.dataTemp1[g].tolak_ukur_capaian : "-" },
                                        { content: this.dataTemp1[g].tolak_ukur_output ? this.dataTemp1[g].tolak_ukur_output : "-" },
                                        { content: this.dataTemp1[g].tolok_ukur_sub ? this.dataTemp1[g].tolok_ukur_sub : "-" },
                                        {
                                            content: this.dataTemp1[g].lokasi_bl ? this.dataTemp1[g].lokasi_bl : (this.dataTemp1[g].nama_daerah ? this.dataTemp1[g].nama_daerah : "-") + " Semua Kecamatan, Semua Kel/Desa",
                                            styles: { cellWidth: 30 },
                                        },
                                        { content: this.dataTemp1[g].target_teks_capaian ? this.dataTemp1[g].target_teks_capaian : "-" },
                                        { content: this.dataTemp1[g].target_teks_output ? this.dataTemp1[g].target_teks_output : "-" },
                                        { content: this.dataTemp1[g].target_sub_teks ? this.dataTemp1[g].target_sub_teks : "-" },
                                        { content: new j.H9("id-ID").transform(this.dataTemp1[g].pagu_indikatif, "", "", "1.2-2"), styles: { halign: "right" } },
                                        { content: this.dataTemp1[g].nama_dana ? this.dataTemp1[g].nama_dana : "-" },
                                        { content: "" },
                                        { content: this.dataTemp1[g].tolak_ukur_n ? this.dataTemp1[g].tolak_ukur_n : "-" },
                                        { content: this.dataTemp1[g].target_teks_n ? this.dataTemp1[g].target_teks_n : "-" },
                                        { content: new j.H9("id-ID").transform(this.dataTemp1[g].pagu_n_depan, "", "", "1.2-2"), styles: { halign: "right" } },
                                    ]),
                                    o.push(this.body);
                            this.foot = [
                                [
                                    { content: "TOTAL", colSpan: 13, styles: { fontStyle: "bold" } },
                                    { content: new j.H9("id-ID").transform(String(this.dataTemp1[0].total_pagu_indikatif ? this.dataTemp1[0].total_pagu_indikatif : 0), "", "", "1.2-2"), styles: { fontStyle: "bold" } },
                                    { content: "", colSpan: 4 },
                                    { content: new j.H9("id-ID").transform(String(this.dataTemp1[0].total_pagu_n_depan ? this.dataTemp1[0].total_pagu_n_depan : 0), "", "", "1.2-2"), styles: { fontStyle: "bold" } },
                                ],
                            ];
                        } else
                            (this.header = [
                                [
                                    { content: "Kode", colSpan: 3, rowSpan: 3, styles: { cellWidth: 30 } },
                                    { content: "Urusan / Bidang Urusan / Program / Kegiatan / Sub Kegiatan", rowSpan: 3, styles: { cellWidth: 30 } },
                                    { content: "Indikator Kinerja", colSpan: 3 },
                                    { content: "Rencana Tahun " + n, colSpan: 6 },
                                    { content: "Catatan Penting", rowSpan: 3, styles: { cellWidth: 15 } },
                                    { content: "Prakiraan Maju Rencana Tahun " + (n + 1), colSpan: 3 },
                                ],
                                [
                                    { content: "Capaian Program", rowSpan: 2, styles: { cellWidth: 40 } },
                                    { content: "Keluaran Sub Kegiatan", rowSpan: 2, styles: { cellWidth: 40 } },
                                    { content: "Hasil Kegiatan", rowSpan: 2, styles: { cellWidth: 40 } },
                                    { content: "Lokasi Output Kegiatan", rowSpan: 2, styles: { cellWidth: 20 } },
                                    { content: "Target Capaian Kinerja", colSpan: 3 },
                                    { content: "Pagu Indikatif (Rp.)", rowSpan: 2, styles: { cellWidth: 25 } },
                                    { content: "Sumber Dana", rowSpan: 2 },
                                    { content: "Target Capaian Kinerja", colSpan: 2 },
                                    { content: "Kebutuhan Dana / Pagu Indikatif (Rp.)", rowSpan: 2 },
                                ],
                                [
                                    { content: "Program", styles: { cellWidth: 18 } },
                                    { content: "Keluaran Sub Kegiatan", styles: { cellWidth: 18 } },
                                    { content: "Hasil Kegiatan", styles: { cellWidth: 18 } },
                                    { content: "Tolok Ukur", styles: { cellWidth: 20 } },
                                    { content: "Target", styles: { cellWidth: 15 } },
                                ],
                            ]),
                                (this.body = [[{ content: "DATA LAPORAN KOSONG", colSpan: 17, styles: { fontStyle: "bold", halign: "center" } }]]),
                                o.push(this.body),
                                (this.foot = [[{ content: "TOTAL", colSpan: 13, styles: { fontStyle: "bold" } }]]);
                        var l = [];
                        for (let _ = 0; _ < o.length; _++) l = l.concat(o[_]);
                        s.autoTable({
                            startY: 25,
                            theme: "grid",
                            body: l,
                            head: this.header,
                            foot: this.foot,
                            showFoot: "lastPage",
                            rowPageBreak: "avoid",
                            styles: { fontSize: 8, textColor: 0 },
                            headStyles: { fillColor: 255, valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                            bodyStyles: { lineWidth: 0.2, lineColor: 0 },
                            footStyles: { fillColor: 255, valign: "middle", halign: "right", lineWidth: 0.2, lineColor: 0 },
                        }),
                            s.save("Cetak Renja.pdf");
                    }
                    loadSkpd(t) {
                        return this.renjaSubBelanjaService.listSkpd(t).pipe((0, Re.q)(1));
                    }
                    cetakLampiranRenjaBangda() {
                        let t = this.konfigurasiSession.tahun;
                        var e = new Ja.default("l", "mm", [280, 480]);
                        (this.body = []),
                            e.setProperties({ title: "Sistem Informasi Pemerintahan Daerah - Cetak Cascading RENJA " + (null != this.dataTemp1[0] ? this.dataTemp1[0].nama_skpd : "Per SKPD"), author: "Siemen", creator: "-" }),
                            e.setFontSize(12),
                            e.setFont("helvetica", "bold"),
                            e.text("RENCANA KERJA ORGANISASI PERANGKAT DAERAH (RENJA OPD)", 240, 8, { align: "center" }),
                            e.text(this.nama_daerah ? this.nama_daerah.toUpperCase() : "-", 240, 13, { align: "center" }),
                            e.text("TAHUN " + this.konfigurasiSession.tahun, 240, 18, { align: "center" });
                        var n = [];
                        if (this.dataTemp1.length > 0) {
                            let o,
                                l,
                                _,
                                r,
                                k,
                                m,
                                v,
                                g = 0,
                                C = 0;
                            this.header = [
                                [
                                    { content: "NO", rowSpan: 3, styles: { cellWidth: 10 } },
                                    { content: "KODE", rowSpan: 3, styles: { cellWidth: 30 } },
                                    { content: "URUSAN / BIDANG URUSAN / PROGRAM / KEGIATAN / SUB KEGIATAN", rowSpan: 3, styles: { cellWidth: 40 } },
                                    { content: "INDIKATOR PROGRAM / KEGIATAN / SUB KEGIATAN", rowSpan: 3, styles: { cellWidth: 40 } },
                                    { content: "TARGET AKHIR PERIODE RENSTRA OPD", rowSpan: 3, styles: { cellWidth: 20 } },
                                    { content: "REALISASI CAPAIAN RENJA OPD TAHUN " + (t - 2), rowSpan: 3, styles: { cellWidth: 20 } },
                                    { content: "PRAKIRAAN CAPAIAN TARGET RENJA OPD TAHUN " + (t - 1), rowSpan: 3, styles: { cellWidth: 25 } },
                                    { content: "CAPAIAN KINERJA DAN KERANGKA PENDANAAN", colSpan: 6 },
                                    { content: "KELOMPOK SASARAN", rowSpan: 3, styles: { cellWidth: 30 } },
                                    { content: "PRAKIRAAN MAJU RENCANA\t TAHUN " + (t + 1), colSpan: 2 },
                                    { content: "PERANGKAT DAERAH PENANGGUNG JAWAB", rowSpan: 3 },
                                ],
                                [
                                    { content: "TARGET " + t, rowSpan: 2, styles: { cellWidth: 20 } },
                                    { content: "PAGU INDIKATIF (Rp)", rowSpan: 2, styles: { cellWidth: 35 } },
                                    { content: "LOKASI", rowSpan: 2, styles: { cellWidth: 25 } },
                                    { content: "SUMBER DANA", rowSpan: 2, styles: { cellWidth: 25 } },
                                    { content: "PRIORITAS", colSpan: 2 },
                                    { content: "TARGET", rowSpan: 2, styles: { cellWidth: 20 } },
                                    { content: "PAGU INDIKATIF (Rp)", rowSpan: 2, styles: { cellWidth: 35 } },
                                ],
                                [
                                    { content: "NASIONAL", styles: { cellWidth: 18 } },
                                    { content: "DAERAH", styles: { cellWidth: 18 } },
                                ],
                                [
                                    { content: "1", styles: { fontStyle: "normal" } },
                                    { content: "2", styles: { fontStyle: "normal" } },
                                    { content: "3", styles: { fontStyle: "normal" } },
                                    { content: "4", styles: { fontStyle: "normal" } },
                                    { content: "5", styles: { fontStyle: "normal" } },
                                    { content: "6", styles: { fontStyle: "normal" } },
                                    { content: "7", styles: { fontStyle: "normal" } },
                                    { content: "8", styles: { fontStyle: "normal" } },
                                    { content: "9", styles: { fontStyle: "normal" } },
                                    { content: "10", styles: { fontStyle: "normal" } },
                                    { content: "11", styles: { fontStyle: "normal" } },
                                    { content: "12", styles: { fontStyle: "normal" } },
                                    { content: "13", styles: { fontStyle: "normal" } },
                                    { content: "14", styles: { fontStyle: "normal" } },
                                    { content: "15", styles: { fontStyle: "normal" } },
                                    { content: "16", styles: { fontStyle: "normal" } },
                                    { content: "17", styles: { fontStyle: "normal" } },
                                ],
                            ];
                            let h = 1;
                            for (let f = 0; f < this.dataTemp1.length; f++)
                                o != this.dataTemp1[f].id_sub_skpd
                                    ? ((this.body = [
                                          [
                                              { content: "", styles: { fillColor: "#e6c8fe" } },
                                              { content: "", styles: { fillColor: "#e6c8fe" } },
                                              { content: this.dataTemp1[f].nama_sub_skpd ? this.dataTemp1[f].nama_sub_skpd.toUpperCase() : "-", styles: { fontStyle: "bold", fillColor: "#e6c8fe" }, colSpan: 6 },
                                              {
                                                  content: new j.H9("id-ID").transform(String(this.dataTemp1[f].total_pagu_indikatif_sub_skpd ? this.dataTemp1[f].total_pagu_indikatif_sub_skpd : 0), "", "", "1.2-2"),
                                                  styles: { fontStyle: "bold", halign: "right", fillColor: "#e6c8fe" },
                                              },
                                              { content: "", styles: { fillColor: "#e6c8fe" }, colSpan: 6 },
                                              {
                                                  content: new j.H9("id-ID").transform(String(this.dataTemp1[f].total_pagu_n_depan_sub_skpd ? this.dataTemp1[f].total_pagu_n_depan_sub_skpd : 0), "", "", "1.2-2"),
                                                  styles: { fontStyle: "bold", halign: "right", fillColor: "#e6c8fe" },
                                              },
                                              { content: "", styles: { fillColor: "#e6c8fe" } },
                                          ],
                                      ]),
                                      (o = this.dataTemp1[f].id_sub_skpd),
                                      (l = void 0),
                                      (_ = void 0),
                                      (r = void 0),
                                      (k = void 0),
                                      (m = void 0))
                                    : (this.body = []),
                                    o == this.dataTemp1[f].id_sub_skpd &&
                                        l != this.dataTemp1[f].id_urusan &&
                                        (this.body.push([
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: this.dataTemp1[f].kode_urusan ? this.dataTemp1[f].kode_urusan : "-", styles: { fontStyle: "bold", fillColor: "#f7d4f5" } },
                                            { content: this.dataTemp1[f].nama_urusan ? this.dataTemp1[f].nama_urusan : "-", styles: { fontStyle: "bold", fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[f].total_pagu_indikatif_urusan ? this.dataTemp1[f].total_pagu_indikatif_urusan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right", fillColor: "#f7d4f5" },
                                            },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[f].total_pagu_n_depan_urusan ? this.dataTemp1[f].total_pagu_n_depan_urusan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right", fillColor: "#f7d4f5" },
                                            },
                                            { content: "", styles: { fillColor: "#f7d4f5" } },
                                        ]),
                                        (l = this.dataTemp1[f].id_urusan)),
                                    _ != this.dataTemp1[f].id_bidang_urusan &&
                                        (this.body.push([
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: this.dataTemp1[f].kode_bidang_urusan ? this.dataTemp1[f].kode_bidang_urusan : "-", styles: { fontStyle: "bold", fillColor: "#d6fced" } },
                                            { content: this.dataTemp1[f].nama_bidang_urusan ? this.dataTemp1[f].nama_bidang_urusan : "-", styles: { fontStyle: "bold", fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[f].total_pagu_indikatif_bidang_urusan ? this.dataTemp1[f].total_pagu_indikatif_bidang_urusan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right", fillColor: "#d6fced" },
                                            },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[f].total_pagu_n_depan_bidang_urusan ? this.dataTemp1[f].total_pagu_n_depan_bidang_urusan : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right", fillColor: "#d6fced" },
                                            },
                                            { content: "", styles: { fillColor: "#d6fced" } },
                                        ]),
                                        (_ = this.dataTemp1[f].id_bidang_urusan),
                                        (h = 1)),
                                    r != this.dataTemp1[f].id_program &&
                                        (this.body.push([
                                            { content: h++ + ".", styles: { halign: "center" } },
                                            { content: this.dataTemp1[f].kode_program ? this.dataTemp1[f].kode_program : "-", styles: { fontStyle: "bold" } },
                                            { content: this.dataTemp1[f].nama_program ? this.dataTemp1[f].nama_program : "-", styles: { fontStyle: "bold" } },
                                            { content: this.dataTemp1[f].migrated_at ? "" : this.dataTemp1[f].tolak_ukur_capaian ? this.dataTemp1[f].tolak_ukur_capaian : "-", styles: { fontStyle: "bolditalic" } },
                                            { content: this.dataTemp1[f].migrated_at ? "" : this.dataTemp1[f].target_akhir_program_renstra ? this.dataTemp1[f].target_akhir_program_renstra : "-", styles: { fontStyle: "bold" } },
                                            { content: "" },
                                            { content: "" },
                                            { content: this.dataTemp1[f].migrated_at ? "" : this.dataTemp1[f].target_teks_capaian ? this.dataTemp1[f].target_teks_capaian : "-", styles: { fontStyle: "bold" } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[f].total_pagu_indikatif_program ? this.dataTemp1[f].total_pagu_indikatif_program : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                            { content: "" },
                                            { content: "" },
                                            { content: "" },
                                            { content: "" },
                                            { content: "" },
                                            { content: this.dataTemp1[f].migrated_at ? "" : this.dataTemp1[f].target_n_program_renstra ? this.dataTemp1[f].target_n_program_renstra : "-", styles: { fontStyle: "bold" } },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[f].total_pagu_n_depan_program ? this.dataTemp1[f].total_pagu_n_depan_program : 0), "", "", "1.2-2"),
                                                styles: { fontStyle: "bold", cellWidth: 8, halign: "right" },
                                            },
                                            { content: "" },
                                        ]),
                                        (r = this.dataTemp1[f].id_program)),
                                    k != this.dataTemp1[f].id_giat &&
                                        (this.body.push([
                                            { content: "" },
                                            { content: this.dataTemp1[f].kode_giat ? this.dataTemp1[f].kode_giat : "-" },
                                            { content: this.dataTemp1[f].nama_giat ? this.dataTemp1[f].nama_giat : "-" },
                                            { content: this.dataTemp1[f].migrated_at ? "" : this.dataTemp1[f].tolok_ukur_sub ? this.dataTemp1[f].tolok_ukur_sub : "-", styles: { fontStyle: "italic" } },
                                            { content: this.dataTemp1[f].migrated_at ? "" : this.dataTemp1[f].target_akhir_giat_renstra ? this.dataTemp1[f].target_akhir_giat_renstra : "-" },
                                            { content: "" },
                                            { content: "" },
                                            { content: this.dataTemp1[f].migrated_at ? "" : this.dataTemp1[f].target_sub_teks ? this.dataTemp1[f].target_sub_teks : "-" },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[f].total_pagu_indikatif_kegiatan ? this.dataTemp1[f].total_pagu_indikatif_kegiatan : 0), "", "", "1.2-2"),
                                                styles: { cellWidth: 8, halign: "right" },
                                            },
                                            { content: "" },
                                            { content: "" },
                                            { content: this.dataTemp1[f].label_pusat ? this.dataTemp1[f].label_pusat : "-" },
                                            {
                                                content:
                                                    this.dataTemp1[f].label_prov || this.dataTemp1[f].label_kokab
                                                        ? (this.dataTemp1[f].label_prov ? this.dataTemp1[f].label_prov + "\n" : "") + (this.dataTemp1[f].label_kokab ? this.dataTemp1[f].label_kokab : "")
                                                        : "-",
                                            },
                                            { content: this.dataTemp1[f].kelompok_sasaran ? this.dataTemp1[f].kelompok_sasaran : "-" },
                                            { content: this.dataTemp1[f].migrated_at ? "" : this.dataTemp1[f].target_n_giat_renstra ? this.dataTemp1[f].target_n_giat_renstra : "-" },
                                            {
                                                content: new j.H9("id-ID").transform(String(this.dataTemp1[f].total_pagu_n_depan_kegiatan ? this.dataTemp1[f].total_pagu_n_depan_kegiatan : 0), "", "", "1.2-2"),
                                                styles: { cellWidth: 8, halign: "right" },
                                            },
                                            { content: this.dataTemp1[f].nama_skpd ? this.dataTemp1[f].nama_skpd.toUpperCase() : "-" },
                                        ]),
                                        (k = this.dataTemp1[f].id_giat)),
                                    m != this.dataTemp1[f].id_sub_giat &&
                                        (this.body.push([
                                            { content: "" },
                                            { content: this.dataTemp1[f].kode_sub_giat ? this.dataTemp1[f].kode_sub_giat : "-" },
                                            { content: this.dataTemp1[f].nama_sub_giat ? this.dataTemp1[f].nama_sub_giat : "-", colSpan: 15 },
                                        ]),
                                        (g += this.dataTemp1[f].pagu_indikatif),
                                        (C += this.dataTemp1[f].pagu_n_depan),
                                        (m = this.dataTemp1[f].id_sub_giat)),
                                    v != this.dataTemp1[f].id_output_bl &&
                                        (this.body.push([
                                            { content: "" },
                                            { content: "" },
                                            { content: "" },
                                            { content: this.dataTemp1[f].tolak_ukur_output ? this.dataTemp1[f].tolak_ukur_output : "-", styles: { fontStyle: "italic" } },
                                            { content: this.dataTemp1[f].migrated_at ? "" : this.dataTemp1[f].target_akhir_sub_giat_renstra ? this.dataTemp1[f].target_akhir_sub_giat_renstra : "-" },
                                            { content: "" },
                                            { content: "" },
                                            { content: this.dataTemp1[f].target_teks_output ? this.dataTemp1[f].target_teks_output : "-" },
                                            { content: new j.H9("id-ID").transform(String(this.dataTemp1[f].pagu_indikatif ? this.dataTemp1[f].pagu_indikatif : 0), "", "", "1.2-2"), styles: { cellWidth: 8, halign: "right" } },
                                            { content: this.dataTemp1[f].lokasi_bl ? this.dataTemp1[f].lokasi_bl : "-" },
                                            { content: this.dataTemp1[f].nama_dana ? this.dataTemp1[f].nama_dana.toUpperCase() : "-" },
                                            { content: this.dataTemp1[f].label_pusat ? this.dataTemp1[f].label_pusat : "-" },
                                            {
                                                content:
                                                    this.dataTemp1[f].label_prov || this.dataTemp1[f].label_kokab
                                                        ? (this.dataTemp1[f].label_prov ? this.dataTemp1[f].label_prov + "\n" : "") + (this.dataTemp1[f].label_kokab ? this.dataTemp1[f].label_kokab : "")
                                                        : "-",
                                            },
                                            { content: this.dataTemp1[f].kelompok_sasaran ? this.dataTemp1[f].kelompok_sasaran : "-" },
                                            { content: this.dataTemp1[f].migrated_at ? "" : this.dataTemp1[f].target_n_sub_giat_renstra ? this.dataTemp1[f].target_n_sub_giat_renstra : "-" },
                                            { content: new j.H9("id-ID").transform(String(this.dataTemp1[f].pagu_n_depan ? this.dataTemp1[f].pagu_n_depan : 0), "", "", "1.2-2"), styles: { cellWidth: 8, halign: "right" } },
                                            { content: this.dataTemp1[f].nama_skpd ? this.dataTemp1[f].nama_skpd.toUpperCase() : "-" },
                                        ]),
                                        (v = this.dataTemp1[f].id_output_bl)),
                                    n.push(this.body);
                            this.foot = [
                                [
                                    { content: "" },
                                    { content: "J U M L A H", colSpan: 7, styles: { halign: "center", fontStyle: "bold" } },
                                    { content: new j.H9("id-ID").transform(String(this.dataTemp1[0].total_pagu_indikatif ? this.dataTemp1[0].total_pagu_indikatif : 0), "", "", "1.2-2"), styles: { fontStyle: "bold" } },
                                    { content: "", colSpan: 6 },
                                    { content: new j.H9("id-ID").transform(String(this.dataTemp1[0].total_pagu_n_depan ? this.dataTemp1[0].total_pagu_n_depan : 0), "", "", "1.2-2"), styles: { fontStyle: "bold" } },
                                ],
                            ];
                        } else
                            (this.header = [
                                [
                                    { content: "NO", rowSpan: 3, styles: { cellWidth: 10 } },
                                    { content: "KODE", rowSpan: 3, styles: { cellWidth: 30 } },
                                    { content: "URUSAN / BIDANG URUSAN / PROGRAM / KEGIATAN / SUB KEGIATAN", rowSpan: 3, styles: { cellWidth: 40 } },
                                    { content: "INDIKATOR PROGRAM / KEGIATAN / SUB KEGIATAN", rowSpan: 3, styles: { cellWidth: 40 } },
                                    { content: "TARGET AKHIR PERIODE RENSTRA OPD", rowSpan: 3, styles: { cellWidth: 20 } },
                                    { content: "REALISASI CAPAIAN RENJA OPD TAHUN " + (t - 2), rowSpan: 3, styles: { cellWidth: 20 } },
                                    { content: "PRAKIRAAN CAPAIAN TARGET RENJA OPD TAHUN " + (t - 1), rowSpan: 3, styles: { cellWidth: 25 } },
                                    { content: "CAPAIAN KINERJA DAN KERANGKA PENDANAAN", colSpan: 6 },
                                    { content: "KELOMPOK SASARAN", rowSpan: 3, styles: { cellWidth: 30 } },
                                    { content: "PRAKIRAAN MAJU RENCANA\t TAHUN " + (t + 1), colSpan: 2 },
                                    { content: "PERANGKAT DAERAH PENANGGUNG JAWAB", rowSpan: 3 },
                                ],
                                [
                                    { content: "TARGET " + t, rowSpan: 2, styles: { cellWidth: 20 } },
                                    { content: "PAGU INDIKATIF (Rp)", rowSpan: 2, styles: { cellWidth: 35 } },
                                    { content: "LOKASI", rowSpan: 2, styles: { cellWidth: 25 } },
                                    { content: "SUMBER DANA", rowSpan: 2, styles: { cellWidth: 25 } },
                                    { content: "PRIORITAS", colSpan: 2 },
                                    { content: "TARGET", rowSpan: 2, styles: { cellWidth: 20 } },
                                    { content: "PAGU INDIKATIF (Rp)", rowSpan: 2, styles: { cellWidth: 35 } },
                                ],
                                [
                                    { content: "NASIONAL", styles: { cellWidth: 18 } },
                                    { content: "DAERAH", styles: { cellWidth: 18 } },
                                ],
                                ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17"],
                            ]),
                                (this.body = [[{ content: "DATA LAPORAN KOSONG", colSpan: 17, styles: { fontStyle: "bold", halign: "center" } }]]),
                                n.push(this.body),
                                (this.foot = [[{ content: "" }, { content: "J U M L A H", colSpan: 7, styles: { halign: "center", fontStyle: "bold" } }, { content: "" }, { content: "", colSpan: 6 }, { content: "" }]]);
                        var s = [];
                        for (let o = 0; o < n.length; o++) s = s.concat(n[o]);
                        e.autoTable({
                            startY: 22,
                            theme: "grid",
                            body: s,
                            head: this.header,
                            foot: this.foot,
                            showFoot: "lastPage",
                            rowPageBreak: "avoid",
                            styles: { fontSize: 8, textColor: 0 },
                            headStyles: { fillColor: "#f5f5f5", valign: "middle", halign: "center", lineWidth: 0.2, lineColor: 0 },
                            bodyStyles: { lineWidth: 0.2, lineColor: 0 },
                            footStyles: { fillColor: "#f5f5f5", valign: "middle", halign: "right", lineWidth: 0.2, lineColor: 0 },
                        }),
                            e.save("Cetak Renja.pdf");
                    }
                    cetakLampiranRenjaBangdaExcel() {
                        let t = this.konfigurasiSession.tahun,
                            e = new ut.Workbook();
                        var n = e.addWorksheet("Sheet 1");
                        n.mergeCells("A1", "U1"),
                            (n.getCell("A1").value = "RENCANA KERJA ORGANISASI PERANGKAT DAERAH (RENJA OPD)"),
                            n.mergeCells("A2", "U2"),
                            (n.getCell("A2").value = this.nama_daerah.toUpperCase()),
                            n.mergeCells("A3", "U3"),
                            (n.getCell("A3").value = "TAHUN " + t),
                            n.mergeCells("A6", "A8"),
                            (n.getCell("A6").value = "No"),
                            (n.getCell("A9").value = "1"),
                            n.mergeCells("B6", "F8"),
                            (n.getCell("B6").value = "Kode"),
                            n.mergeCells("B9", "F9"),
                            (n.getCell("B9").value = "2"),
                            n.mergeCells("G6", "G8"),
                            (n.getCell("G6").value = "Urusan / Bidang Urusan / Program / Kegiatan / Sub Kegiatan"),
                            (n.getCell("G9").value = "3"),
                            n.mergeCells("H6", "H8"),
                            (n.getCell("H6").value = "Indikator Program / Kegiatan / Sub Kegiatan"),
                            (n.getCell("H9").value = "4"),
                            n.mergeCells("I6", "I8"),
                            (n.getCell("I6").value = "Target Akhir Periode Renstra OPD"),
                            (n.getCell("I9").value = "5"),
                            n.mergeCells("J6", "J8"),
                            (n.getCell("J6").value = "Realisasi Capaian RENJA OPD Tahun " + (t - 2)),
                            (n.getCell("J9").value = "6"),
                            n.mergeCells("K6", "K8"),
                            (n.getCell("K6").value = "Prakiraan Capaian Target RENJA OPD Tahun " + (t - 1)),
                            (n.getCell("K9").value = "7"),
                            n.mergeCells("L6", "Q6"),
                            (n.getCell("L6").value = "Capaian Kinerja Dan Kerangka Pendanaan"),
                            n.mergeCells("L7", "L8"),
                            (n.getCell("L7").value = "Target " + t),
                            (n.getCell("L9").value = "8"),
                            n.mergeCells("M7", "M8"),
                            (n.getCell("M7").value = "Pagu Indikatif (Rp)"),
                            (n.getCell("M9").value = "9"),
                            n.mergeCells("N7", "N8"),
                            (n.getCell("N7").value = "Lokasi"),
                            (n.getCell("N9").value = "10"),
                            n.mergeCells("O7", "O8"),
                            (n.getCell("O7").value = "Sumber Dana"),
                            (n.getCell("O9").value = "11"),
                            n.mergeCells("P7", "Q7"),
                            (n.getCell("P7").value = "Prioritas"),
                            (n.getCell("P8").value = "Nasional"),
                            (n.getCell("P9").value = "12"),
                            (n.getCell("Q8").value = "Daerah"),
                            (n.getCell("Q9").value = "13"),
                            n.mergeCells("R6", "R8"),
                            (n.getCell("R6").value = "Kelompok Sasaran"),
                            (n.getCell("R9").value = "14"),
                            n.mergeCells("S6", "T6"),
                            (n.getCell("S6").value = "Prakiraan Maju Rencana Tahun " + (t - 1)),
                            n.mergeCells("S7", "S8"),
                            (n.getCell("S7").value = "Target"),
                            (n.getCell("S9").value = "15"),
                            n.mergeCells("T7", "T8"),
                            (n.getCell("T7").value = "Pagu Indikatif (Rp)"),
                            (n.getCell("T9").value = "16"),
                            n.mergeCells("U6", "U8"),
                            (n.getCell("U6").value = "Perangkat Daerah Penanggung Jawab"),
                            (n.getCell("U9").value = "17");
                        var s = [];
                        if (this.dataTemp1.length > 0) {
                            n.columns = [
                                { key: "A", width: 5 },
                                { key: "B", width: 5 },
                                { key: "C", width: 5 },
                                { key: "D", width: 5 },
                                { key: "E", width: 5 },
                                { key: "F", width: 5 },
                                { key: "G", width: 30 },
                                { key: "H", width: 30 },
                                { key: "I", width: 15 },
                                { key: "J", width: 15 },
                                { key: "K", width: 15 },
                                { key: "L", width: 15 },
                                { key: "M", width: 25 },
                                { key: "N", width: 20 },
                                { key: "O", width: 22 },
                                { key: "P", width: 25 },
                                { key: "Q", width: 25 },
                                { key: "R", width: 20 },
                                { key: "S", width: 15 },
                                { key: "T", width: 25 },
                                { key: "U", width: 25 },
                            ];
                            let r,
                                u,
                                k,
                                m,
                                v,
                                g,
                                C,
                                h = 0,
                                f = 0,
                                y = 1,
                                B = 10,
                                F = 1;
                            for (let c = 0; c < this.dataTemp1.length; c++)
                                r != this.dataTemp1[c].id_sub_skpd &&
                                    (n.addRow({
                                        G: this.dataTemp1[c].nama_sub_skpd,
                                        M: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_indikatif_sub_skpd >= 0 ? this.dataTemp1[c].total_pagu_indikatif_sub_skpd : 0), "", "", "1.2-2"),
                                        T: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_n_depan_sub_skpd >= 0 ? this.dataTemp1[c].total_pagu_n_depan_sub_skpd : 0), "", "", "1.2-2"),
                                    }),
                                    n.mergeCells("G" + B, "L" + B),
                                    n.mergeCells("N" + B, "S" + B),
                                    (r = this.dataTemp1[c].id_sub_skpd),
                                    (B += 1),
                                    (u = void 0),
                                    (k = void 0),
                                    (m = void 0),
                                    (v = void 0),
                                    (g = void 0)),
                                    u != this.dataTemp1[c].id_urusan &&
                                        (n.addRow({
                                            B: this.dataTemp1[c].kode_urusan ? this.dataTemp1[c].kode_urusan : "-",
                                            G: this.dataTemp1[c].nama_urusan ? this.dataTemp1[c].nama_urusan : "-",
                                            M: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_indikatif_urusan ? this.dataTemp1[c].total_pagu_indikatif_urusan : 0), "", "", "1.2-2"),
                                            T: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_n_depan_urusan ? this.dataTemp1[c].total_pagu_n_depan_urusan : 0), "", "", "1.2-2"),
                                        }),
                                        n.mergeCells("G" + B, "L" + B),
                                        (u = this.dataTemp1[c].id_urusan),
                                        (B += 1),
                                        (k = void 0),
                                        (m = void 0),
                                        (v = void 0),
                                        (g = void 0),
                                        (F = 1)),
                                    k != this.dataTemp1[c].id_bidang_urusan &&
                                        (n.addRow({
                                            B: this.dataTemp1[c].kode_urusan ? this.dataTemp1[c].kode_urusan : "-",
                                            C: this.dataTemp1[c].kode_bidang_urusan ? this.dataTemp1[c].kode_bidang_urusan.split(".")[1] : "-",
                                            G: this.dataTemp1[c].nama_bidang_urusan ? this.dataTemp1[c].nama_bidang_urusan : "-",
                                            M: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_indikatif_bidang_urusan ? this.dataTemp1[c].total_pagu_indikatif_bidang_urusan : 0), "", "", "1.2-2"),
                                            T: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_n_depan_bidang_urusan ? this.dataTemp1[c].total_pagu_n_depan_bidang_urusan : 0), "", "", "1.2-2"),
                                        }),
                                        n.mergeCells("G" + B, "L" + B),
                                        (B += 1),
                                        (k = this.dataTemp1[c].id_bidang_urusan),
                                        (m = void 0),
                                        (v = void 0),
                                        (g = void 0),
                                        (F = 1)),
                                    m != this.dataTemp1[c].id_program &&
                                        (n.addRow({
                                            A: y,
                                            B: this.dataTemp1[c].kode_urusan ? this.dataTemp1[c].kode_urusan : "-",
                                            C: this.dataTemp1[c].kode_bidang_urusan ? this.dataTemp1[c].kode_bidang_urusan.split(".")[1] : "-",
                                            D: this.dataTemp1[c].kode_program ? this.dataTemp1[c].kode_program.split(".")[2] : "-",
                                            G: this.dataTemp1[c].nama_program ? this.dataTemp1[c].nama_program : "-",
                                            H: this.dataTemp1[c].tolak_ukur_capaian ? this.dataTemp1[c].tolak_ukur_capaian : "-",
                                            I: this.dataTemp1[c].target_akhir_program_renstra ? this.dataTemp1[c].target_akhir_program_renstra : "-",
                                            J: "",
                                            K: "",
                                            L: this.dataTemp1[c].target_teks_capaian ? this.dataTemp1[c].target_teks_capaian : "-",
                                            M: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_indikatif_program ? this.dataTemp1[c].total_pagu_indikatif_program : 0), "", "", "1.2-2"),
                                            N: "",
                                            O: "",
                                            P: "",
                                            Q: "",
                                            R: "",
                                            S: this.dataTemp1[c].target_n_program_renstra ? this.dataTemp1[c].target_n_program_renstra : "-",
                                            T: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_n_depan_program ? this.dataTemp1[c].total_pagu_n_depan_program : 0), "", "", "1.2-2"),
                                            U: "",
                                        }),
                                        (m = this.dataTemp1[c].id_program),
                                        (B += 1),
                                        (y += 1),
                                        (v = void 0),
                                        (g = void 0)),
                                    v != this.dataTemp1[c].id_giat &&
                                        (n.addRow({
                                            B: this.dataTemp1[c].kode_urusan ? this.dataTemp1[c].kode_urusan : "-",
                                            C: this.dataTemp1[c].kode_bidang_urusan ? this.dataTemp1[c].kode_bidang_urusan.split(".")[1] : "-",
                                            D: this.dataTemp1[c].kode_program ? this.dataTemp1[c].kode_program.split(".")[2] : "-",
                                            E: this.dataTemp1[c].kode_giat ? this.dataTemp1[c].kode_giat.split(".")[3] + "." + this.dataTemp1[c].kode_giat.split(".")[4] : "-",
                                            G: this.dataTemp1[c].nama_giat ? this.dataTemp1[c].nama_giat : "-",
                                            H: this.dataTemp1[c].tolok_ukur_sub ? this.dataTemp1[c].tolok_ukur_sub : "-",
                                            I: this.dataTemp1[c].target_akhir_giat_renstra ? this.dataTemp1[c].target_akhir_giat_renstra : "-",
                                            J: "",
                                            K: "",
                                            L: this.dataTemp1[c].target_sub_teks ? this.dataTemp1[c].target_sub_teks : "-",
                                            M: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_indikatif_kegiatan ? this.dataTemp1[c].total_pagu_indikatif_kegiatan : 0), "", "", "1.2-2"),
                                            N: "",
                                            O: "",
                                            P: this.dataTemp1[c].label_pusat ? this.dataTemp1[c].label_pusat : "-",
                                            Q:
                                                this.dataTemp1[c].label_prov || this.dataTemp1[c].label_kokab
                                                    ? (this.dataTemp1[c].label_prov ? this.dataTemp1[c].label_prov + "\n" : "") + (this.dataTemp1[c].label_kokab ? this.dataTemp1[c].label_kokab : "")
                                                    : "-",
                                            R: this.dataTemp1[c].kelompok_sasaran ? this.dataTemp1[c].kelompok_sasaran : "-",
                                            S: this.dataTemp1[c].target_n_giat_renstra ? this.dataTemp1[c].target_n_giat_renstra : "-",
                                            T: new j.H9("id-ID").transform(String(this.dataTemp1[c].total_pagu_n_depan_kegiatan ? this.dataTemp1[c].total_pagu_n_depan_kegiatan : 0), "", "", "1.2-2"),
                                            U: "",
                                        }),
                                        (v = this.dataTemp1[c].id_giat),
                                        (B += 1),
                                        (g = void 0)),
                                    g != this.dataTemp1[c].id_sub_giat &&
                                        (n.addRow({
                                            B: this.dataTemp1[c].kode_urusan ? this.dataTemp1[c].kode_urusan : "-",
                                            C: this.dataTemp1[c].kode_bidang_urusan ? this.dataTemp1[c].kode_bidang_urusan.split(".")[1] : "-",
                                            D: this.dataTemp1[c].kode_program ? this.dataTemp1[c].kode_program.split(".")[2] : "-",
                                            E: this.dataTemp1[c].kode_giat ? this.dataTemp1[c].kode_giat.split(".")[3] + "." + this.dataTemp1[c].kode_giat.split(".")[4] : "-",
                                            F: this.dataTemp1[c].kode_sub_giat ? this.dataTemp1[c].kode_sub_giat.split(".")[5] : "-",
                                            G: this.dataTemp1[c].nama_sub_giat ? this.dataTemp1[c].nama_sub_giat : "-",
                                        }),
                                        n.mergeCells("G" + B, "U" + B),
                                        (h += this.dataTemp1[c].pagu_indikatif),
                                        (f += this.dataTemp1[c].pagu_n_depan),
                                        (g = this.dataTemp1[c].id_sub_giat),
                                        (B += 1)),
                                    C != this.dataTemp1[c].id_output_bl &&
                                        (n.addRow({
                                            B: "",
                                            C: "",
                                            D: "",
                                            E: "",
                                            G: "",
                                            H: this.dataTemp1[c].tolak_ukur_output ? this.dataTemp1[c].tolak_ukur_output : "-",
                                            I: this.dataTemp1[c].target_akhir_sub_giat_renstra ? this.dataTemp1[c].target_akhir_sub_giat_renstra : "-",
                                            J: "",
                                            K: "",
                                            L: this.dataTemp1[c].target_teks_output ? this.dataTemp1[c].target_teks_output : "-",
                                            M: new j.H9("id-ID").transform(String(this.dataTemp1[c].pagu_indikatif ? this.dataTemp1[c].pagu_indikatif : 0), "", "", "1.2-2"),
                                            N: this.dataTemp1[c].lokasi_bl ? this.dataTemp1[c].lokasi_bl : "-",
                                            O: this.dataTemp1[c].nama_dana ? this.dataTemp1[c].nama_dana.toUpperCase() : "-",
                                            P: this.dataTemp1[c].label_pusat ? this.dataTemp1[c].label_pusat : "-",
                                            Q:
                                                this.dataTemp1[c].label_prov || this.dataTemp1[c].label_kokab
                                                    ? (this.dataTemp1[c].label_prov ? this.dataTemp1[c].label_prov + "\n" : "") + (this.dataTemp1[c].label_kokab ? this.dataTemp1[c].label_kokab : "")
                                                    : "-",
                                            R: this.dataTemp1[c].kelompok_sasaran ? this.dataTemp1[c].kelompok_sasaran : "-",
                                            S: this.dataTemp1[c].target_n_sub_giat_renstra ? this.dataTemp1[c].target_n_sub_giat_renstra : "-",
                                            T: new j.H9("id-ID").transform(String(this.dataTemp1[c].pagu_n_depan ? this.dataTemp1[c].pagu_n_depan : 0), "", "", "1.2-2"),
                                            U: this.dataTemp1[c].nama_skpd ? this.dataTemp1[c].nama_skpd.toUpperCase() : "-",
                                        }),
                                        (C = this.dataTemp1[c].id_output_bl),
                                        (B += 1)),
                                    s.push(this.body);
                            n.mergeCells("B" + B, "L" + B),
                                (n.getCell("A" + B).value = ""),
                                (n.getCell("B" + B).value = "J U M L A H"),
                                (n.getCell("M" + B).value = new j.H9("id-ID").transform(String(this.dataTemp1[0].total_pagu_indikatif ? this.dataTemp1[0].total_pagu_indikatif : 0), "", "", "1.2-2")),
                                n.mergeCells("N" + B, "S" + B),
                                (n.getCell("N" + B).value = ""),
                                (n.getCell("T" + B).value = new j.H9("id-ID").transform(String(this.dataTemp1[0].total_pagu_n_depan ? this.dataTemp1[0].total_pagu_n_depan : 0), "", "", "1.2-2"));
                        }
                        let o = n.rowCount;
                        if (null != o) {
                            for (let r = 6; r <= 9; r++) {
                                let k = 85;
                                for (let m = 65; m <= k; m++)
                                    (n.getCell(String.fromCharCode(m) + r).alignment = { vertical: "middle", horizontal: "center", wrapText: !0 }),
                                        (n.getCell(String.fromCharCode(m) + r).border = { top: { style: "thin" }, left: { style: "thin" }, bottom: { style: "thin" }, right: { style: "thin" } });
                            }
                            for (let r = 10; r <= o; r++) {
                                let k = 85;
                                for (let m = 65; m <= k; m++)
                                    r < o
                                        ? (n.getCell(String.fromCharCode(m) + r).alignment = { vertical: "top", horizontal: "left", wrapText: !0 })
                                        : r == o && (n.getCell(String.fromCharCode(m) + r).alignment = { vertical: "top", horizontal: "right", wrapText: !0 }),
                                        (n.getCell(String.fromCharCode(m) + r).border = { top: { style: "thin" }, left: { style: "thin" }, bottom: { style: "thin" }, right: { style: "thin" } });
                            }
                        }
                        (n.getRow(1).height = 20),
                            (n.getRow(1).font = { size: 10, bold: !0 }),
                            (n.getRow(1).alignment = { vertical: "middle", horizontal: "center" }),
                            (n.getRow(2).height = 20),
                            (n.getRow(2).font = { size: 10, bold: !0 }),
                            (n.getRow(2).alignment = { vertical: "middle", horizontal: "center" }),
                            (n.getRow(3).height = 20),
                            (n.getRow(3).font = { size: 10, bold: !0 }),
                            (n.getRow(3).alignment = { vertical: "middle", horizontal: "center" }),
                            this.dataTemp1.length > 0 && ((n.getRow(o).font = { bold: !0 }), (n.getRow(o).alignment = { vertical: "middle", horizontal: "right" })),
                            e.xlsx.writeBuffer(),
                            e.xlsx.writeBuffer().then(function (r) {
                                const u = new Blob([r], { type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" });
                                dt.saveAs(u, "Cetak Renja.xlsx");
                            });
                    }
                    cekJadwalAktifRenstra() {
                        const t = new FormData();
                        t.append("id_daerah", this.konfigurasiSession.id_daerah),
                            t.append("tahun", this.konfigurasiSession.tahun),
                            (this.jadwalRenstraSub = this.jadwalRenstraService.cekAktif(t).subscribe({
                                next: (e) => {
                                    var n, s;
                                    e.data.length > 0
                                        ? ((this.renstraJadwal = e.data[0]),
                                          (this.tahun_awal = (null === (n = this.renstraJadwal) || void 0 === n ? void 0 : n.tahun_awal) || 0),
                                          (this.tahun_akhir = (null === (s = this.renstraJadwal) || void 0 === s ? void 0 : s.tahun_akhir) || 0))
                                        : this.toastr.info("Kesalah dalam cek jadwal renstra", "Pemberitahuan!", { positionClass: "toast-top-right", closeButton: !0, progressBar: !0 });
                                },
                            }));
                    }
                    rekapPemutakhiran() {
                        const t = new FormData();
                        t.append("tahun", this.konfigurasiSession.tahun),
                            t.append("id_daerah", this.userSession.daerah_id),
                            t.append("id_user", this.userSession.user_id),
                            this.renjaSubBelanjaService.rekapPemutakhiran(t).subscribe({
                                next: (e) => {
                                    this.rekapMutakhir = e.data;
                                },
                                error: (e) => {},
                            });
                    }
                    showDetailRekap(t) {}
                    decrip(t) {
                        let e = atob(t),
                            n = e.length - 1,
                            s = "";
                        for (; n >= 0; ) (s += e.charAt(n)), n--;
                        let o = atob(s),
                            l = o.length - 1,
                            _ = "";
                        for (; l >= 0; ) (_ += o.charAt(l)), l--;
                        return JSON.parse(_);
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(a.sBO), a.Y36(Aa.gz), a.Y36(Aa.F0), a.Y36(aa.FF), a.Y36(Na._W), a.Y36(za.J), a.Y36(Ra.W), a.Y36(It.d), a.Y36(st.X), a.Y36(Wa.x), a.Y36(we.T));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-perangkat-daerah-list"]],
                        viewQuery: function (t, e) {
                            if ((1 & t && (a.Gf(X.NW, 5), a.Gf(Td, 5)), 2 & t)) {
                                let n;
                                a.iGM((n = a.CRH())) && (e.paginator = n.first), a.iGM((n = a.CRH())) && (e.searchInput = n.first);
                            }
                        },
                        decls: 98,
                        vars: 24,
                        consts: [
                            [4, "ngIf"],
                            [1, "card", "card-xl-stretch", "mb-xl-8"],
                            [1, "card-header", "border-0", "pt-5"],
                            [1, "card-title"],
                            [1, "card-body", "py-3", "sipd-container"],
                            [1, "row", "align-items-center"],
                            [1, "col", "col-lg-2", "px-6", "py-5", "rounded-2", "me-1", "mb-1", 2, "width", "16% !important", 3, "ngClass"],
                            [1, "col"],
                            [1, "float-end", "text-light", "ms-auto"],
                            [1, "d-flex", "flex-column", "text-light-end"],
                            [1, "text-light", "fs-4", "mb-0"],
                            ["align", "right", 1, "text-light", "fs-5", "mb-0"],
                            ["ngbTooltip", "Sub Kegiatan yang perlu di mutakhirkan", "tooltipClass", "tooltip-dark", 1, "text-light", 3, "click"],
                            ["ngbTooltip", "Sumber Dana yang perlu di mutakhirkan", "tooltipClass", "tooltip-dark", 1, "text-light", 3, "click"],
                            ["ngbTooltip", "Rekening Belanja yang perlu di mutakhirkan", "tooltipClass", "tooltip-dark", 1, "text-light", 3, "click"],
                            ["ngbTooltip", "Pendapatan yang perlu di mutakhirkan", "tooltipClass", "tooltip-dark", 1, "text-light", 3, "click"],
                            ["ngbTooltip", "Pembiayaan yang perlu di mutakhirkan", "tooltipClass", "tooltip-dark", 1, "text-light", 3, "click"],
                            ["ngbTooltip", "Komponen yang perlu di mutakhirkan", "tooltipClass", "tooltip-dark", 1, "text-light", 3, "click"],
                            [1, "card-header", "border-0", "pt-3"],
                            [1, "d-flex", "align-items-center", "position-relative", "my-1"],
                            [1, "svg-icon", "svg-icon-1", "position-absolute", "ms-4", 3, "inlineSVG"],
                            ["type", "text", "placeholder", "Pencarian", 1, "form-control", "form-control-solid", "w-250px", "ps-14", 3, "value", "keyup"],
                            ["searchInput", ""],
                            ["class", "card-toolbar text-end", 4, "ngIf"],
                            [1, "table-responsive", "sipd-table-container"],
                            ["mat-table", "", 1, "table", "table-row-dashed", "table-row-gray-300", "align-middle", "gs-0", "gy-4", "sipd-table", 3, "dataSource"],
                            ["matColumnDef", "nama_perangkat_daerah"],
                            ["mat-header-cell", "", "class", "fw-bolder text-muted pe-3", 4, "matHeaderCellDef"],
                            ["mat-cell", "", "class", "pe-3", 4, "matCellDef"],
                            ["matColumnDef", "total_giat"],
                            ["matColumnDef", "belanja_terbuka"],
                            ["matColumnDef", "rincian_terbuka"],
                            ["matColumnDef", "set_pagu_giat"],
                            ["matColumnDef", "set_pagu_skpd"],
                            ["matColumnDef", "rinci_giat"],
                            ["mat-header-row", "", 4, "matHeaderRowDef"],
                            ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                            ["showFirstLastButtons", "", 3, "length", "pageSize", "pageSizeOptions", "page"],
                            ["paginator", ""],
                            [1, "card-toolbar", "text-end"],
                            ["ngbDropdown", "", 4, "ngIf"],
                            ["ngbDropdown", ""],
                            ["ngbDropdownMenu", "", 2, "z-index", "1000"],
                            ["ngbDropdownItem", "", 1, "btn", "btn-small", 3, "click"],
                            [1, "svg-icon", "svg-icon-3", 3, "inlineSVG"],
                            ["ngbDropdownToggle", "", 1, "btn", "btn-small", "btn-light-primary", "mx-2"],
                            ["class", "svg-icon svg-icon-3", 3, "inlineSVG", 4, "ngIf"],
                            ["class", "spinner-border spinner-border-sm me-2", "role", "status", "style", "width: 17.54px; height: 17.54px", 4, "ngIf"],
                            ["role", "status", 1, "spinner-border", "spinner-border-sm", "me-2", 2, "width", "17.54px", "height", "17.54px"],
                            ["ngbDropdownItem", "", 1, "btn", "btn-small", 3, "disabled", "click"],
                            [1, "dropdown-divider"],
                            ["ngbDropdownToggle", "", 1, "btn", "btn-small", "btn-light-success", "me-3", "mx-2"],
                            [1, "btn", "btn-small", "btn-light-success", "me-3", "mx-2"],
                            [1, "indicator-progress"],
                            [1, "spinner-border", "spinner-border-sm", "align-middle", "ms-2"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-muted", "pe-3"],
                            ["mat-cell", "", 1, "pe-3"],
                            [1, "text-primary", 3, "routerLink", "queryParams"],
                            ["mat-header-row", ""],
                            ["mat-row", ""],
                        ],
                        template: function (t, e) {
                            1 & t &&
                                (a.YNc(0, Id, 1, 0, "app-dashboard-rkpd", 0),
                                a.TgZ(1, "div", 1)(2, "div", 2)(3, "div", 3),
                                a._uU(4, " Informasi Pemutakhiran Data "),
                                a.qZA()(),
                                a.TgZ(5, "div", 4)(6, "div", 5)(7, "div", 6)(8, "div", 7)(9, "span", 8),
                                a._UZ(10, "div", 9),
                                a.qZA(),
                                a.TgZ(11, "h6", 10),
                                a._uU(12, "Sub Kegiatan"),
                                a.qZA()(),
                                a.TgZ(13, "h4", 11)(14, "a", 12),
                                a.NdJ("click", function () {
                                    return e.showDetailRekap("sub_giat");
                                }),
                                a._uU(15),
                                a.qZA()()(),
                                a.TgZ(16, "div", 6)(17, "div", 7)(18, "span", 8),
                                a._UZ(19, "div", 9),
                                a.qZA(),
                                a.TgZ(20, "h6", 10),
                                a._uU(21, "Sumber Dana"),
                                a.qZA()(),
                                a.TgZ(22, "h4", 11)(23, "a", 13),
                                a.NdJ("click", function () {
                                    return e.showDetailRekap("sumber_dana");
                                }),
                                a._uU(24),
                                a.qZA()()(),
                                a.TgZ(25, "div", 6)(26, "div", 7)(27, "span", 8),
                                a._UZ(28, "div", 9),
                                a.qZA(),
                                a.TgZ(29, "h6", 10),
                                a._uU(30, "Rekening Belanja"),
                                a.qZA()(),
                                a.TgZ(31, "h4", 11)(32, "a", 14),
                                a.NdJ("click", function () {
                                    return e.showDetailRekap("rekening_bl");
                                }),
                                a._uU(33),
                                a.qZA()()(),
                                a.TgZ(34, "div", 6)(35, "div", 7)(36, "span", 8),
                                a._UZ(37, "div", 9),
                                a.qZA(),
                                a.TgZ(38, "h6", 10),
                                a._uU(39, "Pendapatan"),
                                a.qZA()(),
                                a.TgZ(40, "h4", 11)(41, "a", 15),
                                a.NdJ("click", function () {
                                    return e.showDetailRekap("pendapatan");
                                }),
                                a._uU(42),
                                a.qZA()()(),
                                a.TgZ(43, "div", 6)(44, "div", 7)(45, "span", 8),
                                a._UZ(46, "div", 9),
                                a.qZA(),
                                a.TgZ(47, "h6", 10),
                                a._uU(48, "Pembiayaan"),
                                a.qZA()(),
                                a.TgZ(49, "h4", 11)(50, "a", 16),
                                a.NdJ("click", function () {
                                    return e.showDetailRekap("pembiayaan");
                                }),
                                a._uU(51),
                                a.qZA()()(),
                                a.TgZ(52, "div", 6)(53, "div", 7)(54, "span", 8),
                                a._UZ(55, "div", 9),
                                a.qZA(),
                                a.TgZ(56, "h6", 10),
                                a._uU(57, "Komponen Belanja"),
                                a.qZA()(),
                                a.TgZ(58, "h4", 11)(59, "a", 17),
                                a.NdJ("click", function () {
                                    return e.showDetailRekap("ssh");
                                }),
                                a._uU(60),
                                a.qZA()()()()()(),
                                a.TgZ(61, "div", 1)(62, "div", 18)(63, "div", 3)(64, "div", 19),
                                a._UZ(65, "span", 20),
                                a.TgZ(66, "input", 21, 22),
                                a.NdJ("keyup", function (s) {
                                    return e.applyFilter(s);
                                }),
                                a.qZA()()(),
                                a.YNc(68, Ad, 14, 5, "div", 23),
                                a.qZA(),
                                a.TgZ(69, "div", 4),
                                a.YNc(70, Fd, 1, 0, "app-loading-shade", 0),
                                a.TgZ(71, "div", 24)(72, "table", 25),
                                a.ynx(73, 26),
                                a.YNc(74, Ud, 2, 0, "th", 27),
                                a.YNc(75, Nd, 3, 8, "td", 28),
                                a.BQk(),
                                a.ynx(76, 29),
                                a.YNc(77, Md, 2, 0, "th", 27),
                                a.YNc(78, Kd, 2, 1, "td", 28),
                                a.BQk(),
                                a.ynx(79, 30),
                                a.YNc(80, Jd, 2, 0, "th", 27),
                                a.YNc(81, qd, 2, 1, "td", 28),
                                a.BQk(),
                                a.ynx(82, 31),
                                a.YNc(83, Yd, 2, 0, "th", 27),
                                a.YNc(84, Wd, 2, 1, "td", 28),
                                a.BQk(),
                                a.ynx(85, 32),
                                a.YNc(86, Gd, 2, 0, "th", 27),
                                a.YNc(87, Qd, 3, 4, "td", 28),
                                a.BQk(),
                                a.ynx(88, 33),
                                a.YNc(89, Od, 2, 0, "th", 27),
                                a.YNc(90, Ed, 3, 4, "td", 28),
                                a.BQk(),
                                a.ynx(91, 34),
                                a.YNc(92, Hd, 2, 0, "th", 27),
                                a.YNc(93, $d, 3, 4, "td", 28),
                                a.BQk(),
                                a.YNc(94, zd, 1, 0, "tr", 35),
                                a.YNc(95, Vd, 1, 0, "tr", 36),
                                a.qZA(),
                                a.TgZ(96, "mat-paginator", 37, 38),
                                a.NdJ("page", function (s) {
                                    return e.onPageChange(s);
                                }),
                                a.qZA()()()()),
                                2 & t &&
                                    (a.Q6J("ngIf", 41 == e.userSession.level_id && "renja" === e.activeUrl),
                                    a.xp6(7),
                                    a.Q6J("ngClass", (null == e.rekapMutakhir ? null : e.rekapMutakhir.sub_giat) > 0 ? "bg-danger" : "bg-success"),
                                    a.xp6(8),
                                    a.Oqu(null == e.rekapMutakhir ? null : e.rekapMutakhir.sub_giat),
                                    a.xp6(1),
                                    a.Q6J("ngClass", (null == e.rekapMutakhir ? null : e.rekapMutakhir.sumber_dana) > 0 ? "bg-danger" : "bg-success"),
                                    a.xp6(8),
                                    a.Oqu(null == e.rekapMutakhir ? null : e.rekapMutakhir.sumber_dana),
                                    a.xp6(1),
                                    a.Q6J("ngClass", (null == e.rekapMutakhir ? null : e.rekapMutakhir.rekening_bl) > 0 ? "bg-danger" : "bg-success"),
                                    a.xp6(8),
                                    a.Oqu(null == e.rekapMutakhir ? null : e.rekapMutakhir.rekening_bl),
                                    a.xp6(1),
                                    a.Q6J("ngClass", (null == e.rekapMutakhir ? null : e.rekapMutakhir.pendapatan) > 0 ? "bg-danger" : "bg-success"),
                                    a.xp6(8),
                                    a.Oqu(null == e.rekapMutakhir ? null : e.rekapMutakhir.pendapatan),
                                    a.xp6(1),
                                    a.Q6J("ngClass", (null == e.rekapMutakhir ? null : e.rekapMutakhir.pembiayaan) > 0 ? "bg-danger" : "bg-success"),
                                    a.xp6(8),
                                    a.Oqu(null == e.rekapMutakhir ? null : e.rekapMutakhir.pembiayaan),
                                    a.xp6(1),
                                    a.Q6J("ngClass", (null == e.rekapMutakhir ? null : e.rekapMutakhir.ssh) > 0 ? "bg-danger" : "bg-success"),
                                    a.xp6(8),
                                    a.Oqu(null == e.rekapMutakhir ? null : e.rekapMutakhir.ssh),
                                    a.xp6(5),
                                    a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen021.svg"),
                                    a.xp6(1),
                                    a.Q6J("value", e.filter),
                                    a.xp6(2),
                                    a.Q6J("ngIf", "renja" == e.activeUrl || "anggaran" == e.activeUrl),
                                    a.xp6(2),
                                    a.Q6J("ngIf", e.isLoadingResults),
                                    a.xp6(2),
                                    a.Q6J("dataSource", e.dataSource),
                                    a.xp6(22),
                                    a.Q6J("matHeaderRowDef", e.displayedColumns),
                                    a.xp6(1),
                                    a.Q6J("matRowDefColumns", e.displayedColumns),
                                    a.xp6(1),
                                    a.Q6J("length", e.resultsLength)("pageSize", 20)("pageSizeOptions", a.DdM(23, Xd)));
                        },
                        directives: [j.O5, jd, j.mk, aa._L, Ma.d$, aa.jt, aa.iD, aa.Vi, aa.TH, Ae.I, L.BZ, L.w1, L.fO, L.ge, L.Dz, L.ev, Aa.yS, L.as, L.XQ, L.nj, L.Gk, X.NW],
                        pipes: [j.JJ],
                        styles: [""],
                    })),
                    i
                );
            })();
            function tu(i, d) {
                1 & i && (a.TgZ(0, "div", 6), a._UZ(1, "div", 7), a.qZA());
            }
            function eu(i, d) {
                if ((1 & i && (a.TgZ(0, "option", 20), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.Q6J("value", t.id_sub_bl), a.xp6(1), a.AsE(" ", t.kode_sub_giat, " ", t.nama_sub_giat, " ");
                }
            }
            function nu(i, d) {
                1 & i && (a.ynx(0), a._uU(1, "Proses"), a.BQk());
            }
            function iu(i, d) {
                1 & i && (a.ynx(0), a.TgZ(1, "span", 21), a._uU(2), a._UZ(3, "span", 22), a.qZA(), a.BQk()), 2 & i && (a.xp6(1), a.Udp("display", "block"), a.xp6(1), a.hij(" Menyimpan...", " ", " "));
            }
            function su(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "form", 8),
                        a.NdJ("submit", function () {
                            return a.CHM(t), a.oxw().onSubmit();
                        }),
                        a.TgZ(1, "div", 9)(2, "div", 10)(3, "label", 11),
                        a._uU(4, "Sub Kegiatan"),
                        a.qZA(),
                        a.TgZ(5, "div", 12)(6, "select", 13)(7, "option", 14),
                        a._uU(8, "Pilih Sub Kegiatan..."),
                        a.qZA(),
                        a.YNc(9, eu, 2, 3, "option", 15),
                        a.qZA()()()(),
                        a.TgZ(10, "div", 16)(11, "span", 17),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw().activeModal.close("Close click");
                        }),
                        a._uU(12, " Tutup "),
                        a.qZA(),
                        a.TgZ(13, "button", 18),
                        a.YNc(14, nu, 2, 0, "ng-container", 19),
                        a.YNc(15, iu, 4, 3, "ng-container", 19),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw();
                    a.Q6J("formGroup", t.pindahForm), a.xp6(9), a.Q6J("ngForOf", t.subBelanjaList), a.xp6(4), a.Q6J("disabled", t.pindahForm.invalid || t.isSaving), a.xp6(1), a.Q6J("ngIf", !t.isSaving), a.xp6(1), a.Q6J("ngIf", t.isSaving);
                }
            }
            let ou = (() => {
                class i {
                    constructor(t, e, n, s, o) {
                        (this.activeModal = t),
                            (this.konfigurasiService = e),
                            (this.subBelanjaService = n),
                            (this.renjaRincianBelanjaService = s),
                            (this.toastr = o),
                            (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))),
                            (this.pageTitle = "Pindahkan Rincian Belanja"),
                            (this.mode = "edit"),
                            (this.subBelanjaIsLoading = !1);
                    }
                    ngOnInit() {
                        var t;
                        const e = new FormData();
                        e.append("tahun", this.konfigurasiService.getTahun()),
                            e.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                            e.append("id_unit", String((null === (t = this.subBelanja) || void 0 === t ? void 0 : t.id_sub_skpd) || 0)),
                            (this.subBelanjaIsLoading = !0),
                            this.subBelanjaService.listSubBL(e).subscribe({
                                next: (n) => {
                                    (this.subBelanjaIsLoading = !1), (this.subBelanjaList = n.data), console.log(this.subBelanjaList), this.buildForm();
                                },
                                error: (n) => {
                                    this.subBelanjaIsLoading = !1;
                                },
                            });
                    }
                    buildForm() {
                        this.pindahForm = new p.cw({ id_sub_bl_baru: new p.NI("", [p.kI.required]) });
                    }
                    onSubmit() {
                        var t, e, n, s;
                        if (null === (t = this.pindahForm) || void 0 === t ? void 0 : t.invalid) return void alert("Mohon semua kolom form diisi");
                        const o = new FormData();
                        o.append("tahun", this.konfigurasiService.getTahun()),
                            o.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                            o.append("id_unit", String((null === (e = this.subBelanja) || void 0 === e ? void 0 : e.id_sub_skpd) || 0)),
                            o.append("id_sub_bl_lama", String((null === (n = this.subBelanja) || void 0 === n ? void 0 : n.id_sub_bl) || 0)),
                            o.append("id_sub_bl_baru", String((null === (s = this.pindahForm) || void 0 === s ? void 0 : s.value.id_sub_bl_baru) || 0)),
                            (this.pindahRincianSub = this.renjaRincianBelanjaService.pindahRincianBelanjaAll(o).subscribe({
                                next: (l) => {
                                    (this.isSaving = !1), this.activeModal.close(l), this.toastr.success(l.message, "Sukses");
                                },
                                error: (l) => {
                                    var _;
                                    (this.isSaving = !1), null === (_ = this.pindahForm) || void 0 === _ || _.enable(), this.toastr.error(l.error.message, "Error");
                                },
                            }));
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(aa.Kz), a.Y36(Ra.W), a.Y36(Wa.x), a.Y36($a), a.Y36(Na._W));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-pindah-rincian"]],
                        decls: 8,
                        vars: 3,
                        consts: [
                            [1, "modal-header"],
                            [1, "fw-bolder", "m-0"],
                            ["type", "button", "aria-label", "Close", 1, "btn-close", 3, "click"],
                            [1, "card", "mb-3"],
                            ["class", "d-flex justify-content-center mt-20 mb-20", 4, "ngIf"],
                            ["novalidate", "", "class", "form", 3, "formGroup", "submit", 4, "ngIf"],
                            [1, "d-flex", "justify-content-center", "mt-20", "mb-20"],
                            [1, "spinner-border"],
                            ["novalidate", "", 1, "form", 3, "formGroup", "submit"],
                            [1, "card-body", "border-top", "p-9"],
                            [1, "row", "mb-6"],
                            ["for", "typeahead-sub-unit", 1, "col-lg-2", "col-form-label", "required", "fw-bold", "fs-6"],
                            [1, "col-lg-10", "fv-row"],
                            ["formControlName", "id_sub_bl_baru", "name", "sub_bl_baru", 1, "form-select"],
                            ["value", ""],
                            [3, "value", 4, "ngFor", "ngForOf"],
                            [1, "card-footer", "d-flex", "justify-content-between", "py-5", "px-9"],
                            [1, "btn", "btn-outline-danger", 3, "click"],
                            ["type", "submit", 1, "btn", "btn-success", 3, "disabled"],
                            [4, "ngIf"],
                            [3, "value"],
                            ["clas", "indicator-progress"],
                            [1, "spinner-border", "spinner-border-sm", "align-middle", "ms-2"],
                        ],
                        template: function (t, e) {
                            1 & t &&
                                (a.TgZ(0, "div", 0)(1, "h3", 1),
                                a._uU(2),
                                a.qZA(),
                                a.TgZ(3, "button", 2),
                                a.NdJ("click", function () {
                                    return e.activeModal.dismiss("Cross click");
                                }),
                                a.qZA()(),
                                a.TgZ(4, "div", 3),
                                a.YNc(5, tu, 2, 0, "div", 4),
                                a.TgZ(6, "div"),
                                a.YNc(7, su, 16, 5, "form", 5),
                                a.qZA()()),
                                2 & t && (a.xp6(2), a.Oqu(e.pageTitle), a.xp6(3), a.Q6J("ngIf", e.subBelanjaIsLoading), a.xp6(2), a.Q6J("ngIf", e.pindahForm));
                        },
                        directives: [j.O5, p._Y, p.JL, p.sg, p.EJ, p.JJ, p.u, p.YN, p.Kr, j.sg],
                        styles: [""],
                    })),
                    i
                );
            })();
            function lu(i, d) {
                1 & i && a._UZ(0, "app-loading-spinner");
            }
            function ru(i, d) {
                1 & i && (a.TgZ(0, "div", 27)(1, "div", 28), a._uU(2, "Rincian Sub Kegiatan Melebihi Pagu Anggaran Sub Kegiatan"), a.qZA()());
            }
            function du(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 29),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).openPindahModal("all");
                        }),
                        a._UZ(1, "span", 30),
                        a._uU(2, " Pindah Rincian "),
                        a.qZA();
                }
                if (2 & i) {
                    const t = a.oxw(2);
                    a.Q6J("ngbTooltip", "Pindah Rincian Belanja antara Sub Kegiatan ")("disabled", t.toggleLockIsLoading), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/arrows/arr031.svg");
                }
            }
            const uu = function (i, d) {
                return { "btn-light-warning": i, "btn-light-success": d };
            };
            function _u(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 31),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).lockData();
                        }),
                        a._UZ(1, "span", 32),
                        a._uU(2),
                        a.qZA();
                }
                if (2 & i) {
                    const t = a.oxw(2);
                    a.Q6J("ngClass", a.WLB(5, uu, 0 == t.subBelanja.kunci_bl_rinci, 1 == t.subBelanja.kunci_bl_rinci))("ngbTooltip", 0 == t.subBelanja.kunci_bl_rinci ? "Kunci Rincian Belanja" : "Buka Rincian Belanja")(
                        "disabled",
                        t.toggleLockIsLoading
                    ),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen047.svg"),
                        a.xp6(1),
                        a.hij(" ", 0 == t.subBelanja.kunci_bl_rinci ? "Kunci" : "Buka", " ");
                }
            }
            function pu(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 33),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).deleteData();
                        }),
                        a._UZ(1, "span", 30),
                        a._uU(2, " Hapus "),
                        a.qZA();
                }
                if (2 & i) {
                    const t = a.oxw(2);
                    a.Q6J("disabled", t.toggleLockIsLoading || !t.dataSource.data.length), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen027.svg");
                }
            }
            function cu(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "button", 34),
                        a.NdJ("click", function () {
                            return a.CHM(t), a.oxw(2).openAddModal();
                        }),
                        a._UZ(1, "span", 30),
                        a._uU(2, " Tambah "),
                        a.qZA();
                }
                if (2 & i) {
                    const t = a.oxw(2);
                    a.Q6J("ngbTooltip", "Tambah Rincian Belanja")("disabled", t.toggleLockIsLoading), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/arrows/arr013.svg");
                }
            }
            function hu(i, d) {
                1 & i && (a.TgZ(0, "th", 49), a._uU(1, " Aksi "), a.qZA());
            }
            function gu(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.ynx(0),
                        a.TgZ(1, "button", 51),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw().$implicit;
                            return a.oxw(3).openEditModal(n, !0);
                        }),
                        a._UZ(2, "span", 30),
                        a.qZA(),
                        a.BQk();
                }
                if (2 & i) {
                    const t = a.oxw(4);
                    a.xp6(1), a.Q6J("disabled", t.toggleLockIsLoading), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen021.svg");
                }
            }
            function mu(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.ynx(0),
                        a.TgZ(1, "button", 52),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw().$implicit;
                            return a.oxw(3).openEditModal(n);
                        }),
                        a._UZ(2, "span", 30),
                        a.qZA(),
                        a.BQk();
                }
                if (2 & i) {
                    const t = a.oxw(4);
                    a.xp6(1), a.Q6J("disabled", t.toggleLockIsLoading), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/art/art005.svg");
                }
            }
            function bu(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.ynx(0),
                        a.TgZ(1, "button", 53),
                        a.NdJ("click", function () {
                            a.CHM(t);
                            const n = a.oxw().$implicit;
                            return a.oxw(3).hapusItem(n);
                        }),
                        a._UZ(2, "span", 30),
                        a.qZA(),
                        a.BQk();
                }
                if (2 & i) {
                    const t = a.oxw(4);
                    a.xp6(1), a.Q6J("disabled", t.toggleLockIsLoading), a.xp6(1), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen027.svg");
                }
            }
            function vu(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 50), a.YNc(1, gu, 3, 2, "ng-container", 0), a.YNc(2, mu, 3, 2, "ng-container", 0), a.YNc(3, bu, 3, 2, "ng-container", 0), a.qZA()), 2 & i)) {
                    const t = d.$implicit,
                        e = a.oxw(3);
                    a.xp6(1),
                        a.Q6J("ngIf", "child" == t.tingkatan),
                        a.xp6(1),
                        a.Q6J("ngIf", 0 == e.subBelanja.kunci_bl_rinci && "child" == t.tingkatan && "BERJALAN" == e.statusJadwal && e.aksesCrud),
                        a.xp6(1),
                        a.Q6J("ngIf", 0 == e.subBelanja.kunci_bl_rinci && "child" == t.tingkatan && "BERJALAN" == e.statusJadwal && e.aksesCrud);
                }
            }
            function ku(i, d) {
                1 & i && (a.TgZ(0, "th", 54), a._uU(1, "Uraian"), a.qZA());
            }
            function fu(i, d) {
                if ((1 & i && (a.TgZ(0, "b"), a._uU(1), a.qZA()), 2 & i)) {
                    const t = a.oxw().$implicit;
                    a.xp6(1), a.AsE(" [ ", t.tingkatan, " ] ", t.uraian, "");
                }
            }
            function Su(i, d) {
                1 & i && a._UZ(0, "span", 60), 2 & i && a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen044.svg");
            }
            function ju(i, d) {
                1 & i && a._UZ(0, "span", 61), 2 & i && a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen044.svg");
            }
            function Tu(i, d) {
                if ((1 & i && (a.TgZ(0, "p", 57), a.YNc(1, Su, 1, 1, "span", 58), a.YNc(2, ju, 1, 1, "span", 59), a.TgZ(3, "b"), a._uU(4), a.qZA(), a._UZ(5, "br"), a._uU(6), a.qZA()), 2 & i)) {
                    const t = a.oxw().$implicit;
                    a.xp6(1), a.Q6J("ngIf", t.akun_locked > 0), a.xp6(1), a.Q6J("ngIf", t.ssh_locked > 0), a.xp6(2), a.Oqu(t.uraian), a.xp6(2), a.hij(" ", t.spek, " ");
                }
            }
            function Iu(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 55), a.YNc(1, fu, 2, 2, "b", 0), a.YNc(2, Tu, 7, 4, "p", 56), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", "child" != t.tingkatan ? "6" : null), a.xp6(1), a.Q6J("ngIf", "child" != t.tingkatan && "child-akun" != t.tingkatan), a.xp6(1), a.Q6J("ngIf", "child" == t.tingkatan || "child-akun" == t.tingkatan);
                }
            }
            function Bu(i, d) {
                1 & i && (a.TgZ(0, "th", 54), a._uU(1, "Koefisien"), a.qZA());
            }
            function xu(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 55), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.Udp("display", "child" != t.tingkatan ? "none" : ""), a.xp6(1), a.hij(" ", t.koefisien, " ");
                }
            }
            function Cu(i, d) {
                1 & i && (a.TgZ(0, "th", 54), a._uU(1, "Harga Satuan"), a.qZA());
            }
            function yu(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 55), a._uU(1), a.ALo(2, "currency"), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.Udp("display", "child" != t.tingkatan ? "none" : ""), a.xp6(1), a.hij(" ", a.gM2(2, 3, t.rincianBelanja.harga_satuan, "IDR", "Rp ", "1.0-0"), " ");
                }
            }
            function Lu(i, d) {
                1 & i && (a.TgZ(0, "th", 54), a._uU(1, "Pajak (%)"), a.qZA());
            }
            function wu(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 55), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.Udp("display", "child" != t.tingkatan ? "none" : ""), a.xp6(1), a.hij(" ", t.pajak, " ");
                }
            }
            function Du(i, d) {
                1 & i && (a.TgZ(0, "th", 54), a._uU(1, "Total"), a.qZA());
            }
            function Ru(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 55), a._uU(1), a.ALo(2, "currency"), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.Udp("display", "child" != t.tingkatan ? "none" : ""), a.xp6(1), a.hij(" ", a.gM2(2, 3, t.total_harga, "IDR", "Rp ", "1.0-0"), " ");
                }
            }
            function Au(i, d) {
                1 & i && a._UZ(0, "tr", 62);
            }
            function Fu(i, d) {
                1 & i && a._UZ(0, "tr", 63);
            }
            function Uu(i, d) {
                if (
                    (1 & i &&
                        (a.TgZ(0, "table", 35),
                        a.ynx(1, 36),
                        a.YNc(2, hu, 2, 0, "th", 37),
                        a.YNc(3, vu, 4, 3, "td", 38),
                        a.BQk(),
                        a.ynx(4, 39),
                        a.YNc(5, ku, 2, 0, "th", 40),
                        a.YNc(6, Iu, 3, 3, "td", 41),
                        a.BQk(),
                        a.ynx(7, 42),
                        a.YNc(8, Bu, 2, 0, "th", 40),
                        a.YNc(9, xu, 2, 3, "td", 43),
                        a.BQk(),
                        a.ynx(10, 44),
                        a.YNc(11, Cu, 2, 0, "th", 40),
                        a.YNc(12, yu, 3, 8, "td", 43),
                        a.BQk(),
                        a.ynx(13, 45),
                        a.YNc(14, Lu, 2, 0, "th", 40),
                        a.YNc(15, wu, 2, 3, "td", 43),
                        a.BQk(),
                        a.ynx(16, 46),
                        a.YNc(17, Du, 2, 0, "th", 40),
                        a.YNc(18, Ru, 3, 8, "td", 43),
                        a.BQk(),
                        a.YNc(19, Au, 1, 0, "tr", 47),
                        a.YNc(20, Fu, 1, 0, "tr", 48),
                        a.qZA()),
                    2 & i)
                ) {
                    const t = a.oxw(2);
                    a.Q6J("dataSource", t.dataSource), a.xp6(19), a.Q6J("matHeaderRowDef", t.displayedColumns), a.xp6(1), a.Q6J("matRowDefColumns", t.displayedColumns);
                }
            }
            const Zu = function (i) {
                    return [i];
                },
                Pu = function (i) {
                    return { id_skpd: i };
                },
                Nu = function () {
                    return [10, 20, 50, 100];
                };
            function Mu(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 2),
                        a.YNc(1, ru, 3, 0, "div", 3),
                        a.TgZ(2, "div", 4)(3, "div", 5)(4, "div", 6)(5, "div", 7)(6, "div", 8)(7, "h4", 9),
                        a._uU(8, "Pagu Indikatif Per Skpd"),
                        a.qZA(),
                        a.TgZ(9, "p", 10),
                        a._uU(10),
                        a.ALo(11, "currency"),
                        a.qZA()()()()(),
                        a.TgZ(12, "div", 5)(13, "div", 6)(14, "div", 7)(15, "div", 8)(16, "h4", 9),
                        a._uU(17, "Rincian Per Skpd"),
                        a.qZA(),
                        a.TgZ(18, "p", 10),
                        a._uU(19),
                        a.ALo(20, "currency"),
                        a.qZA()()()()(),
                        a.TgZ(21, "div", 5)(22, "div", 6)(23, "div", 11)(24, "div", 12)(25, "h4", 9),
                        a._uU(26, "Pagu Anggaran Sub Kegiatan"),
                        a.qZA(),
                        a.TgZ(27, "p", 10),
                        a._uU(28),
                        a.ALo(29, "currency"),
                        a.qZA()()()()(),
                        a.TgZ(30, "div", 5)(31, "div", 6)(32, "div", 11)(33, "div", 12)(34, "h4", 9),
                        a._uU(35, "Rincian Per Sub Kegiatan"),
                        a.qZA(),
                        a.TgZ(36, "p", 10),
                        a._uU(37),
                        a.ALo(38, "currency"),
                        a.qZA()()()()()(),
                        a.TgZ(39, "div", 13)(40, "div", 6)(41, "div", 14),
                        a._UZ(42, "span", 15),
                        a.TgZ(43, "input", 16),
                        a.NdJ("keyup", function (n) {
                            return a.CHM(t), a.oxw().applyFilter(n);
                        }),
                        a.qZA()()(),
                        a.TgZ(44, "div", 17)(45, "a", 18),
                        a._uU(46, "Kembali"),
                        a.qZA(),
                        a.YNc(47, du, 3, 3, "button", 19),
                        a.YNc(48, _u, 3, 8, "button", 20),
                        a.ynx(49),
                        a.YNc(50, pu, 3, 2, "button", 21),
                        a.YNc(51, cu, 3, 3, "button", 22),
                        a.BQk(),
                        a.qZA()(),
                        a.TgZ(52, "div", 23)(53, "div", 24),
                        a.YNc(54, Uu, 21, 3, "table", 25),
                        a._UZ(55, "mat-paginator", 26),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw();
                    a.xp6(1),
                        a.Q6J("ngIf", t.rincianAnggaran > t.paguSubKegiatan),
                        a.xp6(9),
                        a.hij(" ", a.gM2(11, 14, t.paguIndikatif, "IDR", "Rp ", "1.0-0"), " "),
                        a.xp6(9),
                        a.hij(" ", a.gM2(20, 19, t.rincianAnggaranSkpd, "IDR", "Rp ", "1.0-0"), " "),
                        a.xp6(9),
                        a.hij(" ", a.gM2(29, 24, t.paguSubKegiatan, "IDR", "Rp ", "1.0-0"), " "),
                        a.xp6(9),
                        a.hij(" ", a.gM2(38, 29, t.rincianAnggaran, "IDR", "Rp ", "1.0-0"), " "),
                        a.xp6(5),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen021.svg"),
                        a.xp6(3),
                        a.Q6J("routerLink", a.VKq(34, Zu, t.activeFullUrl + "/cascading/belanja"))("queryParams", a.VKq(36, Pu, t.subBelanja.id_unit)),
                        a.xp6(2),
                        a.Q6J("ngIf", 0 == t.subBelanja.kunci_bl_rinci && "BERJALAN" == t.statusJadwal && t.aksesCrud),
                        a.xp6(1),
                        a.Q6J("ngIf", (2 == t.userSession.level_id || 4 == t.userSession.level_id) && "BERJALAN" == t.statusJadwal),
                        a.xp6(2),
                        a.Q6J("ngIf", 0 == t.subBelanja.kunci_bl_rinci && "BERJALAN" == t.statusJadwal && t.aksesCrud),
                        a.xp6(1),
                        a.Q6J("ngIf", 0 == t.subBelanja.kunci_bl_rinci && "BERJALAN" == t.statusJadwal && t.aksesCrud),
                        a.xp6(3),
                        a.Q6J("ngIf", t.dataSource.data.length > 0),
                        a.xp6(1),
                        a.Q6J("pageSizeOptions", a.DdM(38, Nu));
                }
            }
            let gt = (() => {
                class i {
                    constructor(t, e, n, s, o, l, _, r, u, k, m, v, g, C, h) {
                        (this.router = t),
                            (this.modalService = e),
                            (this.toastr = n),
                            (this.konfigurasiService = s),
                            (this.renjaSubBelanjaService = o),
                            (this.renjaPaketBelanjaService = l),
                            (this.renjaKeteranganBelanjaService = _),
                            (this.renjaRincianBelanjaService = r),
                            (this.renjaStafBelanjaService = u),
                            (this.danaBelanjaService = k),
                            (this.jadwalRenjaService = m),
                            (this.renjaSetupUnitService = v),
                            (this.skpdService = g),
                            (this.modal = C),
                            (this.route = h),
                            (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))),
                            (this.statusJadwal = "BELUM_DIMULAI"),
                            (this.paguSubKegiatan = 0),
                            (this.paguIndikatif = 0),
                            (this.paguValidasi = 0),
                            (this.rincianAnggaran = 0),
                            (this.rincianAnggaranSkpd = 0),
                            (this.displayedColumns = ["aksi", "uraian", "koefisien", "harga_satuan", "pajak", "total_harga"]),
                            (this.display = []),
                            (this.dataSource = new L.by(this.rincianBelanjaList)),
                            (this.jadwalCekAktifIsLoading = !1),
                            (this.rincianBelanjaIsLoading = !1),
                            (this.rincianBelanjaSkpdIsLoading = !1),
                            (this.paketBelanjaIsLoading = !1),
                            (this.keteranganBelanjaIsLoading = !1),
                            (this.subBelanjaIsLoading = !1),
                            (this.setupUnitIsLoading = !1),
                            (this.danaBelanjaIsLoading = !1),
                            (this.toggleLockIsLoading = !1),
                            (this.allDataIsLoaded = !1),
                            (this.rincianBelanjaListIsLoaded = !1),
                            (this.subBelanjaDataLoaded = !1),
                            (this.paketBelanjaDataLoaded = !1),
                            (this.keteranganBelanjaDataLoaded = !1),
                            (this.aksesCrud = !1);
                    }
                    set paginator(t) {
                        this.dataSource.paginator = t;
                    }
                    set sort(t) {
                        this.dataSource.sort = t;
                    }
                    ngOnInit() {
                        (this.activeFullUrl = "/" + this.router.url.split("/")[1] + "/" + this.router.url.split("/")[2]), this.loadAkses(), this.cekJadwal(), this.setFilter();
                    }
                    ngOnDestroy() {
                        var t, e, n, s, o, l, _, r;
                        null === (t = this.subBelanjaSub) || void 0 === t || t.unsubscribe(),
                            null === (e = this.rincianBelanjaSub) || void 0 === e || e.unsubscribe(),
                            null === (n = this.paketBelanjaSub) || void 0 === n || n.unsubscribe(),
                            null === (s = this.lockRincianBelanjaSub) || void 0 === s || s.unsubscribe(),
                            null === (o = this.deleteRincianBelanjaSub) || void 0 === o || o.unsubscribe(),
                            null === (l = this.keteranganBelanjaSub) || void 0 === l || l.unsubscribe(),
                            null === (_ = this.danaBelanjaSub) || void 0 === _ || _.unsubscribe(),
                            null === (r = this.skpdSub) || void 0 === r || r.unsubscribe();
                    }
                    setFilter() {
                        this.dataSource.filterPredicate = (t, e) =>
                            !(
                                null == e.id[t.id_subs_sub_bl] ||
                                (null != t.id_subs_sub_bl &&
                                    Object.keys(e.id[t.id_subs_sub_bl]).length > 0 &&
                                    (null == e.id[t.id_subs_sub_bl][t.id_subs_sub_bl] ||
                                        (null != t.kode_akun &&
                                            e.id[t.id_subs_sub_bl][t.id_subs_sub_bl].length > 0 &&
                                            (-1 == e.id[t.id_subs_sub_bl][t.id_subs_sub_bl].indexOf(t.kode_akun) || ("child" == e.tingkatan[e.id[t.id_subs_sub_bl][t.id_subs_sub_bl].indexOf(t.kode_akun)] && "child" == t.tingkatan)) &&
                                            -1 == t.uraian.toLowerCase().indexOf(e.search))))
                            );
                    }
                    applyFilter(t) {
                        let e;
                        e = t.target.value;
                        let n = [],
                            s = { id: {}, tingkatan: [], search: e.toLowerCase() };
                        (n = this.display.filter((o) => o.uraian.toLowerCase().indexOf(e.toLowerCase()) > -1)),
                            n.forEach((o, l) => {
                                null == s.id[o.id_subs_sub_bl] && (s.id[o.id_subs_sub_bl] = {}),
                                    null != o.id_subs_sub_bl && null == s.id[o.id_subs_sub_bl][o.id_subs_sub_bl] && (s.id[o.id_subs_sub_bl][o.id_subs_sub_bl] = []),
                                    null != o.kode_akun && -1 == s.id[o.id_subs_sub_bl][o.id_subs_sub_bl].indexOf(o.kode_akun) && (s.id[o.id_subs_sub_bl][o.id_subs_sub_bl].push(o.kode_akun), s.tingkatan.push(o.tingkatan));
                            }),
                            (this.dataSource.filter = s);
                    }
                    openAddModal() {
                        const t = this.modalService.open(bt, { size: "lg" });
                        (t.componentInstance.mode = "add"),
                            (t.componentInstance.subBelanja = this.subBelanja),
                            (t.componentInstance.paguSubKegiatan = this.paguSubKegiatan),
                            (t.componentInstance.rincianAnggaran = this.rincianAnggaran),
                            (t.componentInstance.paguIndikatif = this.paguIndikatif),
                            (t.componentInstance.rincianAnggaranSkpd = this.rincianAnggaranSkpd),
                            (this.allDataIsLoaded = !1),
                            t.result.then(
                                (e) => {
                                    (this.rincianBelanjaListIsLoaded = !1),
                                        (this.paketBelanjaDataLoaded = !1),
                                        (this.subBelanjaDataLoaded = !1),
                                        (this.keteranganBelanjaDataLoaded = !1),
                                        this.loadRincianBelanjaList(),
                                        this.loadSubBelanjaList(),
                                        this.loadPaguIndikatifDanRincianSkpd();
                                },
                                (e) => {}
                            );
                    }
                    openPindahModal(t) {
                        const e = this.modalService.open(ou, { size: "lg" });
                        (e.componentInstance.mode = "add"),
                            (e.componentInstance.subBelanja = this.subBelanja),
                            (e.componentInstance.paguSubKegiatan = this.paguSubKegiatan),
                            (e.componentInstance.rincianAnggaran = this.rincianAnggaran),
                            (e.componentInstance.paguIndikatif = this.paguIndikatif),
                            (e.componentInstance.rincianAnggaranSkpd = this.rincianAnggaranSkpd),
                            (this.allDataIsLoaded = !1),
                            e.result.then(
                                (n) => {
                                    (this.rincianBelanjaListIsLoaded = !1),
                                        (this.paketBelanjaDataLoaded = !1),
                                        (this.subBelanjaDataLoaded = !1),
                                        (this.keteranganBelanjaDataLoaded = !1),
                                        this.loadRincianBelanjaList(),
                                        this.loadSubBelanjaList(),
                                        this.loadPaguIndikatifDanRincianSkpd();
                                },
                                (n) => {}
                            );
                    }
                    openEditModal(t, e = !1) {
                        const n = this.modalService.open(bt, { size: "lg" });
                        (n.componentInstance.mode = e ? "view" : "edit"),
                            (n.componentInstance.subBelanja = this.subBelanja),
                            (n.componentInstance.rincianBelanja = t.rincianBelanja),
                            (n.componentInstance.rincianAnggaran = this.rincianAnggaran),
                            (n.componentInstance.paguSubKegiatan = this.paguSubKegiatan),
                            (n.componentInstance.paguIndikatif = this.paguIndikatif),
                            (n.componentInstance.rincianAnggaranSkpd = this.rincianAnggaranSkpd),
                            (this.allDataIsLoaded = !1),
                            n.result.then(
                                (s) => {
                                    (this.rincianBelanjaListIsLoaded = !1),
                                        (this.paketBelanjaDataLoaded = !1),
                                        (this.subBelanjaDataLoaded = !1),
                                        (this.keteranganBelanjaDataLoaded = !1),
                                        this.loadRincianBelanjaList(),
                                        this.loadSubBelanjaList(),
                                        this.loadPaguIndikatifDanRincianSkpd();
                                },
                                (s) => {}
                            );
                    }
                    lockData() {
                        var t, e;
                        const n = new FormData();
                        if (this.subBelanja) {
                            Object.entries(this.subBelanja).forEach(([o, l]) => {
                                n.append(o, String(l));
                            }),
                                n.delete("set_pagu_at"),
                                n.delete("kunci_bl_at"),
                                n.delete("kunci_bl_rinci_at"),
                                n.delete("kunci_akb_rinci_at"),
                                n.append("id_daerah_log", null === (t = this.userSession) || void 0 === t ? void 0 : t.daerah_id),
                                n.append("id_user_log", null === (e = this.userSession) || void 0 === e ? void 0 : e.user_id),
                                n.append("aktivitas", "lock");
                            let s = 1;
                            1 == this.subBelanja.kunci_bl_rinci && (s = 0),
                                this.subBelanja.kunci_bl_rinci <= 1
                                    ? (n.set("kunci_bl_rinci", String(s)),
                                      (this.toggleLockIsLoading = !0),
                                      (this.lockRincianBelanjaSub = this.renjaSubBelanjaService.update(n).subscribe({
                                          next: (o) => {
                                              var l;
                                              let _ = 1 == (null === (l = this.subBelanja) || void 0 === l ? void 0 : l.kunci_bl_rinci) ? "Berhasil membuka kunci!" : "Data berhasil dikunci!";
                                              this.toastr.success(_, "Sukses"),
                                                  (this.allDataIsLoaded = !1),
                                                  (this.subBelanjaDataLoaded = !1),
                                                  (this.rincianBelanjaListIsLoaded = !1),
                                                  (this.paketBelanjaDataLoaded = !1),
                                                  (this.keteranganBelanjaDataLoaded = !1),
                                                  this.loadSubBelanjaList(),
                                                  this.loadRincianBelanjaList();
                                          },
                                          error: (o) => {
                                              (this.toggleLockIsLoading = !1), this.toastr.error("Proses data gagal", "Error!");
                                          },
                                      })))
                                    : this.toastr.error("Perubahan data tidak sesuai", "Error!");
                        }
                    }
                    deleteData() {
                        const t = this.modal.open(Qa.D, { size: "md" });
                        (t.componentInstance.tipe_icon = "exclamation"),
                            (t.componentInstance.warna_icon = "danger"),
                            (t.componentInstance.isi_text = "Hapus semua Rincian Belanja?"),
                            (t.componentInstance.tombol_true_text = "Ya"),
                            (t.componentInstance.tombol_false_text = "Kembali"),
                            t.result.then(
                                (e) => {
                                    var n, s, o;
                                    const l = new FormData();
                                    this.subBelanja &&
                                        1 == e &&
                                        (l.append("id_sub_bl", String(null === (n = this.subBelanja) || void 0 === n ? void 0 : n.id_sub_bl)),
                                        l.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                        l.append("tahun", this.konfigurasiService.getTahun()),
                                        l.append("id_daerah_log", null === (s = this.userSession) || void 0 === s ? void 0 : s.daerah_id),
                                        l.append("id_user_log", null === (o = this.userSession) || void 0 === o ? void 0 : o.user_id),
                                        l.append("aktivitas", "delete"),
                                        l.set("kunci_bl_rinci", String("3")),
                                        (this.dataSource.data = []),
                                        (this.deleteRincianBelanjaSub = this.renjaRincianBelanjaService.hapusRincianAll(l).subscribe({
                                            next: (r) => {
                                                this.toastr.success("Data berhasil dihapus", "Sukses"),
                                                    (this.rincianBelanjaListIsLoaded = !1),
                                                    (this.paketBelanjaDataLoaded = !1),
                                                    (this.subBelanjaDataLoaded = !1),
                                                    (this.keteranganBelanjaDataLoaded = !1),
                                                    this.loadRincianBelanjaList(),
                                                    this.loadSubBelanjaList(),
                                                    this.loadPaguIndikatifDanRincianSkpd();
                                            },
                                            error: (r) => {
                                                this.toastr.error("Proses data gagal", "Error!");
                                            },
                                        })));
                                },
                                (e) => {}
                            );
                    }
                    hapusItem(t) {
                        const e = this.modal.open(Qa.D, { size: "md" });
                        (e.componentInstance.tipe_icon = "exclamation"),
                            (e.componentInstance.warna_icon = "danger"),
                            (e.componentInstance.isi_text = "Hapus data yang dipilih?"),
                            (e.componentInstance.tombol_true_text = "Ya"),
                            (e.componentInstance.tombol_false_text = "Kembali"),
                            e.result.then(
                                (n) => {
                                    var s, o;
                                    const l = new FormData();
                                    this.subBelanja &&
                                        1 == n &&
                                        (l.append("id_rinci_sub_bl", String(t.id_rinci_sub_bl)),
                                        l.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                        l.append("tahun", this.konfigurasiService.getTahun()),
                                        l.append("id_daerah_log", null === (s = this.userSession) || void 0 === s ? void 0 : s.daerah_id),
                                        l.append("id_user_log", null === (o = this.userSession) || void 0 === o ? void 0 : o.user_id),
                                        l.append("aktivitas", "delete"),
                                        l.set("kunci_bl_rinci", String("3")),
                                        (this.deleteRincianBelanjaSub = this.renjaRincianBelanjaService.hapusRincian(l).subscribe({
                                            next: (r) => {
                                                this.toastr.success("Data berhasil dihapus", "Sukses"),
                                                    (this.allDataIsLoaded = !1),
                                                    (this.router.routeReuseStrategy.shouldReuseRoute = () => !1),
                                                    (this.router.onSameUrlNavigation = "reload"),
                                                    this.router.navigate(["./"], { relativeTo: this.route });
                                            },
                                            error: (r) => {
                                                this.toastr.error("Proses data gagal", "Error!");
                                            },
                                        })));
                                },
                                (n) => {}
                            );
                    }
                    cekJadwal() {
                        const t = new FormData();
                        t.append("id_daerah", this.konfigurasiService.getIdDaerah()), t.append("tahun", this.konfigurasiService.getTahun());
                        let e = 0;
                        (this.isAnggaran = "0"),
                            "anggaran" == this.router.url.split("/")[2] && (t.append("is_anggaran", "1"), (e = 1), (this.isAnggaran = "1")),
                            (this.jadwalCekAktifIsLoading = !0),
                            (this.jadwalCekAktifSub = this.jadwalRenjaService.cekJadwalAktif(t, e).subscribe({
                                next: (n) => {
                                    var s, o, l, _, r;
                                    if (((this.jadwalCekAktifIsLoading = !1), (this.renjaJadwal = n.data[0]), n.data.length > 0))
                                        if ((null === (s = this.renjaJadwal) || void 0 === s ? void 0 : s.waktu_mulai) && (null === (o = this.renjaJadwal) || void 0 === o ? void 0 : o.waktu_selesai)) {
                                            const k = new Date();
                                            var u = new Date(null === (l = this.renjaJadwal) || void 0 === l ? void 0 : l.waktu_mulai);
                                            const m = new Date(null === (_ = this.renjaJadwal) || void 0 === _ ? void 0 : _.waktu_selesai);
                                            u.setHours(u.getHours() - 7),
                                                (this.statusJadwal = 1 == (null === (r = this.renjaJadwal) || void 0 === r ? void 0 : r.is_locked) ? "SELESAI" : k < u ? "BELUM_DIMULAI" : k > m ? "SELESAI" : "BERJALAN");
                                        } else this.statusJadwal = "BELUM_DIMULAI";
                                    else this.statusJadwal = "BELUM_DIMULAI";
                                    this.loadRincianBelanjaList(), this.loadSubBelanjaList(), this.loadPaguIndikatifDanRincianSkpd();
                                },
                                error: (n) => {
                                    this.jadwalCekAktifIsLoading = !1;
                                },
                            }));
                    }
                    loadRincianBelanjaList() {
                        var t, e;
                        const n = new FormData();
                        n.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                            n.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                            n.append("id_sub_bl", String((null === (t = this.subBelanja) || void 0 === t ? void 0 : t.id_sub_bl) || 0)),
                            n.append("id_unit", String((null === (e = this.subBelanja) || void 0 === e ? void 0 : e.id_unit) || 0)),
                            n.append("is_anggaran", this.isAnggaran),
                            (this.rincianBelanjaIsLoading = !0),
                            (this.rincianBelanjaSub = this.renjaRincianBelanjaService.getByIdSubBl(n).subscribe({
                                next: (s) => {
                                    var o, l;
                                    (this.rincianBelanjaIsLoading = !1), (this.rincianBelanjaList = s.data), (this.rincianBelanjaListIsLoaded = !0);
                                    let _ = 0;
                                    this.rincianBelanjaList.forEach((k) => {
                                        _ += k.total_harga;
                                    }),
                                        (this.rincianAnggaran = _),
                                        (this.paguValidasi = (null === (o = this.subBelanja) || void 0 === o ? void 0 : o.pagu) || 0);
                                    const r = [],
                                        u = [];
                                    null === (l = this.rincianBelanjaList) ||
                                        void 0 === l ||
                                        l.forEach((k) => {
                                            r.push(k.id_subs_sub_bl), u.push(k.id_ket_sub_bl);
                                        }),
                                        this.loadSubsSubBl(r),
                                        this.loadKetSubBl(u);
                                },
                                error: (s) => {
                                    this.rincianBelanjaIsLoading = !1;
                                },
                            }));
                    }
                    loadSubBelanjaList() {
                        var t;
                        const e = new FormData();
                        e.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                            e.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                            e.append("is_anggaran", this.isAnggaran),
                            (this.subBelanjaIsLoading = !0),
                            (this.subBelanjaSub = this.renjaSubBelanjaService.view(String(null === (t = this.subBelanja) || void 0 === t ? void 0 : t.id_sub_bl), e).subscribe({
                                next: (n) => {
                                    var s, o, l, _, r, u, k, m, v;
                                    if (
                                        ((this.subBelanjaIsLoading = !1),
                                        (this.subBelanjaDataLoaded = !0),
                                        (this.toggleLockIsLoading = !1),
                                        (this.subBelanja = n.data[0]),
                                        this.loadPaguSubKegiatanByDana(),
                                        0 == (null === (s = this.renjaJadwal) || void 0 === s ? void 0 : s.is_rinci_bl) &&
                                            this.router.navigate([this.activeFullUrl + "/cascading/belanja"], { queryParams: { id_skpd: null === (o = this.subBelanja) || void 0 === o ? void 0 : o.id_unit } }),
                                        this.subBelanja)
                                    ) {
                                        const g = new FormData();
                                        g.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                            g.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                                            g.append("id_unit", String((null === (l = this.subBelanja) || void 0 === l ? void 0 : l.id_unit) || 0)),
                                            g.append("id_skpd", String((null === (_ = this.subBelanja) || void 0 === _ ? void 0 : _.id_skpd) || 0)),
                                            g.append("id_sub_skpd", String((null === (r = this.subBelanja) || void 0 === r ? void 0 : r.id_sub_skpd) || 0)),
                                            g.append("id_program", String((null === (u = this.subBelanja) || void 0 === u ? void 0 : u.id_program) || 0)),
                                            g.append("id_giat", String((null === (k = this.subBelanja) || void 0 === k ? void 0 : k.id_giat) || 0)),
                                            g.append("id_sub_giat", String((null === (m = this.subBelanja) || void 0 === m ? void 0 : m.id_sub_giat) || 0)),
                                            g.append("id_user", String((null === (v = this.userSession) || void 0 === v ? void 0 : v.user_id) || 0)),
                                            (this.stafBelanjaSub = this.renjaStafBelanjaService
                                                .findIdStaf(g)
                                                .pipe((0, Re.q)(1))
                                                .subscribe({
                                                    next: (C) => {
                                                        var h;
                                                        this.currentIdStaff = null === (h = C.data[0]) || void 0 === h ? void 0 : h.id_staf;
                                                    },
                                                    error: (C) => {},
                                                    complete: () => {
                                                        var C;
                                                        null === (C = this.stafBelanjaSub) || void 0 === C || C.unsubscribe(), this.buildDataSource();
                                                    },
                                                }));
                                    }
                                },
                                error: (n) => {
                                    this.subBelanjaIsLoading = !1;
                                },
                            }));
                    }
                    loadSubsSubBl(t) {
                        var e, n;
                        const s = new FormData();
                        s.append("id_daerah", String(null === (e = this.subBelanja) || void 0 === e ? void 0 : e.id_daerah)),
                            s.append("tahun", String(null === (n = this.subBelanja) || void 0 === n ? void 0 : n.tahun)),
                            s.append("__id_subs_sub_bl_list", t.length > 0 ? JSON.stringify(t) : "[]"),
                            s.append("is_anggaran", this.isAnggaran),
                            (this.paketBelanjaIsLoading = !0),
                            (this.paketBelanjaSub = this.renjaPaketBelanjaService.find_by_id_list(s).subscribe({
                                next: (o) => {
                                    (this.paketBelanjaIsLoading = !1), (this.paketBelanjaDataLoaded = !0), (this.paketBelanjaList = o.data), this.buildDataSource();
                                },
                                error: (o) => {
                                    this.paketBelanjaIsLoading = !1;
                                },
                            }));
                    }
                    loadKetSubBl(t) {
                        var e, n;
                        const s = new FormData();
                        s.append("id_daerah", String(null === (e = this.subBelanja) || void 0 === e ? void 0 : e.id_daerah)),
                            s.append("tahun", String(null === (n = this.subBelanja) || void 0 === n ? void 0 : n.tahun)),
                            s.append("__id_ket_sub_bl_list", t.length > 0 ? JSON.stringify(t) : "[]"),
                            s.append("is_anggaran", this.isAnggaran),
                            (this.keteranganBelanjaIsLoading = !0),
                            (this.keteranganBelanjaSub = this.renjaKeteranganBelanjaService.find_by_id_list(s).subscribe({
                                next: (o) => {
                                    (this.keteranganBelanjaIsLoading = !1), (this.keteranganBelanjaDataLoaded = !0), (this.keteranganBelanjaList = o.data), this.buildDataSource();
                                },
                                error: (o) => {
                                    this.keteranganBelanjaIsLoading = !1;
                                },
                            }));
                    }
                    buildDataSource() {
                        if (!this.allDataIsLoaded && this.rincianBelanjaListIsLoaded && this.paketBelanjaDataLoaded && this.subBelanjaDataLoaded && this.keteranganBelanjaDataLoaded) {
                            let t = 0;
                            this.rincianBelanjaList.forEach((o) => {
                                let l = this.paketBelanjaList.find((r) => r.id_subs_sub_bl == o.id_subs_sub_bl),
                                    _ = this.keteranganBelanjaList.find((r) => r.id_ket_sub_bl == o.id_ket_sub_bl);
                                (o.id_subs_sub_bl = null == l ? void 0 : l.id_subs_sub_bl),
                                    (o.is_paket = null == l ? void 0 : l.is_paket),
                                    (o.uraian_paket = null == l ? void 0 : l.subs_bl_teks),
                                    (o.keterangan_teks = null == _ ? void 0 : _.ket_bl_teks);
                            });
                            let e = "",
                                n = 0,
                                s = 0;
                            this.rincianBelanjaList
                                .sort((o, l) => o.is_paket - l.is_paket || o.id_ket_sub_bl - l.id_ket_sub_bl || o.kode_akun - l.kode_akun)
                                .forEach((o) => {
                                    e != o.uraian_paket &&
                                        ((this.display[t] = {
                                            id_subs_sub_bl: o.id_subs_sub_bl,
                                            uraian: o.uraian_paket,
                                            subBelanja: "",
                                            rincianBelanja: "",
                                            id_rinci_sub_bl: "",
                                            nama_akun: "",
                                            nama_standar_harga: "",
                                            harga_satuan: "",
                                            jenis_bl: "",
                                            tingkatan: "#",
                                            addData: !1,
                                            editData: !1,
                                            lockData: !1,
                                            deleteData: !1,
                                            akun_locked: 0,
                                            ssh_locked: 0,
                                        }),
                                        (e = o.uraian_paket),
                                        (n = 0),
                                        (s = 0),
                                        t++),
                                        n != o.id_ket_sub_bl &&
                                            ((this.display[t] = {
                                                id_subs_sub_bl: o.id_subs_sub_bl,
                                                id_ket_sub_bl: o.id_subs_sub_bl,
                                                uraian: o.keterangan_teks,
                                                subBelanja: "",
                                                rincianBelanja: "",
                                                id_rinci_sub_bl: "",
                                                nama_akun: "",
                                                nama_standar_harga: "",
                                                harga_satuan: "",
                                                jenis_bl: "",
                                                tingkatan: "-",
                                                addData: !1,
                                                editData: !1,
                                                lockData: !1,
                                                deleteData: !1,
                                                akun_locked: 0,
                                                ssh_locked: 0,
                                            }),
                                            (n = o.id_ket_sub_bl),
                                            (s = 0),
                                            t++),
                                        s != o.kode_akun &&
                                            ((this.display[t] = {
                                                id_subs_sub_bl: o.id_subs_sub_bl,
                                                id_ket_sub_bl: o.id_ket_sub_bl,
                                                kode_akun: o.kode_akun,
                                                uraian: o.kode_akun + " " + o.nama_akun,
                                                subBelanja: "",
                                                rincianBelanja: "",
                                                id_rinci_sub_bl: "",
                                                nama_akun: "",
                                                nama_standar_harga: "",
                                                harga_satuan: "",
                                                jenis_bl: "",
                                                tingkatan: "child-akun",
                                                addData: !1,
                                                editData: !1,
                                                lockData: !1,
                                                deleteData: !1,
                                                akun_locked: o.akun_locked,
                                                ssh_locked: 0,
                                            }),
                                            (s = o.kode_akun),
                                            t++),
                                        (this.display[t] = {
                                            id_subs_sub_bl: o.id_subs_sub_bl,
                                            id_ket_sub_bl: o.id_ket_sub_bl,
                                            kode_akun: o.kode_akun,
                                            subBelanja: this.subBelanja,
                                            uraian: null != o.nama_standar_harga ? o.nama_standar_harga : o.nama_akun,
                                            rincianBelanja: o,
                                            id_rinci_sub_bl: o.id_rinci_sub_bl,
                                            nama_akun: o.nama_akun,
                                            nama_standar_harga: o.nama_standar_harga,
                                            harga_satuan: o.harga_satuan,
                                            jenis_bl: o.jenis_bl,
                                            koefisien: o.koefisien,
                                            pajak: o.pajak,
                                            total_harga: o.total_harga,
                                            spek: null != o.spek ? (o.spek.length > 100 ? o.spek.substring(0, 99) + "..." : o.spek) : "",
                                            tingkatan: "child",
                                            addData: !1,
                                            editData: !0,
                                            lockData: !0,
                                            deleteData: !0,
                                            akun_locked: 0,
                                            ssh_locked: o.ssh_locked,
                                        }),
                                        t++;
                                }),
                                (this.dataSource.data = this.display),
                                (this.dataSource.paginator = this.paginator),
                                (this.dataSource.sort = this.sort),
                                (this.rincianBelanjaIsLoading = !1),
                                (this.allDataIsLoaded = !0);
                        }
                    }
                    viewSetupUnit() {
                        const t = new FormData();
                        t.append("tahun", this.konfigurasiService.getTahun()),
                            t.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                            t.append("id_unit", String(this.usedIdSkpd || 0)),
                            (this.viewSetupUnitIsLoading = !0),
                            (this.setupUnitSub = this.renjaSetupUnitService.findByIdUnit(t).subscribe({
                                next: (e) => {
                                    var n;
                                    (this.viewSetupUnitIsLoading = !1), (this.setupUnit = e.data[0]), (this.paguIndikatif = null === (n = this.setupUnit) || void 0 === n ? void 0 : n.pagu_indikatif);
                                },
                                error: (e) => {
                                    this.viewSetupUnitIsLoading = !1;
                                },
                            }));
                    }
                    loadAkses() {
                        const t = new FormData();
                        t.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                            t.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                            t.append("id_sub_bl", String(this.id_sub_bl || 0)),
                            (this.listOperatorBelanjaIsLoading = !0),
                            this.renjaStafBelanjaService.listOperatorBelanja(t).subscribe({
                                next: (e) => {
                                    (this.listOperatorBelanjaIsLoading = !1),
                                        e.data.length > 0
                                            ? e.data.forEach((n) => {
                                                  (n.id_staf == this.userSession.user_id || 41 == Number(this.userSession.level_id)) && (this.aksesCrud = !0);
                                              })
                                            : 41 == Number(this.userSession.level_id) && (this.aksesCrud = !0);
                                },
                                error: (e) => {
                                    this.listOperatorBelanjaIsLoading = !1;
                                },
                            });
                    }
                    loadPaguIndikatifDanRincianSkpd() {
                        var t, e, n, s;
                        (this.rincianBelanjaSkpdIsLoading = !0),
                            (this.skpdSub = this.skpdService
                                .view(
                                    Number(null !== (e = null === (t = this.subBelanja) || void 0 === t ? void 0 : t.id_sub_skpd) && void 0 !== e ? e : 0),
                                    null === (n = this.konfigurasiService) || void 0 === n ? void 0 : n.getTahun(),
                                    null === (s = this.konfigurasiService) || void 0 === s ? void 0 : s.getIdDaerah()
                                )
                                .subscribe({
                                    next: (o) => {
                                        var l, _;
                                        (this.usedIdSkpd = Number(1 == o.data[0].set_input ? (null === (l = this.subBelanja) || void 0 === l ? void 0 : l.id_sub_skpd) : null === (_ = this.subBelanja) || void 0 === _ ? void 0 : _.id_unit)),
                                            this.loadPaguRincianSkpd(),
                                            this.viewSetupUnit();
                                    },
                                    error: (o) => {
                                        this.rincianBelanjaSkpdIsLoading = !1;
                                    },
                                }));
                    }
                    loadPaguRincianSkpd() {
                        var t, e, n;
                        const s = new FormData();
                        s.append("tahun", String(null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun())),
                            s.append("id_daerah", String(null !== (n = null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) && void 0 !== n ? n : 0)),
                            s.append("id_skpd", String(this.usedIdSkpd)),
                            s.append("is_anggaran", this.isAnggaran),
                            (this.rincianBelanjaSub = this.renjaRincianBelanjaService.totalByIdSkpd(s).subscribe({
                                next: (o) => {
                                    var l;
                                    (this.rincianBelanjaSkpdIsLoading = !1), (this.rincianAnggaranSkpd = 0), (this.rincianAnggaranSkpd = null !== (l = o.data) && void 0 !== l ? l : 0), this.buildDataSource();
                                },
                                error: (o) => {
                                    this.rincianBelanjaSkpdIsLoading = !1;
                                },
                            }));
                    }
                    loadPaguSubKegiatanByDana() {
                        var t, e, n;
                        const s = new FormData();
                        s.append("tahun", String((null === (t = this.konfigurasiService) || void 0 === t ? void 0 : t.getTahun()) || 0)),
                            s.append("id_daerah", String((null === (e = this.konfigurasiService) || void 0 === e ? void 0 : e.getIdDaerah()) || 0)),
                            s.append("id_sub_bl", String((null === (n = this.subBelanja) || void 0 === n ? void 0 : n.id_sub_bl) || 0)),
                            (this.danaBelanjaIsLoading = !0),
                            (this.danaBelanjaSub = this.danaBelanjaService.getByIdSubBl(s).subscribe({
                                next: (o) => {
                                    var l;
                                    (this.danaBelanjaIsLoading = !1),
                                        (this.sumberDanaList = o.data),
                                        this.sumberDanaList.forEach((_) => {
                                            this.paguSubKegiatan += _.pagu_dana;
                                        }),
                                        (this.paguSubKegiatan = Number(null === (l = this.subBelanja) || void 0 === l ? void 0 : l.pagu));
                                },
                                error: (o) => {
                                    this.danaBelanjaIsLoading = !1;
                                },
                            }));
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(Aa.F0), a.Y36(aa.FF), a.Y36(Na._W), a.Y36(Ra.W), a.Y36(Wa.x), a.Y36(rt), a.Y36(lt), a.Y36($a), a.Y36(jt), a.Y36(at), a.Y36(Le.O), a.Y36(st.X), a.Y36(za.J), a.Y36(aa.FF), a.Y36(Aa.gz));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-rincian-belanja-list"]],
                        viewQuery: function (t, e) {
                            if ((1 & t && (a.Gf(X.NW, 5), a.Gf(S.YE, 5)), 2 & t)) {
                                let n;
                                a.iGM((n = a.CRH())) && (e.paginator = n.first), a.iGM((n = a.CRH())) && (e.sort = n.first);
                            }
                        },
                        inputs: { id_sub_bl: "id_sub_bl", subBelanja: "subBelanja" },
                        decls: 2,
                        vars: 2,
                        consts: [
                            [4, "ngIf"],
                            ["class", "card card-xl-stretch mb-xl-8 pt-3", 4, "ngIf"],
                            [1, "card", "card-xl-stretch", "mb-xl-8", "pt-3"],
                            ["class", "row mx-5 mt-5", 4, "ngIf"],
                            [1, "row", "mx-3", "mt-3", "text-center"],
                            [1, "col-3"],
                            [1, "card-title"],
                            [1, "card", "border-info", "mb-3", 2, "border", "1px solid #5bc0de"],
                            [1, "card-body", "text-info", "p-6"],
                            [1, "card-title", "mb-2", "alert-heading"],
                            [1, "card-text"],
                            [1, "card", "border-primary", "mb-3", 2, "border", "1px solid #5bc0de"],
                            [1, "card-body", "text-primary", "p-6"],
                            [1, "card-header", "border-0"],
                            [1, "d-flex", "align-items-center", "position-relative", "my-1"],
                            [1, "svg-icon", "svg-icon-1", "position-absolute", "ms-4", 3, "inlineSVG"],
                            ["type", "text", "placeholder", "Pencarian", 1, "form-control", "w-250px", "ps-14", 3, "keyup"],
                            [1, "card-toolbar"],
                            [1, "btn", "me-2", "btn-light", 3, "routerLink", "queryParams"],
                            ["class", "btn btn-light-warning me-2", 3, "ngbTooltip", "disabled", "click", 4, "ngIf"],
                            ["class", "btn me-2", 3, "ngClass", "ngbTooltip", "disabled", "click", 4, "ngIf"],
                            ["class", "btn btn-light-danger me-2", "ngbTooltip", "Hapus Rincian Belanja", 3, "disabled", "click", 4, "ngIf"],
                            ["class", "btn btn-primary", 3, "ngbTooltip", "disabled", "click", 4, "ngIf"],
                            [1, "card-body", "py-3"],
                            [1, "table-responsive"],
                            ["mat-table", "", "matSort", "", "class", "table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4", 3, "dataSource", 4, "ngIf"],
                            ["showFirstLastButtons", "", 3, "pageSizeOptions"],
                            [1, "row", "mx-5", "mt-5"],
                            ["role", "alert", 1, "alert", "alert-danger", "text-center"],
                            [1, "btn", "btn-light-warning", "me-2", 3, "ngbTooltip", "disabled", "click"],
                            [1, "svg-icon", "svg-icon-3", 3, "inlineSVG"],
                            [1, "btn", "me-2", 3, "ngClass", "ngbTooltip", "disabled", "click"],
                            [1, "svg-icon", "svg-icon-3", 2, "-webkit-transform", "scale(1.5)", "transform", "scale(1.5)", 3, "inlineSVG"],
                            ["ngbTooltip", "Hapus Rincian Belanja", 1, "btn", "btn-light-danger", "me-2", 3, "disabled", "click"],
                            [1, "btn", "btn-primary", 3, "ngbTooltip", "disabled", "click"],
                            ["mat-table", "", "matSort", "", 1, "table", "table-row-dashed", "table-row-gray-300", "align-middle", "gs-0", "gy-4", 3, "dataSource"],
                            ["matColumnDef", "aksi"],
                            ["mat-header-cell", "", "class", "fw-bolder text-center text-muted w-90px", 4, "matHeaderCellDef"],
                            ["mat-cell", "", "class", "text-center w-150px mx-2", 4, "matCellDef"],
                            ["matColumnDef", "uraian"],
                            ["mat-header-cell", "", "class", "fw-bolder text-muted", 4, "matHeaderCellDef"],
                            ["class", "pe-1", "mat-cell", "", 4, "matCellDef"],
                            ["matColumnDef", "koefisien"],
                            ["class", "pe-1", "mat-cell", "", 3, "display", 4, "matCellDef"],
                            ["matColumnDef", "harga_satuan"],
                            ["matColumnDef", "pajak"],
                            ["matColumnDef", "total_harga"],
                            ["mat-header-row", "", 4, "matHeaderRowDef"],
                            ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-center", "text-muted", "w-90px"],
                            ["mat-cell", "", 1, "text-center", "w-150px", "mx-2"],
                            ["ngbTooltip", "Lihat Rincian Belanja", 1, "btn", "btn-icon", "btn-light-primary", "btn-sm", "me-1", 3, "disabled", "click"],
                            ["ngbTooltip", "Ubah Rincian Belanja", 1, "btn", "btn-icon", "btn-light-primary", "btn-sm", "me-1", 3, "disabled", "click"],
                            ["ngbTooltip", "Hapus Item Rincian", 1, "btn", "btn-icon", "btn-light-danger", "btn-sm", "me-1", 3, "disabled", "click"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-muted"],
                            ["mat-cell", "", 1, "pe-1"],
                            ["class", "mb-0", 4, "ngIf"],
                            [1, "mb-0"],
                            ["class", "badge badge-warning svg-icon svg-icon-3 p-0", "ngbTooltip", "Rekening telah di non aktifkan. Silahkan mutakhirkan Rekening anda", 3, "inlineSVG", 4, "ngIf"],
                            ["class", "badge badge-warning svg-icon svg-icon-3 p-0", "ngbTooltip", "Standar Harga di non aktifkan. Silahkan rubah Standar Harga anda", 3, "inlineSVG", 4, "ngIf"],
                            ["ngbTooltip", "Rekening telah di non aktifkan. Silahkan mutakhirkan Rekening anda", 1, "badge", "badge-warning", "svg-icon", "svg-icon-3", "p-0", 3, "inlineSVG"],
                            ["ngbTooltip", "Standar Harga di non aktifkan. Silahkan rubah Standar Harga anda", 1, "badge", "badge-warning", "svg-icon", "svg-icon-3", "p-0", 3, "inlineSVG"],
                            ["mat-header-row", ""],
                            ["mat-row", ""],
                        ],
                        template: function (t, e) {
                            1 & t && (a.YNc(0, lu, 1, 0, "app-loading-spinner", 0), a.YNc(1, Mu, 56, 39, "div", 1)),
                                2 & t &&
                                    (a.Q6J(
                                        "ngIf",
                                        e.jadwalCekAktifIsLoading ||
                                            e.rincianBelanjaIsLoading ||
                                            e.paketBelanjaIsLoading ||
                                            e.keteranganBelanjaIsLoading ||
                                            e.listOperatorBelanjaIsLoading ||
                                            e.setupUnitIsLoading ||
                                            e.danaBelanjaIsLoading ||
                                            e.rincianBelanjaSkpdIsLoading ||
                                            e.danaBelanjaIsLoading ||
                                            e.viewSetupUnitIsLoading
                                    ),
                                    a.xp6(1),
                                    a.Q6J(
                                        "ngIf",
                                        !e.jadwalCekAktifIsLoading &&
                                            !e.rincianBelanjaIsLoading &&
                                            !e.paketBelanjaIsLoading &&
                                            !e.keteranganBelanjaIsLoading &&
                                            !e.viewSetupUnitIsLoading &&
                                            !e.listOperatorBelanjaIsLoading &&
                                            !e.setupUnitIsLoading &&
                                            !e.danaBelanjaIsLoading &&
                                            !e.rincianBelanjaSkpdIsLoading &&
                                            !e.danaBelanjaIsLoading &&
                                            e.subBelanja
                                    ));
                        },
                        directives: [j.O5, Ha.g, Ma.d$, Aa.yS, aa._L, j.mk, L.BZ, S.YE, L.w1, L.fO, L.ge, L.Dz, L.ev, L.as, L.XQ, L.nj, L.Gk, X.NW],
                        pipes: [j.H9],
                        styles: [""],
                    })),
                    i
                );
            })();
            function Ku(i, d) {
                1 & i && a._UZ(0, "app-loading-spinner");
            }
            function Ju(i, d) {
                1 & i && (a.TgZ(0, "th", 22), a._uU(1, " Aksi "), a.qZA());
            }
            function qu(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "td", 23)(1, "span")(2, "span", 24),
                        a.NdJ("click", function () {
                            const s = a.CHM(t).$implicit;
                            return a.oxw(3).openEditModal(s);
                        }),
                        a._UZ(3, "span", 25),
                        a.qZA()()();
                }
                2 & i && (a.xp6(3), a.Q6J("inlineSVG", "./assets/media/icons/duotune/art/art005.svg"));
            }
            function Yu(i, d) {
                1 & i && (a.TgZ(0, "th", 26), a._uU(1, " Keterangan Belanja "), a.qZA());
            }
            function Wu(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 27), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", t.ket_bl_teks, " ");
                }
            }
            function Gu(i, d) {
                1 & i && (a.TgZ(0, "th", 26), a._uU(1, " Anggaran "), a.qZA());
            }
            function Qu(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 27), a._uU(1), a.ALo(2, "currency"), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", a.gM2(2, 2, t.Anggaran, "IDR", "Rp ", "1.2-2"), " ");
                }
            }
            function Ou(i, d) {
                1 & i && a._UZ(0, "tr", 28);
            }
            function Eu(i, d) {
                1 & i && a._UZ(0, "tr", 29);
            }
            function Hu(i, d) {
                if (
                    (1 & i &&
                        (a.TgZ(0, "table", 12),
                        a.ynx(1, 13),
                        a.YNc(2, Ju, 2, 0, "th", 14),
                        a.YNc(3, qu, 4, 1, "td", 15),
                        a.BQk(),
                        a.ynx(4, 16),
                        a.YNc(5, Yu, 2, 0, "th", 17),
                        a.YNc(6, Wu, 2, 2, "td", 18),
                        a.BQk(),
                        a.ynx(7, 19),
                        a.YNc(8, Gu, 2, 0, "th", 17),
                        a.YNc(9, Qu, 3, 7, "td", 18),
                        a.BQk(),
                        a.YNc(10, Ou, 1, 0, "tr", 20),
                        a.YNc(11, Eu, 1, 0, "tr", 21),
                        a.qZA()),
                    2 & i)
                ) {
                    const t = a.oxw(2);
                    a.Q6J("dataSource", t.dataSource), a.xp6(10), a.Q6J("matHeaderRowDef", t.displayedColumns), a.xp6(1), a.Q6J("matRowDefColumns", t.displayedColumns);
                }
            }
            const $u = function () {
                return [10, 20, 50, 100];
            };
            function zu(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 3)(1, "div", 4)(2, "div", 5)(3, "div", 6),
                        a._UZ(4, "span", 7),
                        a.TgZ(5, "input", 8),
                        a.NdJ("keyup", function (n) {
                            return a.CHM(t), a.oxw().applyFilter(n);
                        }),
                        a.qZA()(),
                        a.TgZ(6, "div", 9),
                        a.YNc(7, Hu, 12, 3, "table", 10),
                        a._UZ(8, "mat-paginator", 11),
                        a.qZA()()()();
                }
                if (2 & i) {
                    const t = a.oxw();
                    a.xp6(4), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen021.svg"), a.xp6(3), a.Q6J("ngIf", t.dataSource.data.length > 0), a.xp6(1), a.Q6J("pageSizeOptions", a.DdM(3, $u));
                }
            }
            function Vu(i, d) {
                if ((1 & i && a._UZ(0, "app-renja-rincian-belanja-list", 30), 2 & i)) {
                    const t = a.oxw();
                    a.Q6J("id_sub_bl", t.id_sub_bl)("subBelanja", t.subBelanja);
                }
            }
            let Xu = (() => {
                class i {
                    constructor(t, e, n, s, o) {
                        (this.activatedRoute = t),
                            (this.modalService = e),
                            (this.konfigurasiService = n),
                            (this.subBelanjaService = s),
                            (this.keteranganBelanjaService = o),
                            (this.is_paket = !1),
                            (this.paguValidasi = 0),
                            (this.rincianAnggaran = 0),
                            (this.displayedColumns = ["keterangan_belanja", "anggaran"]),
                            (this.keteranganBelanjaList = []),
                            (this.display = []),
                            (this.dataSource = new L.by(this.keteranganBelanjaList)),
                            (this.subBelanjaIsLoading = !1),
                            (this.keteranganBelanjaIsLoading = !1),
                            (this.allDataIsLoaded = !1),
                            (this.keteranganBelanjaListIsLoaded = !1);
                    }
                    set paginator(t) {
                        this.dataSource.paginator = t;
                    }
                    set sort(t) {
                        this.dataSource.sort = t;
                    }
                    ngOnInit() {
                        this.activatedRoute.data.subscribe((t) => {
                            (this.title = t.title),
                                (this.is_paket = t.is_paket),
                                this.activatedRoute.params.subscribe((e) => {
                                    this.id_sub_bl = e.id_sub_bl;
                                    const n = new FormData();
                                    n.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                        (this.subBelanjaIsLoading = !0),
                                        (this.subBelanjaSub = this.subBelanjaService.view(String(this.id_sub_bl), n).subscribe({
                                            next: (s) => {
                                                (this.subBelanjaIsLoading = !1), (this.subBelanja = s.data[0]), this.loadKeteranganBelanjaList();
                                            },
                                            error: (s) => {
                                                this.subBelanjaIsLoading = !1;
                                            },
                                        }));
                                });
                        });
                    }
                    ngOnDestroy() {
                        var t, e;
                        null === (t = this.subBelanjaSub) || void 0 === t || t.unsubscribe(), null === (e = this.keteranganBelanjaSub) || void 0 === e || e.unsubscribe();
                    }
                    applyFilter(t) {}
                    openAddModal() {
                        const t = this.modalService.open(mt, { size: "lg" });
                        (t.componentInstance.mode = "create"),
                            (t.componentInstance.id_sub_bl = this.id_sub_bl),
                            (t.componentInstance.subBelanja = this.subBelanja),
                            (this.allDataIsLoaded = !1),
                            t.result.then(
                                (e) => {
                                    this.loadKeteranganBelanjaList();
                                },
                                (e) => {}
                            );
                    }
                    openEditModal(t) {
                        const e = this.modalService.open(mt, { size: "lg" });
                        (e.componentInstance.mode = "update"),
                            (e.componentInstance.id_sub_bl = this.id_sub_bl),
                            (e.componentInstance.subBelanja = t.subBelanja),
                            (e.componentInstance.keteranganBelanja = t.keteranganBelanja),
                            (e.componentInstance.id_ket_sub_bl = t.keteranganBelanja.id_ket_sub_bl),
                            (this.allDataIsLoaded = !1),
                            e.result.then(
                                (n) => {
                                    this.loadKeteranganBelanjaList();
                                },
                                (n) => {}
                            );
                    }
                    loadKeteranganBelanjaList() {
                        const t = new FormData();
                        t.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                            t.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                            t.append("id_sub_bl", String(this.id_sub_bl || 0)),
                            t.append("is_paket", String(this.is_paket || 0)),
                            (this.keteranganBelanjaIsLoading = !0),
                            (this.keteranganBelanjaSub = this.keteranganBelanjaService.find(t).subscribe({
                                next: (e) => {
                                    (this.keteranganBelanjaIsLoading = !1), (this.keteranganBelanjaList = e.data), (this.keteranganBelanjaListIsLoaded = !0), this.buildDataSource();
                                },
                                error: (e) => {
                                    this.keteranganBelanjaIsLoading = !1;
                                },
                            }));
                    }
                    buildDataSource() {
                        if (!1 === this.allDataIsLoaded && 1 == this.keteranganBelanjaListIsLoaded) {
                            let t = 0;
                            this.keteranganBelanjaList
                                .sort((e, n) => e.urut_sasaran - n.urut_sasaran)
                                .forEach((e) => {
                                    (this.display[t] = {
                                        subBelanja: this.subBelanja,
                                        keteranganBelanja: e,
                                        id_ket_sub_bl: e.id_ket_sub_bl,
                                        ket_bl_teks: e.ket_bl_teks,
                                        nama_akun: e.nama_akun,
                                        nama_standar_harga: e.nama_standar_harga,
                                        harga_satuan: e.harga_satuan,
                                        jenis_bl: e.jenis_bl,
                                        tingkatan: "",
                                        addData: !1,
                                        editData: !0,
                                    }),
                                        t++;
                                }),
                                (this.dataSource.data = this.display),
                                (this.dataSource.paginator = this.paginator),
                                (this.dataSource.sort = this.sort),
                                (this.allDataIsLoaded = !0);
                        }
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(Aa.gz), a.Y36(aa.FF), a.Y36(Ra.W), a.Y36(Wa.x), a.Y36(lt));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-keterangan-list"]],
                        viewQuery: function (t, e) {
                            if ((1 & t && (a.Gf(X.NW, 5), a.Gf(S.YE, 5)), 2 & t)) {
                                let n;
                                a.iGM((n = a.CRH())) && (e.paginator = n.first), a.iGM((n = a.CRH())) && (e.sort = n.first);
                            }
                        },
                        decls: 3,
                        vars: 3,
                        consts: [
                            [4, "ngIf"],
                            ["class", "card card-xl-stretch mb-xl-8", 4, "ngIf"],
                            [3, "id_sub_bl", "subBelanja", 4, "ngIf"],
                            [1, "card", "card-xl-stretch", "mb-xl-8"],
                            [1, "row", "mx-3", "mt-3"],
                            [1, "card-body", "py-3"],
                            [1, "d-flex", "align-items-center", "position-relative", "my-1", "py-2"],
                            [1, "svg-icon", "svg-icon-1", "position-absolute", "ms-4", 3, "inlineSVG"],
                            ["type", "text", "placeholder", "Pencarian", 1, "form-control", "form-control", "ps-14", 3, "keyup"],
                            [1, "table-responsive"],
                            ["mat-table", "", "matSort", "", "class", "table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4", 3, "dataSource", 4, "ngIf"],
                            ["showFirstLastButtons", "", 3, "pageSizeOptions"],
                            ["mat-table", "", "matSort", "", 1, "table", "table-row-dashed", "table-row-gray-300", "align-middle", "gs-0", "gy-4", 3, "dataSource"],
                            ["matColumnDef", "aksi"],
                            ["mat-header-cell", "", "class", "fw-bolder text-center text-muted w-90px", 4, "matHeaderCellDef"],
                            ["mat-cell", "", "class", "text-center w-150px mx-2", 4, "matCellDef"],
                            ["matColumnDef", "keterangan_belanja"],
                            ["mat-header-cell", "", "class", "fw-bolder text-muted", 4, "matHeaderCellDef"],
                            ["class", "pe-1", "mat-cell", "", 4, "matCellDef"],
                            ["matColumnDef", "anggaran"],
                            ["mat-header-row", "", 4, "matHeaderRowDef"],
                            ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-center", "text-muted", "w-90px"],
                            ["mat-cell", "", 1, "text-center", "w-150px", "mx-2"],
                            ["ngbTooltip", "Edit Rincian Belanja", 1, "btn", "btn-icon", "btn-light-primary", "btn-sm", "me-1", 3, "click"],
                            [1, "svg-icon", "svg-icon-3", 3, "inlineSVG"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-muted"],
                            ["mat-cell", "", 1, "pe-1"],
                            ["mat-header-row", ""],
                            ["mat-row", ""],
                            [3, "id_sub_bl", "subBelanja"],
                        ],
                        template: function (t, e) {
                            1 & t && (a.YNc(0, Ku, 1, 0, "app-loading-spinner", 0), a.YNc(1, zu, 9, 4, "div", 1), a.YNc(2, Vu, 1, 2, "app-renja-rincian-belanja-list", 2)),
                                2 & t &&
                                    (a.Q6J("ngIf", e.keteranganBelanjaIsLoading || e.subBelanjaIsLoading),
                                    a.xp6(1),
                                    a.Q6J("ngIf", !e.keteranganBelanjaIsLoading && !e.subBelanjaIsLoading),
                                    a.xp6(1),
                                    a.Q6J("ngIf", !e.keteranganBelanjaIsLoading && !e.subBelanjaIsLoading));
                        },
                        directives: [j.O5, Ha.g, Ma.d$, L.BZ, S.YE, L.w1, L.fO, L.ge, L.Dz, L.ev, aa._L, L.as, L.XQ, L.nj, L.Gk, X.NW, gt],
                        pipes: [j.H9],
                        styles: [""],
                    })),
                    i
                );
            })();
            function a_(i, d) {
                1 & i && a._UZ(0, "app-loading-spinner");
            }
            function t_(i, d) {
                1 & i && (a.TgZ(0, "th", 22), a._uU(1, " Aksi "), a.qZA());
            }
            function e_(i, d) {
                1 & i && (a.TgZ(0, "td", 23)(1, "span")(2, "span", 24), a._UZ(3, "span", 25), a.qZA()()()), 2 & i && (a.xp6(3), a.Q6J("inlineSVG", "./assets/media/icons/duotune/art/art005.svg"));
            }
            function n_(i, d) {
                1 & i && (a.TgZ(0, "th", 26), a._uU(1, " Nama Paket "), a.qZA());
            }
            function i_(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 27), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", t.subs_bl_teks, " ");
                }
            }
            function s_(i, d) {
                1 & i && (a.TgZ(0, "th", 26), a._uU(1, " Kelompok Belanja "), a.qZA());
            }
            function o_(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 27), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", t.subs_bl_teks, " ");
                }
            }
            function l_(i, d) {
                1 & i && (a.TgZ(0, "th", 26), a._uU(1, " Anggaran "), a.qZA());
            }
            function r_(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 27), a._uU(1), a.ALo(2, "currency"), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", a.gM2(2, 2, t.Anggaran, "IDR", "Rp ", "1.2-2"), " ");
                }
            }
            function d_(i, d) {
                1 & i && a._UZ(0, "tr", 28);
            }
            function u_(i, d) {
                1 & i && a._UZ(0, "tr", 29);
            }
            function __(i, d) {
                if (
                    (1 & i &&
                        (a.TgZ(0, "table", 11),
                        a.ynx(1, 12),
                        a.YNc(2, t_, 2, 0, "th", 13),
                        a.YNc(3, e_, 4, 1, "td", 14),
                        a.BQk(),
                        a.ynx(4, 15),
                        a.YNc(5, n_, 2, 0, "th", 16),
                        a.YNc(6, i_, 2, 2, "td", 17),
                        a.BQk(),
                        a.ynx(7, 18),
                        a.YNc(8, s_, 2, 0, "th", 16),
                        a.YNc(9, o_, 2, 2, "td", 17),
                        a.BQk(),
                        a.ynx(10, 19),
                        a.YNc(11, l_, 2, 0, "th", 16),
                        a.YNc(12, r_, 3, 7, "td", 17),
                        a.BQk(),
                        a.YNc(13, d_, 1, 0, "tr", 20),
                        a.YNc(14, u_, 1, 0, "tr", 21),
                        a.qZA()),
                    2 & i)
                ) {
                    const t = a.oxw(2);
                    a.Q6J("dataSource", t.dataSource), a.xp6(13), a.Q6J("matHeaderRowDef", t.displayedColumns), a.xp6(1), a.Q6J("matRowDefColumns", t.displayedColumns);
                }
            }
            const p_ = function () {
                return [10, 20, 50, 100];
            };
            function c_(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 3)(1, "div", 4)(2, "div", 5),
                        a._UZ(3, "span", 6),
                        a.TgZ(4, "input", 7),
                        a.NdJ("keyup", function (n) {
                            return a.CHM(t), a.oxw().applyFilter(n);
                        }),
                        a.qZA()(),
                        a.TgZ(5, "div", 8),
                        a.YNc(6, __, 15, 3, "table", 9),
                        a._UZ(7, "mat-paginator", 10),
                        a.qZA()()();
                }
                if (2 & i) {
                    const t = a.oxw();
                    a.xp6(3), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen021.svg"), a.xp6(3), a.Q6J("ngIf", t.dataSource.data.length > 0), a.xp6(1), a.Q6J("pageSizeOptions", a.DdM(3, p_));
                }
            }
            function h_(i, d) {
                if ((1 & i && a._UZ(0, "app-renja-rincian-belanja-list", 30), 2 & i)) {
                    const t = a.oxw();
                    a.Q6J("id_sub_bl", t.id_sub_bl)("subBelanja", t.subBelanja);
                }
            }
            let Fe = (() => {
                class i {
                    constructor(t, e, n, s, o, l) {
                        (this.activatedRoute = t),
                            (this.modalService = e),
                            (this.konfigurasiService = n),
                            (this.subBelanjaService = s),
                            (this.router = o),
                            (this.paketBelanjaService = l),
                            (this.is_paket = !1),
                            (this.paguValidasi = 0),
                            (this.rincianAnggaran = 0),
                            (this.displayedColumns = ["nama_paket", "anggaran"]),
                            (this.display = []),
                            (this.dataSource = new L.by(this.paketBelanjaList)),
                            (this.allDataIsLoaded = !1),
                            (this.rincianBelanjaPaketIsLoading = !1),
                            (this.rincianBelanjaPaketListIsLoaded = !1),
                            (this.subBelanjaIsLoading = !1);
                    }
                    set paginator(t) {
                        this.dataSource.paginator = t;
                    }
                    set sort(t) {
                        this.dataSource.sort = t;
                    }
                    ngOnInit() {
                        let t = this.router.url.split("/");
                        (this.displayedColumns[0] = (null == t ? void 0 : t.some((e) => "grup-belanja" === String(e))) ? "kelompok_belanja" : "nama_paket"),
                            this.activatedRoute.data.subscribe((e) => {
                                (this.title = e.title),
                                    (this.is_paket = e.is_paket),
                                    this.activatedRoute.params.subscribe((n) => {
                                        (this.id_sub_bl = n.id_sub_bl), this.loadSubBelanjaList(), this.loadRincianBelanjaPaketList();
                                    });
                            });
                    }
                    applyFilter(t) {}
                    loadSubBelanjaList() {
                        const t = new FormData();
                        t.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                            t.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                            (this.subBelanjaIsLoading = !0),
                            (this.subBelanjaSub = this.subBelanjaService.view(String(this.id_sub_bl), t).subscribe({
                                next: (e) => {
                                    (this.subBelanjaIsLoading = !1), (this.subBelanja = e.data[0]);
                                },
                                error: (e) => {
                                    this.subBelanjaIsLoading = !1;
                                },
                            }));
                    }
                    loadRincianBelanjaPaketList() {
                        const t = new FormData();
                        t.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                            t.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                            t.append("id_sub_bl", String(this.id_sub_bl || 0)),
                            t.append("is_paket", String(this.is_paket || 0)),
                            (this.rincianBelanjaPaketIsLoading = !0),
                            (this.rincianBelanjaPaketSub = this.paketBelanjaService.findByIdSubBl(t).subscribe({
                                next: (e) => {
                                    (this.rincianBelanjaPaketIsLoading = !1), (this.paketBelanjaList = e.data), (this.rincianBelanjaPaketListIsLoaded = !0), this.buildDataSource();
                                },
                                error: (e) => {
                                    this.rincianBelanjaPaketIsLoading = !1;
                                },
                            }));
                    }
                    buildDataSource() {
                        if (!1 === this.allDataIsLoaded && 1 == this.rincianBelanjaPaketListIsLoaded) {
                            let t = 0;
                            this.paketBelanjaList
                                .sort((e, n) => e.urut_sasaran - n.urut_sasaran)
                                .forEach((e) => {
                                    (this.display[t] = {
                                        subBelanja: this.subBelanja,
                                        paketBelanja: e,
                                        id_subs_sub_bl: e.id_subs_sub_bl,
                                        subs_bl_teks: e.subs_bl_teks,
                                        nama_akun: e.nama_akun,
                                        nama_standar_harga: e.nama_standar_harga,
                                        harga_satuan: e.harga_satuan,
                                        jenis_bl: e.jenis_bl,
                                        tingkatan: "",
                                        addData: !1,
                                        editData: !0,
                                    }),
                                        t++;
                                }),
                                (this.display[0] = {
                                    subBelanja: "",
                                    rincianBelanja: "",
                                    id_subs_sub_bl: "",
                                    nama_akun: "",
                                    nama_standar_harga: "",
                                    harga_satuan: "",
                                    jenis_bl: "",
                                    tingkatan: "",
                                    addData: !1,
                                    editData: !0,
                                    lockData: !0,
                                    deleteData: !0,
                                }),
                                (this.dataSource.data = this.display),
                                (this.dataSource.paginator = this.paginator),
                                (this.dataSource.sort = this.sort),
                                (this.allDataIsLoaded = !0);
                        }
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(Aa.gz), a.Y36(aa.FF), a.Y36(Ra.W), a.Y36(Wa.x), a.Y36(Aa.F0), a.Y36(rt));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-paket-list"]],
                        viewQuery: function (t, e) {
                            if ((1 & t && (a.Gf(X.NW, 5), a.Gf(S.YE, 5)), 2 & t)) {
                                let n;
                                a.iGM((n = a.CRH())) && (e.paginator = n.first), a.iGM((n = a.CRH())) && (e.sort = n.first);
                            }
                        },
                        decls: 3,
                        vars: 3,
                        consts: [
                            [4, "ngIf"],
                            ["class", "card card-xl-stretch mb-xl-8", 4, "ngIf"],
                            [3, "id_sub_bl", "subBelanja", 4, "ngIf"],
                            [1, "card", "card-xl-stretch", "mb-xl-8"],
                            [1, "card-body", "py-3"],
                            [1, "d-flex", "align-items-center", "position-relative", "my-1", "py-2"],
                            [1, "svg-icon", "svg-icon-1", "position-absolute", "ms-4", 3, "inlineSVG"],
                            ["type", "text", "placeholder", "Pencarian", 1, "form-control", "form-control", "ps-14", 3, "keyup"],
                            [1, "table-responsive"],
                            ["mat-table", "", "matSort", "", "class", "table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4", 3, "dataSource", 4, "ngIf"],
                            ["showFirstLastButtons", "", 3, "pageSizeOptions"],
                            ["mat-table", "", "matSort", "", 1, "table", "table-row-dashed", "table-row-gray-300", "align-middle", "gs-0", "gy-4", 3, "dataSource"],
                            ["matColumnDef", "aksi"],
                            ["mat-header-cell", "", "class", "fw-bolder text-center text-muted w-90px", 4, "matHeaderCellDef"],
                            ["mat-cell", "", "class", "text-center w-150px mx-2", 4, "matCellDef"],
                            ["matColumnDef", "nama_paket"],
                            ["mat-header-cell", "", "class", "fw-bolder text-muted", 4, "matHeaderCellDef"],
                            ["class", "pe-1", "mat-cell", "", 4, "matCellDef"],
                            ["matColumnDef", "kelompok_belanja"],
                            ["matColumnDef", "anggaran"],
                            ["mat-header-row", "", 4, "matHeaderRowDef"],
                            ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-center", "text-muted", "w-90px"],
                            ["mat-cell", "", 1, "text-center", "w-150px", "mx-2"],
                            ["ngbTooltip", "Edit Rincian Belanja", 1, "btn", "btn-icon", "btn-light-primary", "btn-sm", "me-1"],
                            [1, "svg-icon", "svg-icon-3", 3, "inlineSVG"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-muted"],
                            ["mat-cell", "", 1, "pe-1"],
                            ["mat-header-row", ""],
                            ["mat-row", ""],
                            [3, "id_sub_bl", "subBelanja"],
                        ],
                        template: function (t, e) {
                            1 & t && (a.YNc(0, a_, 1, 0, "app-loading-spinner", 0), a.YNc(1, c_, 8, 4, "div", 1), a.YNc(2, h_, 1, 2, "app-renja-rincian-belanja-list", 2)),
                                2 & t &&
                                    (a.Q6J("ngIf", e.rincianBelanjaPaketIsLoading || e.subBelanjaIsLoading),
                                    a.xp6(1),
                                    a.Q6J("ngIf", !e.rincianBelanjaPaketIsLoading && !e.subBelanjaIsLoading),
                                    a.xp6(1),
                                    a.Q6J("ngIf", !e.rincianBelanjaPaketIsLoading && !e.subBelanjaIsLoading));
                        },
                        directives: [j.O5, Ha.g, Ma.d$, L.BZ, S.YE, L.w1, L.fO, L.ge, L.Dz, L.ev, aa._L, L.as, L.XQ, L.nj, L.Gk, X.NW, gt],
                        pipes: [j.H9],
                        styles: [""],
                    })),
                    i
                );
            })();
            function g_(i, d) {
                1 & i && a._UZ(0, "app-loading-spinner");
            }
            function m_(i, d) {
                1 & i && (a.TgZ(0, "th", 22), a._uU(1, " Kode Akun "), a.qZA());
            }
            function b_(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 23), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", t.kode_akun, " ");
                }
            }
            function v_(i, d) {
                1 & i && (a.TgZ(0, "th", 22), a._uU(1, " Nama Akun "), a.qZA());
            }
            function k_(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 23), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", t.nama_akun, " ");
                }
            }
            function f_(i, d) {
                1 & i && (a.TgZ(0, "th", 22), a._uU(1, " Total Belanja "), a.qZA());
            }
            function S_(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 23), a._uU(1), a.ALo(2, "currency"), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", a.gM2(2, 2, t.total_belanja, "IDR", "Rp ", "1.2-2"), " ");
                }
            }
            function j_(i, d) {
                1 & i && (a.TgZ(0, "th", 22), a._uU(1, " Uraian Akun "), a.qZA());
            }
            function T_(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 23), a._uU(1), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", t.uraian_akun, " ");
                }
            }
            function I_(i, d) {
                1 & i && (a.TgZ(0, "th", 22), a._uU(1, " Anggaran "), a.qZA());
            }
            function B_(i, d) {
                if ((1 & i && (a.TgZ(0, "td", 23), a._uU(1), a.ALo(2, "currency"), a.qZA()), 2 & i)) {
                    const t = d.$implicit;
                    a.uIk("colspan", t.colspan), a.xp6(1), a.hij(" ", a.gM2(2, 2, t.anggaran, "IDR", "Rp ", "1.2-2"), " ");
                }
            }
            function x_(i, d) {
                1 & i && a._UZ(0, "tr", 24);
            }
            function C_(i, d) {
                1 & i && a._UZ(0, "tr", 25);
            }
            function y_(i, d) {
                if (
                    (1 & i &&
                        (a.TgZ(0, "table", 12),
                        a.ynx(1, 13),
                        a.YNc(2, m_, 2, 0, "th", 14),
                        a.YNc(3, b_, 2, 2, "td", 15),
                        a.BQk(),
                        a.ynx(4, 16),
                        a.YNc(5, v_, 2, 0, "th", 14),
                        a.YNc(6, k_, 2, 2, "td", 15),
                        a.BQk(),
                        a.ynx(7, 17),
                        a.YNc(8, f_, 2, 0, "th", 14),
                        a.YNc(9, S_, 3, 7, "td", 15),
                        a.BQk(),
                        a.ynx(10, 18),
                        a.YNc(11, j_, 2, 0, "th", 14),
                        a.YNc(12, T_, 2, 2, "td", 15),
                        a.BQk(),
                        a.ynx(13, 19),
                        a.YNc(14, I_, 2, 0, "th", 14),
                        a.YNc(15, B_, 3, 7, "td", 15),
                        a.BQk(),
                        a.YNc(16, x_, 1, 0, "tr", 20),
                        a.YNc(17, C_, 1, 0, "tr", 21),
                        a.qZA()),
                    2 & i)
                ) {
                    const t = a.oxw(2);
                    a.Q6J("dataSource", t.dataSource), a.xp6(16), a.Q6J("matHeaderRowDef", t.displayedColumns), a.xp6(1), a.Q6J("matRowDefColumns", t.displayedColumns);
                }
            }
            const L_ = function () {
                return [10, 20, 50, 100];
            };
            function w_(i, d) {
                if (1 & i) {
                    const t = a.EpF();
                    a.TgZ(0, "div", 3)(1, "div", 4)(2, "div", 5)(3, "div", 6),
                        a._UZ(4, "span", 7),
                        a.TgZ(5, "input", 8),
                        a.NdJ("keyup", function (n) {
                            return a.CHM(t), a.oxw().applyFilter(n);
                        }),
                        a.qZA()(),
                        a.TgZ(6, "div", 9),
                        a.YNc(7, y_, 18, 3, "table", 10),
                        a._UZ(8, "mat-paginator", 11),
                        a.qZA()()()();
                }
                if (2 & i) {
                    const t = a.oxw();
                    a.xp6(4), a.Q6J("inlineSVG", "./assets/media/icons/duotune/general/gen021.svg"), a.xp6(3), a.Q6J("ngIf", t.dataSource.data.length > 0), a.xp6(1), a.Q6J("pageSizeOptions", a.DdM(3, L_));
                }
            }
            function D_(i, d) {
                if ((1 & i && a._UZ(0, "app-renja-rincian-belanja-list", 26), 2 & i)) {
                    const t = a.oxw();
                    a.Q6J("id_sub_bl", t.id_sub_bl)("subBelanja", t.subBelanja);
                }
            }
            let R_ = (() => {
                class i {
                    constructor(t, e, n, s, o, l) {
                        (this.activatedRoute = t),
                            (this.modalService = e),
                            (this.konfigurasiService = n),
                            (this.rincianBelanjaService = s),
                            (this.subBelanjaService = o),
                            (this.akunService = l),
                            (this.displayedColumns = ["uraian_akun", "anggaran"]),
                            (this.paguValidasi = 0),
                            (this.rincianAnggaran = 0),
                            (this.display = []),
                            (this.dataSource = new L.by(this.akunList)),
                            (this.rincianBelanjaList = []),
                            (this.rincianBelanjaIsLoading = !1),
                            (this.subBelanjaIsLoading = !1),
                            (this.akunListIsLoading = !1);
                    }
                    set paginator(t) {
                        this.dataSource.paginator = t;
                    }
                    set sort(t) {
                        this.dataSource.sort = t;
                    }
                    ngOnInit() {
                        this.activatedRoute.params.subscribe((t) => {
                            (this.id_sub_bl = t.id_sub_bl), this.loadRincianBelanjaList(), this.loadSubBelanjaList();
                        });
                    }
                    ngOnDestroy() {
                        var t, e;
                        null === (t = this.rincianBelanjaSub) || void 0 === t || t.unsubscribe(), null === (e = this.subBelanjaSub) || void 0 === e || e.unsubscribe();
                    }
                    applyFilter(t) {}
                    loadRincianBelanjaList() {
                        const t = new FormData();
                        t.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                            t.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                            t.append("id_sub_bl", String(this.id_sub_bl || 0)),
                            (this.rincianBelanjaIsLoading = !0),
                            (this.rincianBelanjaSub = this.rincianBelanjaService.rekapAkunList(t).subscribe({
                                next: (e) => {
                                    (this.rincianBelanjaIsLoading = !1), (this.rincianBelanjaList = e.data);
                                    const n = this.rincianBelanjaList.map((o) => o.id_akun),
                                        s = new FormData();
                                    s.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                                        s.append("id_akun_list", String(n.join(","))),
                                        (this.akunListIsLoading = !0),
                                        this.akunService.findByIdAkunList(s).subscribe({
                                            next: (o) => {
                                                (this.akunListIsLoading = !1), (this.akunList = o.data), this.buildDataSource();
                                            },
                                            error: (o) => {
                                                this.akunListIsLoading = !1;
                                            },
                                        });
                                },
                                error: (e) => {
                                    this.rincianBelanjaIsLoading = !1;
                                },
                            }));
                    }
                    loadSubBelanjaList() {
                        const t = new FormData();
                        t.append("tahun", String(this.konfigurasiService.getTahun() || 0)),
                            t.append("id_daerah", String(this.konfigurasiService.getIdDaerah() || 0)),
                            (this.subBelanjaIsLoading = !0),
                            (this.subBelanjaSub = this.subBelanjaService.view(String(this.id_sub_bl), t).subscribe({
                                next: (e) => {
                                    (this.subBelanjaIsLoading = !1), (this.subBelanja = e.data[0]);
                                },
                                error: (e) => {
                                    this.subBelanjaIsLoading = !1;
                                },
                            }));
                    }
                    buildDataSource() {
                        let t = 0;
                        this.rincianBelanjaList
                            .sort((e, n) => e.urut_sasaran - n.urut_sasaran)
                            .forEach((e) => {
                                const n = this.akunList.find((s) => s.id_akun === e.id_akun);
                                (this.display[t] = {
                                    subBelanja: this.subBelanja,
                                    rincianBelanja: e,
                                    kode_akun: null == n ? void 0 : n.kode_akun,
                                    nama_akun: null == n ? void 0 : n.nama_akun,
                                    total_belanja: e.total_belanja,
                                    tingkatan: "",
                                    addData: !1,
                                    editData: !1,
                                }),
                                    t++;
                            }),
                            (this.display[0] = {
                                subBelanja: "",
                                rincianBelanja: "",
                                id_rinci_sub_bl: "",
                                nama_akun: "",
                                nama_standar_harga: "",
                                harga_satuan: "",
                                jenis_bl: "",
                                tingkatan: "",
                                addData: !1,
                                editData: !0,
                                lockData: !0,
                                deleteData: !0,
                            }),
                            (this.dataSource.data = this.display.sort((e, n) => e.kode_akun.localeCompare(n.kode_akun))),
                            (this.dataSource.paginator = this.paginator),
                            (this.dataSource.sort = this.sort);
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(Aa.gz), a.Y36(aa.FF), a.Y36(Ra.W), a.Y36($a), a.Y36(Wa.x), a.Y36(ce.f));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-rekap-akun"]],
                        viewQuery: function (t, e) {
                            if ((1 & t && (a.Gf(X.NW, 5), a.Gf(S.YE, 5)), 2 & t)) {
                                let n;
                                a.iGM((n = a.CRH())) && (e.paginator = n.first), a.iGM((n = a.CRH())) && (e.sort = n.first);
                            }
                        },
                        decls: 3,
                        vars: 3,
                        consts: [
                            [4, "ngIf"],
                            ["class", "card card-xl-stretch mb-xl-8", 4, "ngIf"],
                            [3, "id_sub_bl", "subBelanja", 4, "ngIf"],
                            [1, "card", "card-xl-stretch", "mb-xl-8"],
                            [1, "row", "mx-3", "mt-3"],
                            [1, "card-body", "py-3"],
                            [1, "d-flex", "align-items-center", "position-relative", "my-1", "py-2"],
                            [1, "svg-icon", "svg-icon-1", "position-absolute", "ms-4", 3, "inlineSVG"],
                            ["type", "text", "placeholder", "Pencarian", 1, "form-control", "form-control", "ps-14", 3, "keyup"],
                            [1, "table-responsive"],
                            ["mat-table", "", "matSort", "", "class", "table table-row-dashed table-row-gray-300 align-middle gs-0 gy-4", 3, "dataSource", 4, "ngIf"],
                            ["showFirstLastButtons", "", 3, "pageSizeOptions"],
                            ["mat-table", "", "matSort", "", 1, "table", "table-row-dashed", "table-row-gray-300", "align-middle", "gs-0", "gy-4", 3, "dataSource"],
                            ["matColumnDef", "kode_akun"],
                            ["mat-header-cell", "", "class", "fw-bolder text-muted", 4, "matHeaderCellDef"],
                            ["class", "pe-1", "mat-cell", "", 4, "matCellDef"],
                            ["matColumnDef", "nama_akun"],
                            ["matColumnDef", "total_belanja"],
                            ["matColumnDef", "uraian_akun"],
                            ["matColumnDef", "anggaran"],
                            ["mat-header-row", "", 4, "matHeaderRowDef"],
                            ["mat-row", "", 4, "matRowDef", "matRowDefColumns"],
                            ["mat-header-cell", "", 1, "fw-bolder", "text-muted"],
                            ["mat-cell", "", 1, "pe-1"],
                            ["mat-header-row", ""],
                            ["mat-row", ""],
                            [3, "id_sub_bl", "subBelanja"],
                        ],
                        template: function (t, e) {
                            1 & t && (a.YNc(0, g_, 1, 0, "app-loading-spinner", 0), a.YNc(1, w_, 9, 4, "div", 1), a.YNc(2, D_, 1, 2, "app-renja-rincian-belanja-list", 2)),
                                2 & t &&
                                    (a.Q6J("ngIf", e.rincianBelanjaIsLoading || e.akunListIsLoading || e.subBelanjaIsLoading),
                                    a.xp6(1),
                                    a.Q6J("ngIf", !e.rincianBelanjaIsLoading && !e.akunListIsLoading && !e.subBelanjaIsLoading),
                                    a.xp6(1),
                                    a.Q6J("ngIf", !e.rincianBelanjaIsLoading && !e.akunListIsLoading && !e.subBelanjaIsLoading));
                        },
                        directives: [j.O5, Ha.g, Ma.d$, L.BZ, S.YE, L.w1, L.fO, L.ge, L.Dz, L.ev, L.as, L.XQ, L.nj, L.Gk, X.NW, gt],
                        pipes: [j.H9],
                        styles: [""],
                    })),
                    i
                );
            })();
            function A_(i, d) {
                1 & i &&
                    (a.TgZ(0, "div", 11)(1, "h4", 12),
                    a._uU(2, "Perangkat Daerah dikunci."),
                    a.qZA(),
                    a.TgZ(3, "p"),
                    a._uU(4, " Admin Daerah dapat mengubahnya di halaman "),
                    a.TgZ(5, "code"),
                    a._uU(6, "Pengaturan > Profil > Perangkat Daerah"),
                    a.qZA()()());
            }
            function F_(i, d) {
                if (
                    (1 & i &&
                        (a.TgZ(0, "div", 1)(1, "div", 2)(2, "div", 3)(3, "h3", 4),
                        a._uU(4),
                        a.qZA(),
                        a.YNc(5, A_, 7, 0, "div", 5),
                        a.qZA()(),
                        a.TgZ(6, "div", 6)(7, "ul", 7)(8, "li", 8)(9, "a", 9),
                        a._UZ(10, "span", 10),
                        a._uU(11, "Detil Sub Kegiatan "),
                        a.qZA()(),
                        a.TgZ(12, "li", 8)(13, "a", 9),
                        a._UZ(14, "span", 10),
                        a._uU(15, "Pemaketan Kerja "),
                        a.qZA()(),
                        a.TgZ(16, "li", 8)(17, "a", 9),
                        a._UZ(18, "span", 10),
                        a._uU(19, "Pengelompokan Belanja "),
                        a.qZA()(),
                        a.TgZ(20, "li", 8)(21, "a", 9),
                        a._UZ(22, "span", 10),
                        a._uU(23, "Keterangan Belanja "),
                        a.qZA()(),
                        a.TgZ(24, "li", 8)(25, "a", 9),
                        a._UZ(26, "span", 10),
                        a._uU(27, "Rekap Akun "),
                        a.qZA()()(),
                        a._UZ(28, "router-outlet"),
                        a.qZA()()),
                    2 & i)
                ) {
                    const t = a.oxw();
                    a.xp6(4),
                        a.Oqu(t.subBelanja.nama_unit),
                        a.xp6(1),
                        a.Q6J("ngIf", 1 == (null == t.setupUnit ? null : t.setupUnit.kunci_skpd)),
                        a.xp6(4),
                        a.hYB("routerLink", "", t.activeFullUrl, "/cascading/rincian/sub-kegiatan/", t.id_sub_bl, ""),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/files/fil012.svg"),
                        a.xp6(3),
                        a.hYB("routerLink", "", t.activeFullUrl, "/cascading/rincian/grup-pekerjaan/", t.id_sub_bl, ""),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/files/fil012.svg"),
                        a.xp6(3),
                        a.hYB("routerLink", "", t.activeFullUrl, "/cascading/rincian/grup-belanja/", t.id_sub_bl, ""),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/files/fil012.svg"),
                        a.xp6(3),
                        a.hYB("routerLink", "", t.activeFullUrl, "/cascading/rincian/keterangan-belanja/", t.id_sub_bl, ""),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/files/fil012.svg"),
                        a.xp6(3),
                        a.hYB("routerLink", "", t.activeFullUrl, "/cascading/rincian/rekap-akun/", t.id_sub_bl, ""),
                        a.xp6(1),
                        a.Q6J("inlineSVG", "./assets/media/icons/duotune/files/fil012.svg");
                }
            }
            let U_ = (() => {
                class i {
                    constructor(t, e, n, s, o, l, _) {
                        (this.activatedRoute = t),
                            (this.laporanService = e),
                            (this.toastr = n),
                            (this.router = s),
                            (this.konfigurasiService = o),
                            (this.renjaSetupUnitService = l),
                            (this.subBelanjaService = _),
                            (this.konfigurasiSession = JSON.parse(localStorage.getItem("sipd-konfigurasi"))),
                            (this.userSession = JSON.parse(localStorage.getItem("v0.0.0-authf649fc9a5f55"))),
                            (this.isLoading = !1),
                            (this.subBelanjaIsLoading = !1),
                            (this.viewSetupUnitIsLoading = !1);
                    }
                    ngOnInit() {
                        var t;
                        (this.activeFullUrl = "/" + this.router.url.split("/")[1] + "/" + this.router.url.split("/")[2]),
                            null === (t = this.activatedRoute.firstChild) ||
                                void 0 === t ||
                                t.params.subscribe((e) => {
                                    this.id_sub_bl = e.id_sub_bl;
                                    const n = new FormData();
                                    n.append("id_daerah", this.userSession.daerah_id),
                                        n.append("tahun", this.konfigurasiService.getTahun()),
                                        (this.subBelanjaIsLoading = !0),
                                        this.subBelanjaService.view(this.id_sub_bl, n).subscribe({
                                            next: (s) => {
                                                (this.subBelanjaIsLoading = !1), (this.subBelanja = s.data[0]), this.viewSetupUnit(this.subBelanja.id_unit);
                                            },
                                            error: (s) => {
                                                (this.subBelanjaIsLoading = !1), this.toastr.error("Data Sub Belanja Gagal DiLoad", "Error");
                                            },
                                        });
                                });
                    }
                    viewSetupUnit(t) {
                        const e = new FormData();
                        e.append("tahun", this.konfigurasiService.getTahun()),
                            e.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                            e.append("id_unit", t),
                            (this.viewSetupUnitIsLoading = !0),
                            (this.setupUnitSub = this.renjaSetupUnitService.findByIdUnit(e).subscribe({
                                next: (n) => {
                                    (this.viewSetupUnitIsLoading = !1), (this.setupUnit = n.data[0]);
                                },
                                error: (n) => {
                                    this.viewSetupUnitIsLoading = !1;
                                },
                            }));
                    }
                }
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)(a.Y36(Aa.gz), a.Y36(It.d), a.Y36(Na._W), a.Y36(Aa.F0), a.Y36(Ra.W), a.Y36(st.X), a.Y36(Wa.x));
                    }),
                    (i.ɵcmp = a.Xpm({
                        type: i,
                        selectors: [["app-renja-rincian-belanja"]],
                        decls: 1,
                        vars: 1,
                        consts: [
                            ["class", "card card-xl-stretch mb-xl-8", 4, "ngIf"],
                            [1, "card", "card-xl-stretch", "mb-xl-8"],
                            [1, "card-toolbar"],
                            [1, "row", "mx-5", "mt-5"],
                            [1, "text-semibold"],
                            ["class", "alert alert-warning", "role", "alert", 4, "ngIf"],
                            [1, "card-body", "py-3"],
                            [1, "nav", "nav-tabs", "nav-fill"],
                            [1, "nav-item", "me-1"],
                            ["routerLinkActive", "active", 1, "nav-link", "h5", 3, "routerLink"],
                            [1, "svg-icon", "svg-icon-3", "me-2", 2, "-webkit-transform", "scale(2)", "transform", "scale(2)", 3, "inlineSVG"],
                            ["role", "alert", 1, "alert", "alert-warning"],
                            [1, "alert-heading"],
                        ],
                        template: function (t, e) {
                            1 & t && a.YNc(0, F_, 29, 17, "div", 0), 2 & t && a.Q6J("ngIf", !e.subBelanjaIsLoading && !e.viewSetupUnitIsLoading);
                        },
                        directives: [j.O5, Aa.yS, Aa.Od, Ma.d$, Aa.lC],
                        styles: [""],
                    })),
                    i
                );
            })();
            var Z_ = D(88812),
                P_ = D(34218),
                N_ = D(76209);
            function M_(i, d) {
                1 & i && a._UZ(0, "app-loading-spinner");
            }
            function K_(i, d) {
                if (
                    (1 & i &&
                        (a.TgZ(0, "div", 3),
                        a._UZ(1, "div", 4),
                        a.TgZ(2, "div", 5)(3, "table", 6)(4, "tbody")(5, "tr")(6, "td", 7),
                        a._uU(7, "Perangkat Daerah"),
                        a.qZA(),
                        a.TgZ(8, "td", 8),
                        a._uU(9, ":"),
                        a.qZA(),
                        a.TgZ(10, "td"),
                        a._uU(11),
                        a.qZA()(),
                        a.TgZ(12, "tr")(13, "td", 7),
                        a._uU(14, "Bidang Urusan"),
                        a.qZA(),
                        a.TgZ(15, "td", 8),
                        a._uU(16, ":"),
                        a.qZA(),
                        a.TgZ(17, "td"),
                        a._uU(18),
                        a.qZA()(),
                        a.TgZ(19, "tr")(20, "td", 7),
                        a._uU(21, "Program"),
                        a.qZA(),
                        a.TgZ(22, "td", 8),
                        a._uU(23, ":"),
                        a.qZA(),
                        a.TgZ(24, "td"),
                        a._uU(25),
                        a.qZA()(),
                        a.TgZ(26, "tr")(27, "td", 7),
                        a._uU(28, "Kegiatan"),
                        a.qZA(),
                        a.TgZ(29, "td", 8),
                        a._uU(30, ":"),
                        a.qZA(),
                        a.TgZ(31, "td"),
                        a._uU(32),
                        a.qZA()(),
                        a.TgZ(33, "tr")(34, "td", 7),
                        a._uU(35, "Sub Kegiatan"),
                        a.qZA(),
                        a.TgZ(36, "td", 8),
                        a._uU(37, ":"),
                        a.qZA(),
                        a.TgZ(38, "td"),
                        a._uU(39),
                        a.qZA()()()()()()),
                    2 & i)
                ) {
                    const t = a.oxw();
                    a.xp6(11),
                        a.AsE("", t.kode_skpd, " ", t.nama_skpd, ""),
                        a.xp6(7),
                        a.AsE("", t.kode_bidang_urusan, " ", t.nama_bidang_urusan, ""),
                        a.xp6(7),
                        a.AsE("", t.kode_program, " ", t.nama_program, ""),
                        a.xp6(7),
                        a.AsE("", t.kode_giat, " ", t.nama_giat, ""),
                        a.xp6(7),
                        a.AsE("", t.kode_sub_giat, " ", t.nama_sub_giat, "");
                }
            }
            function J_(i, d) {
                if ((1 & i && a._UZ(0, "app-renja-rincian-belanja-list", 9), 2 & i)) {
                    const t = a.oxw();
                    a.Q6J("id_sub_bl", t.id_sub_bl)("subBelanja", t.subBelanja);
                }
            }
            const Y_ = { validation: !1 },
                W_ = [
                    { path: "", component: au },
                    { path: "belanja", component: Wr },
                    {
                        path: "rincian",
                        component: U_,
                        children: [
                            {
                                path: "sub-kegiatan/:id_sub_bl",
                                component: (() => {
                                    class i {
                                        constructor(t, e, n, s, o, l, _, r, u, k) {
                                            (this.activatedRoute = t),
                                                (this.konfigurasiService = e),
                                                (this.subBelanjaService = n),
                                                (this.urusanService = s),
                                                (this.bidangUrusanService = o),
                                                (this.skpdService = l),
                                                (this.subSkpdService = _),
                                                (this.programService = r),
                                                (this.giatService = u),
                                                (this.subGiatService = k),
                                                (this.kode_urusan = ""),
                                                (this.nama_urusan = ""),
                                                (this.kode_bidang_urusan = ""),
                                                (this.nama_bidang_urusan = ""),
                                                (this.kode_skpd = ""),
                                                (this.nama_skpd = ""),
                                                (this.kode_sub_skpd = ""),
                                                (this.nama_sub_skpd = ""),
                                                (this.kode_program = ""),
                                                (this.nama_program = ""),
                                                (this.kode_giat = ""),
                                                (this.nama_giat = ""),
                                                (this.kode_sub_giat = ""),
                                                (this.nama_sub_giat = ""),
                                                (this.subBelanjaIsLoading = !1),
                                                (this.urusanIsLoading = !1),
                                                (this.bidangUrusanIsLoading = !1),
                                                (this.skpdIsLoading = !1),
                                                (this.subSkpdIsLoading = !1),
                                                (this.programIsLoading = !1),
                                                (this.giatIsLoading = !1),
                                                (this.subGiatIsLoading = !1);
                                        }
                                        ngOnInit() {
                                            this.loadData();
                                        }
                                        ngOnDestroy() {
                                            var t;
                                            null === (t = this.subBelanjaViewSub) || void 0 === t || t.unsubscribe();
                                        }
                                        loadData() {
                                            this.activatedRoute.params.subscribe((t) => {
                                                this.id_sub_bl = t.id_sub_bl;
                                                const e = new FormData();
                                                e.append("tahun", this.konfigurasiService.getTahun()),
                                                    e.append("id_daerah", this.konfigurasiService.getIdDaerah()),
                                                    (this.subBelanjaIsLoading = !0),
                                                    (this.subBelanjaViewSub = this.subBelanjaService.view(String(this.id_sub_bl), e).subscribe({
                                                        next: (n) => {
                                                            var s, o, l, _, r, u, k, m, v, g, C, h, f, y, B, F;
                                                            (this.subBelanjaIsLoading = !1),
                                                                (this.subBelanja = n.data[0]),
                                                                (this.urusanIsLoading = !0),
                                                                this.urusanService
                                                                    .view((null === (s = this.subBelanja) || void 0 === s ? void 0 : s.id_urusan) || 0, (null === (o = this.subBelanja) || void 0 === o ? void 0 : o.tahun) || 0)
                                                                    .subscribe({
                                                                        next: (c) => {
                                                                            (this.urusanIsLoading = !1), c.data[0] && ((this.kode_urusan = c.data[0].kode_urusan), (this.nama_urusan = c.data[0].nama_urusan));
                                                                        },
                                                                        error: (c) => {
                                                                            this.urusanIsLoading = !1;
                                                                        },
                                                                    }),
                                                                (this.bidangUrusanIsLoading = !0),
                                                                this.bidangUrusanService
                                                                    .view((null === (l = this.subBelanja) || void 0 === l ? void 0 : l.id_bidang_urusan) || 0, (null === (_ = this.subBelanja) || void 0 === _ ? void 0 : _.tahun) || 0)
                                                                    .subscribe({
                                                                        next: (c) => {
                                                                            (this.bidangUrusanIsLoading = !1),
                                                                                c.data[0] && ((this.kode_bidang_urusan = c.data[0].kode_bidang_urusan), (this.nama_bidang_urusan = c.data[0].nama_bidang_urusan));
                                                                        },
                                                                        error: (c) => {
                                                                            this.bidangUrusanIsLoading = !1;
                                                                        },
                                                                    }),
                                                                (this.skpdIsLoading = !0),
                                                                this.skpdService
                                                                    .view(
                                                                        (null === (r = this.subBelanja) || void 0 === r ? void 0 : r.id_skpd) || 0,
                                                                        (null === (u = this.subBelanja) || void 0 === u ? void 0 : u.tahun) || 0,
                                                                        (null === (k = this.subBelanja) || void 0 === k ? void 0 : k.id_daerah) || 0
                                                                    )
                                                                    .subscribe({
                                                                        next: (c) => {
                                                                            (this.skpdIsLoading = !1), c.data[0] && ((this.kode_skpd = c.data[0].kode_skpd), (this.nama_skpd = c.data[0].nama_skpd));
                                                                        },
                                                                        error: (c) => {
                                                                            this.skpdIsLoading = !1;
                                                                        },
                                                                    }),
                                                                (this.subSkpdIsLoading = !0),
                                                                this.subSkpdService
                                                                    .view(
                                                                        String((null === (m = this.subBelanja) || void 0 === m ? void 0 : m.id_sub_skpd) || 0),
                                                                        String((null === (v = this.subBelanja) || void 0 === v ? void 0 : v.tahun) || 0),
                                                                        String((null === (g = this.subBelanja) || void 0 === g ? void 0 : g.id_daerah) || 0)
                                                                    )
                                                                    .subscribe({
                                                                        next: (c) => {
                                                                            (this.subSkpdIsLoading = !1), c.data[0] && ((this.kode_sub_skpd = c.data[0].kode_sub_skpd), (this.nama_sub_skpd = c.data[0].nama_sub_skpd));
                                                                        },
                                                                        error: (c) => {
                                                                            this.subSkpdIsLoading = !1;
                                                                        },
                                                                    }),
                                                                (this.programIsLoading = !0),
                                                                this.programService
                                                                    .view((null === (C = this.subBelanja) || void 0 === C ? void 0 : C.id_program) || 0, (null === (h = this.subBelanja) || void 0 === h ? void 0 : h.tahun) || 0)
                                                                    .subscribe({
                                                                        next: (c) => {
                                                                            (this.programIsLoading = !1), c.data[0] && ((this.kode_program = c.data[0].kode_program), (this.nama_program = c.data[0].nama_program));
                                                                        },
                                                                        error: (c) => {
                                                                            this.programIsLoading = !1;
                                                                        },
                                                                    }),
                                                                (this.giatIsLoading = !0),
                                                                this.giatService
                                                                    .view((null === (f = this.subBelanja) || void 0 === f ? void 0 : f.id_giat) || 0, (null === (y = this.subBelanja) || void 0 === y ? void 0 : y.tahun) || 0)
                                                                    .subscribe({
                                                                        next: (c) => {
                                                                            (this.giatIsLoading = !1), c.data[0] && ((this.kode_giat = c.data[0].kode_giat), (this.nama_giat = c.data[0].nama_giat));
                                                                        },
                                                                        error: (c) => {
                                                                            this.giatIsLoading = !1;
                                                                        },
                                                                    }),
                                                                (this.subGiatIsLoading = !0),
                                                                this.subGiatService
                                                                    .view((null === (B = this.subBelanja) || void 0 === B ? void 0 : B.id_sub_giat) || 0, (null === (F = this.subBelanja) || void 0 === F ? void 0 : F.tahun) || 0)
                                                                    .subscribe({
                                                                        next: (c) => {
                                                                            (this.subGiatIsLoading = !1), c.data[0] && ((this.kode_sub_giat = c.data[0].kode_sub_giat), (this.nama_sub_giat = c.data[0].nama_sub_giat));
                                                                        },
                                                                        error: (c) => {
                                                                            this.subGiatIsLoading = !1;
                                                                        },
                                                                    });
                                                        },
                                                        error: (n) => {
                                                            this.subBelanjaIsLoading = !1;
                                                        },
                                                    }));
                                            });
                                        }
                                    }
                                    return (
                                        (i.ɵfac = function (t) {
                                            return new (t || i)(a.Y36(Aa.gz), a.Y36(Ra.W), a.Y36(Wa.x), a.Y36(Z_.S), a.Y36(it.b), a.Y36(za.J), a.Y36(P_._), a.Y36(N_.Z), a.Y36(xe.X), a.Y36(tt.b));
                                        }),
                                        (i.ɵcmp = a.Xpm({
                                            type: i,
                                            selectors: [["app-renja-sub-kegiatan"]],
                                            decls: 3,
                                            vars: 3,
                                            consts: [
                                                [4, "ngIf"],
                                                ["class", "card card-xl-stretch mb-xl-8", 4, "ngIf"],
                                                [3, "id_sub_bl", "subBelanja", 4, "ngIf"],
                                                [1, "card", "card-xl-stretch", "mb-xl-8"],
                                                [1, "card-toolbar"],
                                                [1, "card-body", "py-3"],
                                                [1, "table", "table-striped", "m-b-0", "font-medium"],
                                                ["width", "120"],
                                                ["width", "5"],
                                                [3, "id_sub_bl", "subBelanja"],
                                            ],
                                            template: function (t, e) {
                                                1 & t && (a.YNc(0, M_, 1, 0, "app-loading-spinner", 0), a.YNc(1, K_, 40, 10, "div", 1), a.YNc(2, J_, 1, 2, "app-renja-rincian-belanja-list", 2)),
                                                    2 & t &&
                                                        (a.Q6J(
                                                            "ngIf",
                                                            e.subBelanjaIsLoading || e.urusanIsLoading || e.bidangUrusanIsLoading || e.skpdIsLoading || e.subSkpdIsLoading || e.programIsLoading || e.giatIsLoading || e.subGiatIsLoading
                                                        ),
                                                        a.xp6(1),
                                                        a.Q6J(
                                                            "ngIf",
                                                            !e.subBelanjaIsLoading &&
                                                                !e.urusanIsLoading &&
                                                                !e.bidangUrusanIsLoading &&
                                                                !e.skpdIsLoading &&
                                                                !e.subSkpdIsLoading &&
                                                                !e.programIsLoading &&
                                                                !e.giatIsLoading &&
                                                                !e.subGiatIsLoading &&
                                                                e.subBelanja
                                                        ),
                                                        a.xp6(1),
                                                        a.Q6J(
                                                            "ngIf",
                                                            !e.subBelanjaIsLoading &&
                                                                !e.urusanIsLoading &&
                                                                !e.bidangUrusanIsLoading &&
                                                                !e.skpdIsLoading &&
                                                                !e.subSkpdIsLoading &&
                                                                !e.programIsLoading &&
                                                                !e.giatIsLoading &&
                                                                !e.subGiatIsLoading &&
                                                                e.subBelanja
                                                        ));
                                            },
                                            directives: [j.O5, Ha.g, gt],
                                            styles: [""],
                                        })),
                                        i
                                    );
                                })(),
                            },
                            { path: "grup-pekerjaan/:id_sub_bl", component: Fe, data: { title: "Pemaketan Kerja", is_paket: 1 } },
                            { path: "grup-belanja/:id_sub_bl", component: Fe, data: { title: "Pengelompokan Belanja", is_paket: 2 } },
                            { path: "keterangan-belanja/:id_sub_bl", component: Xu, data: { title: "Keterangan Belanja" } },
                            { path: "rekap-akun/:id_sub_bl", component: R_ },
                        ],
                    },
                ];
            let G_ = (() => {
                class i {}
                return (
                    (i.ɵfac = function (t) {
                        return new (t || i)();
                    }),
                    (i.ɵmod = a.oAB({ type: i })),
                    (i.ɵinj = a.cJS({ providers: [j.H9], imports: [[j.ez, p.u5, p.UX, Aa.Bz.forChild(W_), Ma.vi, O.c, xa.lN, L.p0, S.JX, X.TU, wa.p9, aa.IJ, ot.yI.forRoot(Y_), _e.m, Ue.d, Ze]] })),
                    i
                );
            })();
        },
        30285: (Ya, La, D) => {
            D.d(La, { T: () => xa });
            var j = D(92340),
                p = D(5e3),
                wa = D(40520);
            let xa = (() => {
                class O {
                    constructor(S) {
                        this.http = S;
                    }
                    list(S) {
                        return this.http.post(`${j.N.apiUrlJadwal}/renstra_jadwal/list`, S);
                    }
                    view(S, L) {
                        return this.http.post(`${j.N.apiUrlJadwal}/renstra_jadwal/view/${S}`, L);
                    }
                    add(S) {
                        return this.http.post(`${j.N.apiUrlJadwal}/renstra_jadwal/add`, S);
                    }
                    update(S) {
                        return this.http.post(`${j.N.apiUrlJadwal}/renstra_jadwal/update`, S);
                    }
                    delete(S) {
                        return this.http.post(`${j.N.apiUrlJadwal}/renstra_jadwal/delete`, S);
                    }
                    lock(S) {
                        return this.http.post(`${j.N.apiUrlJadwal}/renstra_jadwal/lock`, S);
                    }
                    cekRpjmd(S) {
                        return this.http.post(`${j.N.apiUrlJadwal}/renstra_jadwal/jadwal_rpjmd`, S);
                    }
                    cekAktif(S) {
                        return this.http.post(`${j.N.apiUrlJadwal}/renstra_jadwal/cek_aktif`, S);
                    }
                    cekIsRpd(S) {
                        return this.http.post(`${j.N.apiUrlJadwal}/renstra_jadwal/cek_jadwal_rpd`, S);
                    }
                    listJadwalRpjmRpd(S) {
                        return this.http.post(`${j.N.apiUrlJadwal}/rpjm_jadwal/listAllJadwal`, S);
                    }
                    listTahapanRenstra() {
                        return this.http.get(`${j.N.apiUrlMaster}/tahapan/list/renstra`);
                    }
                    listSubTahap() {
                        return this.http.get(`${j.N.apiUrlMaster}/sub_rkpd/listall`);
                    }
                    cekSubTahap(S) {
                        return this.http.post(`${j.N.apiUrlJadwal}/renstra_jadwal/cek_subtahap`, S);
                    }
                    listSubTahapDinamis(S, L) {
                        return this.http.get(`${j.N.apiUrlMaster}/sub_rkpd/sub_tahap/${S}/${L}`);
                    }
                    roleAccess(S) {
                        return this.http.post(`${j.N.apiUrlMaster}/ref_group_menu/check_access`, S);
                    }
                }
                return (
                    (O.ɵfac = function (S) {
                        return new (S || O)(p.LFG(wa.eN));
                    }),
                    (O.ɵprov = p.Yz7({ token: O, factory: O.ɵfac, providedIn: "root" })),
                    O
                );
            })();
        },
        47525: (Ya, La, D) => {
            D.d(La, { V: () => O });
            var j = D(61135),
                p = D(92340),
                wa = D(5e3),
                xa = D(40520);
            let O = (() => {
                class X {
                    constructor(L) {
                        (this.http = L),
                            (this.id_tahap = 19),
                            (this.renstraWasCopied = !1),
                            (this.id_skpd_source = new j.X(0)),
                            (this.id_skpd$ = this.id_skpd_source.asObservable()),
                            (this.id_tahap_source = new j.X(0)),
                            (this.id_tahap$ = this.id_tahap_source.asObservable());
                    }
                    getIdTahap() {
                        return this.id_tahap;
                    }
                    setIdTahap(L) {
                        (this.id_tahap = L), this.id_tahap_source.next(L);
                    }
                    getNamaTahap() {
                        return 19 === this.id_tahap ? "RENSTRA" : "RENSTRA Perubahan";
                    }
                    getRenstraWasCopied() {
                        return this.renstraWasCopied;
                    }
                    setRenstraWasCopied(L) {
                        this.renstraWasCopied = L;
                    }
                    setIdSkpad(L) {
                        this.id_skpd_source.next(L);
                    }
                    roleAccess(L) {
                        return this.http.post(`${p.N.apiUrlMaster}/ref_group_menu/check_access`, L);
                    }
                }
                return (
                    (X.ɵfac = function (L) {
                        return new (L || X)(wa.LFG(xa.eN));
                    }),
                    (X.ɵprov = wa.Yz7({ token: X, factory: X.ɵfac, providedIn: "root" })),
                    X
                );
            })();
        },
        91049: (Ya, La, D) => {
            D.d(La, { O: () => xa });
            var j = D(92340),
                p = D(5e3),
                wa = D(40520);
            let xa = (() => {
                class O {
                    constructor(S) {
                        (this.http = S), (this.API_URL = `${j.N.apiUrlRenstra}`);
                    }
                    list(S) {
                        return this.http.post(this.API_URL + "/renstra_giat/list", S);
                    }
                    add(S) {
                        return this.http.post(this.API_URL + "/renstra_giat/add", S);
                    }
                    view(S, L) {
                        return this.http.post(this.API_URL + `/renstra_giat/view/${S}`, L);
                    }
                    update(S) {
                        return this.http.post(this.API_URL + "/renstra_giat/update", S);
                    }
                    updateByIdUnik(S) {
                        return this.http.post(this.API_URL + "/renstra_giat/updateByIdUnik", S);
                    }
                    delete(S) {
                        return this.http.post(this.API_URL + "/renstra_giat/delete", S);
                    }
                    copy(S) {
                        return this.http.post(this.API_URL + "/renstra_giat/copy", S);
                    }
                }
                return (
                    (O.ɵfac = function (S) {
                        return new (S || O)(p.LFG(wa.eN));
                    }),
                    (O.ɵprov = p.Yz7({ token: O, factory: O.ɵfac, providedIn: "root" })),
                    O
                );
            })();
        },
        985: (Ya, La, D) => {
            D.d(La, { z: () => wa });
            var j = D(5e3),
                p = D(39483);
            let wa = (() => {
                class xa {
                    constructor(X) {
                        this.modal = X;
                    }
                    ngOnInit() {}
                }
                return (
                    (xa.ɵfac = function (X) {
                        return new (X || xa)(j.Y36(p.Kz));
                    }),
                    (xa.ɵcmp = j.Xpm({
                        type: xa,
                        selectors: [["app-confirmation-dialog"]],
                        decls: 12,
                        vars: 0,
                        consts: [
                            [1, "modal-header"],
                            ["id", "modal-title", 1, "modal-title"],
                            ["type", "button", "aria-describedby", "modal-title", 1, "btn-close", 3, "click"],
                            [1, "modal-body"],
                            [1, "modal-footer"],
                            ["type", "button", 1, "btn", "btn-secondary", 3, "click"],
                            ["type", "button", 1, "btn", "btn-danger", 3, "click"],
                        ],
                        template: function (X, S) {
                            1 & X &&
                                (j.TgZ(0, "div", 0)(1, "h4", 1),
                                j._uU(2, "Menghapus Data"),
                                j.qZA(),
                                j.TgZ(3, "button", 2),
                                j.NdJ("click", function () {
                                    return S.modal.dismiss("Cross click");
                                }),
                                j.qZA()(),
                                j.TgZ(4, "div", 3)(5, "p"),
                                j._uU(6, "Apakah Anda yakin ingin menghapus data ini?"),
                                j.qZA()(),
                                j.TgZ(7, "div", 4)(8, "button", 5),
                                j.NdJ("click", function () {
                                    return S.modal.dismiss("cancel click");
                                }),
                                j._uU(9, " Tidak, batalkan "),
                                j.qZA(),
                                j.TgZ(10, "button", 6),
                                j.NdJ("click", function () {
                                    return S.modal.close("Ok click");
                                }),
                                j._uU(11, " Ya, hapus data ini "),
                                j.qZA()());
                        },
                        styles: [""],
                    })),
                    xa
                );
            })();
        },
    },
]);
